diff --git a/node_modules/primitive/dist/browser.js b/node_modules/primitive/dist/browser.js
deleted file mode 100644
index 239f95c..0000000
--- a/node_modules/primitive/dist/browser.js
+++ /dev/null
@@ -1,6791 +0,0 @@
-'use strict';
-
-function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
-
-var ow = _interopDefault(require('ow'));
-
-var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
-
-function unwrapExports (x) {
-	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
-}
-
-function createCommonjsModule(fn, module) {
-	return module = { exports: {} }, fn(module, module.exports), module.exports;
-}
-
-var runtime = createCommonjsModule(function (module) {
-/**
- * Copyright (c) 2014-present, Facebook, Inc.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-!(function(global) {
-
-  var Op = Object.prototype;
-  var hasOwn = Op.hasOwnProperty;
-  var undefined; // More compressible than void 0.
-  var $Symbol = typeof Symbol === "function" ? Symbol : {};
-  var iteratorSymbol = $Symbol.iterator || "@@iterator";
-  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
-  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
-  var runtime = global.regeneratorRuntime;
-  if (runtime) {
-    {
-      // If regeneratorRuntime is defined globally and we're in a module,
-      // make the exports object identical to regeneratorRuntime.
-      module.exports = runtime;
-    }
-    // Don't bother evaluating the rest of this file if the runtime was
-    // already defined globally.
-    return;
-  }
-
-  // Define the runtime globally (as expected by generated code) as either
-  // module.exports (if we're in a module) or a new, empty object.
-  runtime = global.regeneratorRuntime = module.exports;
-
-  function wrap(innerFn, outerFn, self, tryLocsList) {
-    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
-    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
-    var generator = Object.create(protoGenerator.prototype);
-    var context = new Context(tryLocsList || []);
-
-    // The ._invoke method unifies the implementations of the .next,
-    // .throw, and .return methods.
-    generator._invoke = makeInvokeMethod(innerFn, self, context);
-
-    return generator;
-  }
-  runtime.wrap = wrap;
-
-  // Try/catch helper to minimize deoptimizations. Returns a completion
-  // record like context.tryEntries[i].completion. This interface could
-  // have been (and was previously) designed to take a closure to be
-  // invoked without arguments, but in all the cases we care about we
-  // already have an existing method we want to call, so there's no need
-  // to create a new function object. We can even get away with assuming
-  // the method takes exactly one argument, since that happens to be true
-  // in every case, so we don't have to touch the arguments object. The
-  // only additional allocation required is the completion record, which
-  // has a stable shape and so hopefully should be cheap to allocate.
-  function tryCatch(fn, obj, arg) {
-    try {
-      return { type: "normal", arg: fn.call(obj, arg) };
-    } catch (err) {
-      return { type: "throw", arg: err };
-    }
-  }
-
-  var GenStateSuspendedStart = "suspendedStart";
-  var GenStateSuspendedYield = "suspendedYield";
-  var GenStateExecuting = "executing";
-  var GenStateCompleted = "completed";
-
-  // Returning this object from the innerFn has the same effect as
-  // breaking out of the dispatch switch statement.
-  var ContinueSentinel = {};
-
-  // Dummy constructor functions that we use as the .constructor and
-  // .constructor.prototype properties for functions that return Generator
-  // objects. For full spec compliance, you may wish to configure your
-  // minifier not to mangle the names of these two functions.
-  function Generator() {}
-  function GeneratorFunction() {}
-  function GeneratorFunctionPrototype() {}
-
-  // This is a polyfill for %IteratorPrototype% for environments that
-  // don't natively support it.
-  var IteratorPrototype = {};
-  IteratorPrototype[iteratorSymbol] = function () {
-    return this;
-  };
-
-  var getProto = Object.getPrototypeOf;
-  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
-  if (NativeIteratorPrototype &&
-      NativeIteratorPrototype !== Op &&
-      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
-    // This environment has a native %IteratorPrototype%; use it instead
-    // of the polyfill.
-    IteratorPrototype = NativeIteratorPrototype;
-  }
-
-  var Gp = GeneratorFunctionPrototype.prototype =
-    Generator.prototype = Object.create(IteratorPrototype);
-  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
-  GeneratorFunctionPrototype.constructor = GeneratorFunction;
-  GeneratorFunctionPrototype[toStringTagSymbol] =
-    GeneratorFunction.displayName = "GeneratorFunction";
-
-  // Helper for defining the .next, .throw, and .return methods of the
-  // Iterator interface in terms of a single ._invoke method.
-  function defineIteratorMethods(prototype) {
-    ["next", "throw", "return"].forEach(function(method) {
-      prototype[method] = function(arg) {
-        return this._invoke(method, arg);
-      };
-    });
-  }
-
-  runtime.isGeneratorFunction = function(genFun) {
-    var ctor = typeof genFun === "function" && genFun.constructor;
-    return ctor
-      ? ctor === GeneratorFunction ||
-        // For the native GeneratorFunction constructor, the best we can
-        // do is to check its .name property.
-        (ctor.displayName || ctor.name) === "GeneratorFunction"
-      : false;
-  };
-
-  runtime.mark = function(genFun) {
-    if (Object.setPrototypeOf) {
-      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
-    } else {
-      genFun.__proto__ = GeneratorFunctionPrototype;
-      if (!(toStringTagSymbol in genFun)) {
-        genFun[toStringTagSymbol] = "GeneratorFunction";
-      }
-    }
-    genFun.prototype = Object.create(Gp);
-    return genFun;
-  };
-
-  // Within the body of any async function, `await x` is transformed to
-  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
-  // `hasOwn.call(value, "__await")` to determine if the yielded value is
-  // meant to be awaited.
-  runtime.awrap = function(arg) {
-    return { __await: arg };
-  };
-
-  function AsyncIterator(generator) {
-    function invoke(method, arg, resolve, reject) {
-      var record = tryCatch(generator[method], generator, arg);
-      if (record.type === "throw") {
-        reject(record.arg);
-      } else {
-        var result = record.arg;
-        var value = result.value;
-        if (value &&
-            typeof value === "object" &&
-            hasOwn.call(value, "__await")) {
-          return Promise.resolve(value.__await).then(function(value) {
-            invoke("next", value, resolve, reject);
-          }, function(err) {
-            invoke("throw", err, resolve, reject);
-          });
-        }
-
-        return Promise.resolve(value).then(function(unwrapped) {
-          // When a yielded Promise is resolved, its final value becomes
-          // the .value of the Promise<{value,done}> result for the
-          // current iteration. If the Promise is rejected, however, the
-          // result for this iteration will be rejected with the same
-          // reason. Note that rejections of yielded Promises are not
-          // thrown back into the generator function, as is the case
-          // when an awaited Promise is rejected. This difference in
-          // behavior between yield and await is important, because it
-          // allows the consumer to decide what to do with the yielded
-          // rejection (swallow it and continue, manually .throw it back
-          // into the generator, abandon iteration, whatever). With
-          // await, by contrast, there is no opportunity to examine the
-          // rejection reason outside the generator function, so the
-          // only option is to throw it from the await expression, and
-          // let the generator function handle the exception.
-          result.value = unwrapped;
-          resolve(result);
-        }, reject);
-      }
-    }
-
-    var previousPromise;
-
-    function enqueue(method, arg) {
-      function callInvokeWithMethodAndArg() {
-        return new Promise(function(resolve, reject) {
-          invoke(method, arg, resolve, reject);
-        });
-      }
-
-      return previousPromise =
-        // If enqueue has been called before, then we want to wait until
-        // all previous Promises have been resolved before calling invoke,
-        // so that results are always delivered in the correct order. If
-        // enqueue has not been called before, then it is important to
-        // call invoke immediately, without waiting on a callback to fire,
-        // so that the async generator function has the opportunity to do
-        // any necessary setup in a predictable way. This predictability
-        // is why the Promise constructor synchronously invokes its
-        // executor callback, and why async functions synchronously
-        // execute code before the first await. Since we implement simple
-        // async functions in terms of async generators, it is especially
-        // important to get this right, even though it requires care.
-        previousPromise ? previousPromise.then(
-          callInvokeWithMethodAndArg,
-          // Avoid propagating failures to Promises returned by later
-          // invocations of the iterator.
-          callInvokeWithMethodAndArg
-        ) : callInvokeWithMethodAndArg();
-    }
-
-    // Define the unified helper method that is used to implement .next,
-    // .throw, and .return (see defineIteratorMethods).
-    this._invoke = enqueue;
-  }
-
-  defineIteratorMethods(AsyncIterator.prototype);
-  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
-    return this;
-  };
-  runtime.AsyncIterator = AsyncIterator;
-
-  // Note that simple async functions are implemented on top of
-  // AsyncIterator objects; they just return a Promise for the value of
-  // the final result produced by the iterator.
-  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
-    var iter = new AsyncIterator(
-      wrap(innerFn, outerFn, self, tryLocsList)
-    );
-
-    return runtime.isGeneratorFunction(outerFn)
-      ? iter // If outerFn is a generator, return the full iterator.
-      : iter.next().then(function(result) {
-          return result.done ? result.value : iter.next();
-        });
-  };
-
-  function makeInvokeMethod(innerFn, self, context) {
-    var state = GenStateSuspendedStart;
-
-    return function invoke(method, arg) {
-      if (state === GenStateExecuting) {
-        throw new Error("Generator is already running");
-      }
-
-      if (state === GenStateCompleted) {
-        if (method === "throw") {
-          throw arg;
-        }
-
-        // Be forgiving, per 25.3.3.3.3 of the spec:
-        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
-        return doneResult();
-      }
-
-      context.method = method;
-      context.arg = arg;
-
-      while (true) {
-        var delegate = context.delegate;
-        if (delegate) {
-          var delegateResult = maybeInvokeDelegate(delegate, context);
-          if (delegateResult) {
-            if (delegateResult === ContinueSentinel) continue;
-            return delegateResult;
-          }
-        }
-
-        if (context.method === "next") {
-          // Setting context._sent for legacy support of Babel's
-          // function.sent implementation.
-          context.sent = context._sent = context.arg;
-
-        } else if (context.method === "throw") {
-          if (state === GenStateSuspendedStart) {
-            state = GenStateCompleted;
-            throw context.arg;
-          }
-
-          context.dispatchException(context.arg);
-
-        } else if (context.method === "return") {
-          context.abrupt("return", context.arg);
-        }
-
-        state = GenStateExecuting;
-
-        var record = tryCatch(innerFn, self, context);
-        if (record.type === "normal") {
-          // If an exception is thrown from innerFn, we leave state ===
-          // GenStateExecuting and loop back for another invocation.
-          state = context.done
-            ? GenStateCompleted
-            : GenStateSuspendedYield;
-
-          if (record.arg === ContinueSentinel) {
-            continue;
-          }
-
-          return {
-            value: record.arg,
-            done: context.done
-          };
-
-        } else if (record.type === "throw") {
-          state = GenStateCompleted;
-          // Dispatch the exception by looping back around to the
-          // context.dispatchException(context.arg) call above.
-          context.method = "throw";
-          context.arg = record.arg;
-        }
-      }
-    };
-  }
-
-  // Call delegate.iterator[context.method](context.arg) and handle the
-  // result, either by returning a { value, done } result from the
-  // delegate iterator, or by modifying context.method and context.arg,
-  // setting context.delegate to null, and returning the ContinueSentinel.
-  function maybeInvokeDelegate(delegate, context) {
-    var method = delegate.iterator[context.method];
-    if (method === undefined) {
-      // A .throw or .return when the delegate iterator has no .throw
-      // method always terminates the yield* loop.
-      context.delegate = null;
-
-      if (context.method === "throw") {
-        if (delegate.iterator.return) {
-          // If the delegate iterator has a return method, give it a
-          // chance to clean up.
-          context.method = "return";
-          context.arg = undefined;
-          maybeInvokeDelegate(delegate, context);
-
-          if (context.method === "throw") {
-            // If maybeInvokeDelegate(context) changed context.method from
-            // "return" to "throw", let that override the TypeError below.
-            return ContinueSentinel;
-          }
-        }
-
-        context.method = "throw";
-        context.arg = new TypeError(
-          "The iterator does not provide a 'throw' method");
-      }
-
-      return ContinueSentinel;
-    }
-
-    var record = tryCatch(method, delegate.iterator, context.arg);
-
-    if (record.type === "throw") {
-      context.method = "throw";
-      context.arg = record.arg;
-      context.delegate = null;
-      return ContinueSentinel;
-    }
-
-    var info = record.arg;
-
-    if (! info) {
-      context.method = "throw";
-      context.arg = new TypeError("iterator result is not an object");
-      context.delegate = null;
-      return ContinueSentinel;
-    }
-
-    if (info.done) {
-      // Assign the result of the finished delegate to the temporary
-      // variable specified by delegate.resultName (see delegateYield).
-      context[delegate.resultName] = info.value;
-
-      // Resume execution at the desired location (see delegateYield).
-      context.next = delegate.nextLoc;
-
-      // If context.method was "throw" but the delegate handled the
-      // exception, let the outer generator proceed normally. If
-      // context.method was "next", forget context.arg since it has been
-      // "consumed" by the delegate iterator. If context.method was
-      // "return", allow the original .return call to continue in the
-      // outer generator.
-      if (context.method !== "return") {
-        context.method = "next";
-        context.arg = undefined;
-      }
-
-    } else {
-      // Re-yield the result returned by the delegate method.
-      return info;
-    }
-
-    // The delegate iterator is finished, so forget it and continue with
-    // the outer generator.
-    context.delegate = null;
-    return ContinueSentinel;
-  }
-
-  // Define Generator.prototype.{next,throw,return} in terms of the
-  // unified ._invoke helper method.
-  defineIteratorMethods(Gp);
-
-  Gp[toStringTagSymbol] = "Generator";
-
-  // A Generator should always return itself as the iterator object when the
-  // @@iterator function is called on it. Some browsers' implementations of the
-  // iterator prototype chain incorrectly implement this, causing the Generator
-  // object to not be returned from this call. This ensures that doesn't happen.
-  // See https://github.com/facebook/regenerator/issues/274 for more details.
-  Gp[iteratorSymbol] = function() {
-    return this;
-  };
-
-  Gp.toString = function() {
-    return "[object Generator]";
-  };
-
-  function pushTryEntry(locs) {
-    var entry = { tryLoc: locs[0] };
-
-    if (1 in locs) {
-      entry.catchLoc = locs[1];
-    }
-
-    if (2 in locs) {
-      entry.finallyLoc = locs[2];
-      entry.afterLoc = locs[3];
-    }
-
-    this.tryEntries.push(entry);
-  }
-
-  function resetTryEntry(entry) {
-    var record = entry.completion || {};
-    record.type = "normal";
-    delete record.arg;
-    entry.completion = record;
-  }
-
-  function Context(tryLocsList) {
-    // The root entry object (effectively a try statement without a catch
-    // or a finally block) gives us a place to store values thrown from
-    // locations where there is no enclosing try statement.
-    this.tryEntries = [{ tryLoc: "root" }];
-    tryLocsList.forEach(pushTryEntry, this);
-    this.reset(true);
-  }
-
-  runtime.keys = function(object) {
-    var keys = [];
-    for (var key in object) {
-      keys.push(key);
-    }
-    keys.reverse();
-
-    // Rather than returning an object with a next method, we keep
-    // things simple and return the next function itself.
-    return function next() {
-      while (keys.length) {
-        var key = keys.pop();
-        if (key in object) {
-          next.value = key;
-          next.done = false;
-          return next;
-        }
-      }
-
-      // To avoid creating an additional object, we just hang the .value
-      // and .done properties off the next function object itself. This
-      // also ensures that the minifier will not anonymize the function.
-      next.done = true;
-      return next;
-    };
-  };
-
-  function values(iterable) {
-    if (iterable) {
-      var iteratorMethod = iterable[iteratorSymbol];
-      if (iteratorMethod) {
-        return iteratorMethod.call(iterable);
-      }
-
-      if (typeof iterable.next === "function") {
-        return iterable;
-      }
-
-      if (!isNaN(iterable.length)) {
-        var i = -1, next = function next() {
-          while (++i < iterable.length) {
-            if (hasOwn.call(iterable, i)) {
-              next.value = iterable[i];
-              next.done = false;
-              return next;
-            }
-          }
-
-          next.value = undefined;
-          next.done = true;
-
-          return next;
-        };
-
-        return next.next = next;
-      }
-    }
-
-    // Return an iterator with no values.
-    return { next: doneResult };
-  }
-  runtime.values = values;
-
-  function doneResult() {
-    return { value: undefined, done: true };
-  }
-
-  Context.prototype = {
-    constructor: Context,
-
-    reset: function(skipTempReset) {
-      this.prev = 0;
-      this.next = 0;
-      // Resetting context._sent for legacy support of Babel's
-      // function.sent implementation.
-      this.sent = this._sent = undefined;
-      this.done = false;
-      this.delegate = null;
-
-      this.method = "next";
-      this.arg = undefined;
-
-      this.tryEntries.forEach(resetTryEntry);
-
-      if (!skipTempReset) {
-        for (var name in this) {
-          // Not sure about the optimal order of these conditions:
-          if (name.charAt(0) === "t" &&
-              hasOwn.call(this, name) &&
-              !isNaN(+name.slice(1))) {
-            this[name] = undefined;
-          }
-        }
-      }
-    },
-
-    stop: function() {
-      this.done = true;
-
-      var rootEntry = this.tryEntries[0];
-      var rootRecord = rootEntry.completion;
-      if (rootRecord.type === "throw") {
-        throw rootRecord.arg;
-      }
-
-      return this.rval;
-    },
-
-    dispatchException: function(exception) {
-      if (this.done) {
-        throw exception;
-      }
-
-      var context = this;
-      function handle(loc, caught) {
-        record.type = "throw";
-        record.arg = exception;
-        context.next = loc;
-
-        if (caught) {
-          // If the dispatched exception was caught by a catch block,
-          // then let that catch block handle the exception normally.
-          context.method = "next";
-          context.arg = undefined;
-        }
-
-        return !! caught;
-      }
-
-      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
-        var entry = this.tryEntries[i];
-        var record = entry.completion;
-
-        if (entry.tryLoc === "root") {
-          // Exception thrown outside of any try block that could handle
-          // it, so set the completion value of the entire function to
-          // throw the exception.
-          return handle("end");
-        }
-
-        if (entry.tryLoc <= this.prev) {
-          var hasCatch = hasOwn.call(entry, "catchLoc");
-          var hasFinally = hasOwn.call(entry, "finallyLoc");
-
-          if (hasCatch && hasFinally) {
-            if (this.prev < entry.catchLoc) {
-              return handle(entry.catchLoc, true);
-            } else if (this.prev < entry.finallyLoc) {
-              return handle(entry.finallyLoc);
-            }
-
-          } else if (hasCatch) {
-            if (this.prev < entry.catchLoc) {
-              return handle(entry.catchLoc, true);
-            }
-
-          } else if (hasFinally) {
-            if (this.prev < entry.finallyLoc) {
-              return handle(entry.finallyLoc);
-            }
-
-          } else {
-            throw new Error("try statement without catch or finally");
-          }
-        }
-      }
-    },
-
-    abrupt: function(type, arg) {
-      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
-        var entry = this.tryEntries[i];
-        if (entry.tryLoc <= this.prev &&
-            hasOwn.call(entry, "finallyLoc") &&
-            this.prev < entry.finallyLoc) {
-          var finallyEntry = entry;
-          break;
-        }
-      }
-
-      if (finallyEntry &&
-          (type === "break" ||
-           type === "continue") &&
-          finallyEntry.tryLoc <= arg &&
-          arg <= finallyEntry.finallyLoc) {
-        // Ignore the finally entry if control is not jumping to a
-        // location outside the try/catch block.
-        finallyEntry = null;
-      }
-
-      var record = finallyEntry ? finallyEntry.completion : {};
-      record.type = type;
-      record.arg = arg;
-
-      if (finallyEntry) {
-        this.method = "next";
-        this.next = finallyEntry.finallyLoc;
-        return ContinueSentinel;
-      }
-
-      return this.complete(record);
-    },
-
-    complete: function(record, afterLoc) {
-      if (record.type === "throw") {
-        throw record.arg;
-      }
-
-      if (record.type === "break" ||
-          record.type === "continue") {
-        this.next = record.arg;
-      } else if (record.type === "return") {
-        this.rval = this.arg = record.arg;
-        this.method = "return";
-        this.next = "end";
-      } else if (record.type === "normal" && afterLoc) {
-        this.next = afterLoc;
-      }
-
-      return ContinueSentinel;
-    },
-
-    finish: function(finallyLoc) {
-      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
-        var entry = this.tryEntries[i];
-        if (entry.finallyLoc === finallyLoc) {
-          this.complete(entry.completion, entry.afterLoc);
-          resetTryEntry(entry);
-          return ContinueSentinel;
-        }
-      }
-    },
-
-    "catch": function(tryLoc) {
-      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
-        var entry = this.tryEntries[i];
-        if (entry.tryLoc === tryLoc) {
-          var record = entry.completion;
-          if (record.type === "throw") {
-            var thrown = record.arg;
-            resetTryEntry(entry);
-          }
-          return thrown;
-        }
-      }
-
-      // The context.catch method must only be called with a location
-      // argument that corresponds to a known catch block.
-      throw new Error("illegal catch attempt");
-    },
-
-    delegateYield: function(iterable, resultName, nextLoc) {
-      this.delegate = {
-        iterator: values(iterable),
-        resultName: resultName,
-        nextLoc: nextLoc
-      };
-
-      if (this.method === "next") {
-        // Deliberately forget the last sent value so that we don't
-        // accidentally pass it on to the delegate.
-        this.arg = undefined;
-      }
-
-      return ContinueSentinel;
-    }
-  };
-})(
-  // In sloppy mode, unbound `this` refers to the global object, fallback to
-  // Function constructor if we're in global strict mode. That is sadly a form
-  // of indirect eval which violates Content Security Policy.
-  (function() { return this })() || Function("return this")()
-);
-});
-
-/**
- * Copyright (c) 2014-present, Facebook, Inc.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-// This method of obtaining a reference to the global object needs to be
-// kept identical to the way it is obtained in runtime.js
-var g = (function() { return this })() || Function("return this")();
-
-// Use `getOwnPropertyNames` because not all browsers support calling
-// `hasOwnProperty` on the global `self` object in a worker. See #183.
-var hadRuntime = g.regeneratorRuntime &&
-  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
-
-// Save the old regeneratorRuntime in case it needs to be restored later.
-var oldRuntime = hadRuntime && g.regeneratorRuntime;
-
-// Force reevalutation of runtime.js.
-g.regeneratorRuntime = undefined;
-
-var runtimeModule = runtime;
-
-if (hadRuntime) {
-  // Restore the original runtime.
-  g.regeneratorRuntime = oldRuntime;
-} else {
-  // Remove the global property added by runtime.js.
-  try {
-    delete g.regeneratorRuntime;
-  } catch(e) {
-    g.regeneratorRuntime = undefined;
-  }
-}
-
-var regenerator = runtimeModule;
-
-var _global = createCommonjsModule(function (module) {
-// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
-var global = module.exports = typeof window != 'undefined' && window.Math == Math
-  ? window : typeof self != 'undefined' && self.Math == Math ? self
-  // eslint-disable-next-line no-new-func
-  : Function('return this')();
-if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
-});
-
-var _core = createCommonjsModule(function (module) {
-var core = module.exports = { version: '2.5.7' };
-if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
-});
-var _core_1 = _core.version;
-
-var _aFunction = function (it) {
-  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
-  return it;
-};
-
-// optional / simple context binding
-
-var _ctx = function (fn, that, length) {
-  _aFunction(fn);
-  if (that === undefined) return fn;
-  switch (length) {
-    case 1: return function (a) {
-      return fn.call(that, a);
-    };
-    case 2: return function (a, b) {
-      return fn.call(that, a, b);
-    };
-    case 3: return function (a, b, c) {
-      return fn.call(that, a, b, c);
-    };
-  }
-  return function (/* ...args */) {
-    return fn.apply(that, arguments);
-  };
-};
-
-var _isObject = function (it) {
-  return typeof it === 'object' ? it !== null : typeof it === 'function';
-};
-
-var _anObject = function (it) {
-  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
-  return it;
-};
-
-var _fails = function (exec) {
-  try {
-    return !!exec();
-  } catch (e) {
-    return true;
-  }
-};
-
-// Thank's IE8 for his funny defineProperty
-var _descriptors = !_fails(function () {
-  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
-});
-
-var document$1 = _global.document;
-// typeof document.createElement is 'object' in old IE
-var is = _isObject(document$1) && _isObject(document$1.createElement);
-var _domCreate = function (it) {
-  return is ? document$1.createElement(it) : {};
-};
-
-var _ie8DomDefine = !_descriptors && !_fails(function () {
-  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
-});
-
-// 7.1.1 ToPrimitive(input [, PreferredType])
-
-// instead of the ES6 spec version, we didn't implement @@toPrimitive case
-// and the second argument - flag - preferred type is a string
-var _toPrimitive = function (it, S) {
-  if (!_isObject(it)) return it;
-  var fn, val;
-  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
-  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
-  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
-  throw TypeError("Can't convert object to primitive value");
-};
-
-var dP = Object.defineProperty;
-
-var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
-  _anObject(O);
-  P = _toPrimitive(P, true);
-  _anObject(Attributes);
-  if (_ie8DomDefine) try {
-    return dP(O, P, Attributes);
-  } catch (e) { /* empty */ }
-  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
-  if ('value' in Attributes) O[P] = Attributes.value;
-  return O;
-};
-
-var _objectDp = {
-	f: f
-};
-
-var _propertyDesc = function (bitmap, value) {
-  return {
-    enumerable: !(bitmap & 1),
-    configurable: !(bitmap & 2),
-    writable: !(bitmap & 4),
-    value: value
-  };
-};
-
-var _hide = _descriptors ? function (object, key, value) {
-  return _objectDp.f(object, key, _propertyDesc(1, value));
-} : function (object, key, value) {
-  object[key] = value;
-  return object;
-};
-
-var hasOwnProperty = {}.hasOwnProperty;
-var _has = function (it, key) {
-  return hasOwnProperty.call(it, key);
-};
-
-var PROTOTYPE = 'prototype';
-
-var $export = function (type, name, source) {
-  var IS_FORCED = type & $export.F;
-  var IS_GLOBAL = type & $export.G;
-  var IS_STATIC = type & $export.S;
-  var IS_PROTO = type & $export.P;
-  var IS_BIND = type & $export.B;
-  var IS_WRAP = type & $export.W;
-  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
-  var expProto = exports[PROTOTYPE];
-  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
-  var key, own, out;
-  if (IS_GLOBAL) source = name;
-  for (key in source) {
-    // contains in native
-    own = !IS_FORCED && target && target[key] !== undefined;
-    if (own && _has(exports, key)) continue;
-    // export native or passed
-    out = own ? target[key] : source[key];
-    // prevent global pollution for namespaces
-    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
-    // bind timers to global for call from export context
-    : IS_BIND && own ? _ctx(out, _global)
-    // wrap global constructors for prevent change them in library
-    : IS_WRAP && target[key] == out ? (function (C) {
-      var F = function (a, b, c) {
-        if (this instanceof C) {
-          switch (arguments.length) {
-            case 0: return new C();
-            case 1: return new C(a);
-            case 2: return new C(a, b);
-          } return new C(a, b, c);
-        } return C.apply(this, arguments);
-      };
-      F[PROTOTYPE] = C[PROTOTYPE];
-      return F;
-    // make static versions for prototype methods
-    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
-    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
-    if (IS_PROTO) {
-      (exports.virtual || (exports.virtual = {}))[key] = out;
-      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
-      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);
-    }
-  }
-};
-// type bitmap
-$export.F = 1;   // forced
-$export.G = 2;   // global
-$export.S = 4;   // static
-$export.P = 8;   // proto
-$export.B = 16;  // bind
-$export.W = 32;  // wrap
-$export.U = 64;  // safe
-$export.R = 128; // real proto method for `library`
-var _export = $export;
-
-var toString = {}.toString;
-
-var _cof = function (it) {
-  return toString.call(it).slice(8, -1);
-};
-
-// fallback for non-array-like ES3 and non-enumerable old V8 strings
-
-// eslint-disable-next-line no-prototype-builtins
-var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
-  return _cof(it) == 'String' ? it.split('') : Object(it);
-};
-
-// 7.2.1 RequireObjectCoercible(argument)
-var _defined = function (it) {
-  if (it == undefined) throw TypeError("Can't call method on  " + it);
-  return it;
-};
-
-// to indexed object, toObject with fallback for non-array-like ES3 strings
-
-
-var _toIobject = function (it) {
-  return _iobject(_defined(it));
-};
-
-// 7.1.4 ToInteger
-var ceil = Math.ceil;
-var floor = Math.floor;
-var _toInteger = function (it) {
-  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
-};
-
-// 7.1.15 ToLength
-
-var min = Math.min;
-var _toLength = function (it) {
-  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
-};
-
-var max = Math.max;
-var min$1 = Math.min;
-var _toAbsoluteIndex = function (index, length) {
-  index = _toInteger(index);
-  return index < 0 ? max(index + length, 0) : min$1(index, length);
-};
-
-// false -> Array#indexOf
-// true  -> Array#includes
-
-
-
-var _arrayIncludes = function (IS_INCLUDES) {
-  return function ($this, el, fromIndex) {
-    var O = _toIobject($this);
-    var length = _toLength(O.length);
-    var index = _toAbsoluteIndex(fromIndex, length);
-    var value;
-    // Array#includes uses SameValueZero equality algorithm
-    // eslint-disable-next-line no-self-compare
-    if (IS_INCLUDES && el != el) while (length > index) {
-      value = O[index++];
-      // eslint-disable-next-line no-self-compare
-      if (value != value) return true;
-    // Array#indexOf ignores holes, Array#includes - not
-    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
-      if (O[index] === el) return IS_INCLUDES || index || 0;
-    } return !IS_INCLUDES && -1;
-  };
-};
-
-var _library = true;
-
-var _shared = createCommonjsModule(function (module) {
-var SHARED = '__core-js_shared__';
-var store = _global[SHARED] || (_global[SHARED] = {});
-
-(module.exports = function (key, value) {
-  return store[key] || (store[key] = value !== undefined ? value : {});
-})('versions', []).push({
-  version: _core.version,
-  mode: 'pure',
-  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
-});
-});
-
-var id = 0;
-var px = Math.random();
-var _uid = function (key) {
-  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
-};
-
-var shared = _shared('keys');
-
-var _sharedKey = function (key) {
-  return shared[key] || (shared[key] = _uid(key));
-};
-
-var arrayIndexOf = _arrayIncludes(false);
-var IE_PROTO = _sharedKey('IE_PROTO');
-
-var _objectKeysInternal = function (object, names) {
-  var O = _toIobject(object);
-  var i = 0;
-  var result = [];
-  var key;
-  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
-  // Don't enum bug & hidden keys
-  while (names.length > i) if (_has(O, key = names[i++])) {
-    ~arrayIndexOf(result, key) || result.push(key);
-  }
-  return result;
-};
-
-// IE 8- don't enum bug keys
-var _enumBugKeys = (
-  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
-).split(',');
-
-// 19.1.2.14 / 15.2.3.14 Object.keys(O)
-
-
-
-var _objectKeys = Object.keys || function keys(O) {
-  return _objectKeysInternal(O, _enumBugKeys);
-};
-
-var f$1 = Object.getOwnPropertySymbols;
-
-var _objectGops = {
-	f: f$1
-};
-
-var f$2 = {}.propertyIsEnumerable;
-
-var _objectPie = {
-	f: f$2
-};
-
-// 7.1.13 ToObject(argument)
-
-var _toObject = function (it) {
-  return Object(_defined(it));
-};
-
-// 19.1.2.1 Object.assign(target, source, ...)
-
-
-
-
-
-var $assign = Object.assign;
-
-// should work with symbols and should have deterministic property order (V8 bug)
-var _objectAssign = !$assign || _fails(function () {
-  var A = {};
-  var B = {};
-  // eslint-disable-next-line no-undef
-  var S = Symbol();
-  var K = 'abcdefghijklmnopqrst';
-  A[S] = 7;
-  K.split('').forEach(function (k) { B[k] = k; });
-  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
-}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
-  var T = _toObject(target);
-  var aLen = arguments.length;
-  var index = 1;
-  var getSymbols = _objectGops.f;
-  var isEnum = _objectPie.f;
-  while (aLen > index) {
-    var S = _iobject(arguments[index++]);
-    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);
-    var length = keys.length;
-    var j = 0;
-    var key;
-    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
-  } return T;
-} : $assign;
-
-// 19.1.3.1 Object.assign(target, source)
-
-
-_export(_export.S + _export.F, 'Object', { assign: _objectAssign });
-
-var assign = _core.Object.assign;
-
-var assign$1 = createCommonjsModule(function (module) {
-module.exports = { "default": assign, __esModule: true };
-});
-
-unwrapExports(assign$1);
-
-var _extends = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-
-
-var _assign2 = _interopRequireDefault(assign$1);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = _assign2.default || function (target) {
-  for (var i = 1; i < arguments.length; i++) {
-    var source = arguments[i];
-
-    for (var key in source) {
-      if (Object.prototype.hasOwnProperty.call(source, key)) {
-        target[key] = source[key];
-      }
-    }
-  }
-
-  return target;
-};
-});
-
-var _extends$1 = unwrapExports(_extends);
-
-var objectWithoutProperties = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-exports.default = function (obj, keys) {
-  var target = {};
-
-  for (var i in obj) {
-    if (keys.indexOf(i) >= 0) continue;
-    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
-    target[i] = obj[i];
-  }
-
-  return target;
-};
-});
-
-var _objectWithoutProperties = unwrapExports(objectWithoutProperties);
-
-// true  -> String#at
-// false -> String#codePointAt
-var _stringAt = function (TO_STRING) {
-  return function (that, pos) {
-    var s = String(_defined(that));
-    var i = _toInteger(pos);
-    var l = s.length;
-    var a, b;
-    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
-    a = s.charCodeAt(i);
-    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
-      ? TO_STRING ? s.charAt(i) : a
-      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
-  };
-};
-
-var _redefine = _hide;
-
-var _iterators = {};
-
-var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
-  _anObject(O);
-  var keys = _objectKeys(Properties);
-  var length = keys.length;
-  var i = 0;
-  var P;
-  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
-  return O;
-};
-
-var document$2 = _global.document;
-var _html = document$2 && document$2.documentElement;
-
-// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
-
-
-
-var IE_PROTO$1 = _sharedKey('IE_PROTO');
-var Empty = function () { /* empty */ };
-var PROTOTYPE$1 = 'prototype';
-
-// Create object with fake `null` prototype: use iframe Object with cleared prototype
-var createDict = function () {
-  // Thrash, waste and sodomy: IE GC bug
-  var iframe = _domCreate('iframe');
-  var i = _enumBugKeys.length;
-  var lt = '<';
-  var gt = '>';
-  var iframeDocument;
-  iframe.style.display = 'none';
-  _html.appendChild(iframe);
-  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
-  // createDict = iframe.contentWindow.Object;
-  // html.removeChild(iframe);
-  iframeDocument = iframe.contentWindow.document;
-  iframeDocument.open();
-  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
-  iframeDocument.close();
-  createDict = iframeDocument.F;
-  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
-  return createDict();
-};
-
-var _objectCreate = Object.create || function create(O, Properties) {
-  var result;
-  if (O !== null) {
-    Empty[PROTOTYPE$1] = _anObject(O);
-    result = new Empty();
-    Empty[PROTOTYPE$1] = null;
-    // add "__proto__" for Object.getPrototypeOf polyfill
-    result[IE_PROTO$1] = O;
-  } else result = createDict();
-  return Properties === undefined ? result : _objectDps(result, Properties);
-};
-
-var _wks = createCommonjsModule(function (module) {
-var store = _shared('wks');
-
-var Symbol = _global.Symbol;
-var USE_SYMBOL = typeof Symbol == 'function';
-
-var $exports = module.exports = function (name) {
-  return store[name] || (store[name] =
-    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
-};
-
-$exports.store = store;
-});
-
-var def = _objectDp.f;
-
-var TAG = _wks('toStringTag');
-
-var _setToStringTag = function (it, tag, stat) {
-  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
-};
-
-var IteratorPrototype = {};
-
-// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
-_hide(IteratorPrototype, _wks('iterator'), function () { return this; });
-
-var _iterCreate = function (Constructor, NAME, next) {
-  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
-  _setToStringTag(Constructor, NAME + ' Iterator');
-};
-
-// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
-
-
-var IE_PROTO$2 = _sharedKey('IE_PROTO');
-var ObjectProto = Object.prototype;
-
-var _objectGpo = Object.getPrototypeOf || function (O) {
-  O = _toObject(O);
-  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
-  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
-    return O.constructor.prototype;
-  } return O instanceof Object ? ObjectProto : null;
-};
-
-var ITERATOR = _wks('iterator');
-var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
-var FF_ITERATOR = '@@iterator';
-var KEYS = 'keys';
-var VALUES = 'values';
-
-var returnThis = function () { return this; };
-
-var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
-  _iterCreate(Constructor, NAME, next);
-  var getMethod = function (kind) {
-    if (!BUGGY && kind in proto) return proto[kind];
-    switch (kind) {
-      case KEYS: return function keys() { return new Constructor(this, kind); };
-      case VALUES: return function values() { return new Constructor(this, kind); };
-    } return function entries() { return new Constructor(this, kind); };
-  };
-  var TAG = NAME + ' Iterator';
-  var DEF_VALUES = DEFAULT == VALUES;
-  var VALUES_BUG = false;
-  var proto = Base.prototype;
-  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
-  var $default = $native || getMethod(DEFAULT);
-  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
-  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
-  var methods, key, IteratorPrototype;
-  // Fix native
-  if ($anyNative) {
-    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
-    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
-      // Set @@toStringTag to native iterators
-      _setToStringTag(IteratorPrototype, TAG, true);
-    }
-  }
-  // fix Array#{values, @@iterator}.name in V8 / FF
-  if (DEF_VALUES && $native && $native.name !== VALUES) {
-    VALUES_BUG = true;
-    $default = function values() { return $native.call(this); };
-  }
-  // Define iterator
-  if ((FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
-    _hide(proto, ITERATOR, $default);
-  }
-  // Plug for library
-  _iterators[NAME] = $default;
-  _iterators[TAG] = returnThis;
-  if (DEFAULT) {
-    methods = {
-      values: DEF_VALUES ? $default : getMethod(VALUES),
-      keys: IS_SET ? $default : getMethod(KEYS),
-      entries: $entries
-    };
-    if (FORCED) for (key in methods) {
-      if (!(key in proto)) _redefine(proto, key, methods[key]);
-    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
-  }
-  return methods;
-};
-
-var $at = _stringAt(true);
-
-// 21.1.3.27 String.prototype[@@iterator]()
-_iterDefine(String, 'String', function (iterated) {
-  this._t = String(iterated); // target
-  this._i = 0;                // next index
-// 21.1.5.2.1 %StringIteratorPrototype%.next()
-}, function () {
-  var O = this._t;
-  var index = this._i;
-  var point;
-  if (index >= O.length) return { value: undefined, done: true };
-  point = $at(O, index);
-  this._i += point.length;
-  return { value: point, done: false };
-});
-
-var _iterStep = function (done, value) {
-  return { value: value, done: !!done };
-};
-
-// 22.1.3.4 Array.prototype.entries()
-// 22.1.3.13 Array.prototype.keys()
-// 22.1.3.29 Array.prototype.values()
-// 22.1.3.30 Array.prototype[@@iterator]()
-var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
-  this._t = _toIobject(iterated); // target
-  this._i = 0;                   // next index
-  this._k = kind;                // kind
-// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
-}, function () {
-  var O = this._t;
-  var kind = this._k;
-  var index = this._i++;
-  if (!O || index >= O.length) {
-    this._t = undefined;
-    return _iterStep(1);
-  }
-  if (kind == 'keys') return _iterStep(0, index);
-  if (kind == 'values') return _iterStep(0, O[index]);
-  return _iterStep(0, [index, O[index]]);
-}, 'values');
-
-// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
-_iterators.Arguments = _iterators.Array;
-
-var TO_STRING_TAG = _wks('toStringTag');
-
-var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
-  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
-  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
-  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
-  'TextTrackList,TouchList').split(',');
-
-for (var i = 0; i < DOMIterables.length; i++) {
-  var NAME = DOMIterables[i];
-  var Collection = _global[NAME];
-  var proto = Collection && Collection.prototype;
-  if (proto && !proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);
-  _iterators[NAME] = _iterators.Array;
-}
-
-// getting tag from 19.1.3.6 Object.prototype.toString()
-
-var TAG$1 = _wks('toStringTag');
-// ES3 wrong here
-var ARG = _cof(function () { return arguments; }()) == 'Arguments';
-
-// fallback for IE11 Script Access Denied error
-var tryGet = function (it, key) {
-  try {
-    return it[key];
-  } catch (e) { /* empty */ }
-};
-
-var _classof = function (it) {
-  var O, T, B;
-  return it === undefined ? 'Undefined' : it === null ? 'Null'
-    // @@toStringTag case
-    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T
-    // builtinTag case
-    : ARG ? _cof(O)
-    // ES3 arguments fallback
-    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
-};
-
-var _anInstance = function (it, Constructor, name, forbiddenField) {
-  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
-    throw TypeError(name + ': incorrect invocation!');
-  } return it;
-};
-
-// call something on iterator step with safe closing on error
-
-var _iterCall = function (iterator, fn, value, entries) {
-  try {
-    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);
-  // 7.4.6 IteratorClose(iterator, completion)
-  } catch (e) {
-    var ret = iterator['return'];
-    if (ret !== undefined) _anObject(ret.call(iterator));
-    throw e;
-  }
-};
-
-// check on default Array iterator
-
-var ITERATOR$1 = _wks('iterator');
-var ArrayProto = Array.prototype;
-
-var _isArrayIter = function (it) {
-  return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR$1] === it);
-};
-
-var ITERATOR$2 = _wks('iterator');
-
-var core_getIteratorMethod = _core.getIteratorMethod = function (it) {
-  if (it != undefined) return it[ITERATOR$2]
-    || it['@@iterator']
-    || _iterators[_classof(it)];
-};
-
-var _forOf = createCommonjsModule(function (module) {
-var BREAK = {};
-var RETURN = {};
-var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
-  var iterFn = ITERATOR ? function () { return iterable; } : core_getIteratorMethod(iterable);
-  var f = _ctx(fn, that, entries ? 2 : 1);
-  var index = 0;
-  var length, step, iterator, result;
-  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
-  // fast case for arrays with default iterator
-  if (_isArrayIter(iterFn)) for (length = _toLength(iterable.length); length > index; index++) {
-    result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
-    if (result === BREAK || result === RETURN) return result;
-  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
-    result = _iterCall(iterator, f, step.value, entries);
-    if (result === BREAK || result === RETURN) return result;
-  }
-};
-exports.BREAK = BREAK;
-exports.RETURN = RETURN;
-});
-
-// 7.3.20 SpeciesConstructor(O, defaultConstructor)
-
-
-var SPECIES = _wks('species');
-var _speciesConstructor = function (O, D) {
-  var C = _anObject(O).constructor;
-  var S;
-  return C === undefined || (S = _anObject(C)[SPECIES]) == undefined ? D : _aFunction(S);
-};
-
-// fast apply, http://jsperf.lnkit.com/fast-apply/5
-var _invoke = function (fn, args, that) {
-  var un = that === undefined;
-  switch (args.length) {
-    case 0: return un ? fn()
-                      : fn.call(that);
-    case 1: return un ? fn(args[0])
-                      : fn.call(that, args[0]);
-    case 2: return un ? fn(args[0], args[1])
-                      : fn.call(that, args[0], args[1]);
-    case 3: return un ? fn(args[0], args[1], args[2])
-                      : fn.call(that, args[0], args[1], args[2]);
-    case 4: return un ? fn(args[0], args[1], args[2], args[3])
-                      : fn.call(that, args[0], args[1], args[2], args[3]);
-  } return fn.apply(that, args);
-};
-
-var process$1 = _global.process;
-var setTask = _global.setImmediate;
-var clearTask = _global.clearImmediate;
-var MessageChannel = _global.MessageChannel;
-var Dispatch = _global.Dispatch;
-var counter = 0;
-var queue = {};
-var ONREADYSTATECHANGE = 'onreadystatechange';
-var defer, channel, port;
-var run = function () {
-  var id = +this;
-  // eslint-disable-next-line no-prototype-builtins
-  if (queue.hasOwnProperty(id)) {
-    var fn = queue[id];
-    delete queue[id];
-    fn();
-  }
-};
-var listener = function (event) {
-  run.call(event.data);
-};
-// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
-if (!setTask || !clearTask) {
-  setTask = function setImmediate(fn) {
-    var args = [];
-    var i = 1;
-    while (arguments.length > i) args.push(arguments[i++]);
-    queue[++counter] = function () {
-      // eslint-disable-next-line no-new-func
-      _invoke(typeof fn == 'function' ? fn : Function(fn), args);
-    };
-    defer(counter);
-    return counter;
-  };
-  clearTask = function clearImmediate(id) {
-    delete queue[id];
-  };
-  // Node.js 0.8-
-  if (_cof(process$1) == 'process') {
-    defer = function (id) {
-      process$1.nextTick(_ctx(run, id, 1));
-    };
-  // Sphere (JS game engine) Dispatch API
-  } else if (Dispatch && Dispatch.now) {
-    defer = function (id) {
-      Dispatch.now(_ctx(run, id, 1));
-    };
-  // Browsers with MessageChannel, includes WebWorkers
-  } else if (MessageChannel) {
-    channel = new MessageChannel();
-    port = channel.port2;
-    channel.port1.onmessage = listener;
-    defer = _ctx(port.postMessage, port, 1);
-  // Browsers with postMessage, skip WebWorkers
-  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
-  } else if (_global.addEventListener && typeof postMessage == 'function' && !_global.importScripts) {
-    defer = function (id) {
-      _global.postMessage(id + '', '*');
-    };
-    _global.addEventListener('message', listener, false);
-  // IE8-
-  } else if (ONREADYSTATECHANGE in _domCreate('script')) {
-    defer = function (id) {
-      _html.appendChild(_domCreate('script'))[ONREADYSTATECHANGE] = function () {
-        _html.removeChild(this);
-        run.call(id);
-      };
-    };
-  // Rest old browsers
-  } else {
-    defer = function (id) {
-      setTimeout(_ctx(run, id, 1), 0);
-    };
-  }
-}
-var _task = {
-  set: setTask,
-  clear: clearTask
-};
-
-var macrotask = _task.set;
-var Observer = _global.MutationObserver || _global.WebKitMutationObserver;
-var process$2 = _global.process;
-var Promise$1 = _global.Promise;
-var isNode = _cof(process$2) == 'process';
-
-var _microtask = function () {
-  var head, last, notify;
-
-  var flush = function () {
-    var parent, fn;
-    if (isNode && (parent = process$2.domain)) parent.exit();
-    while (head) {
-      fn = head.fn;
-      head = head.next;
-      try {
-        fn();
-      } catch (e) {
-        if (head) notify();
-        else last = undefined;
-        throw e;
-      }
-    } last = undefined;
-    if (parent) parent.enter();
-  };
-
-  // Node.js
-  if (isNode) {
-    notify = function () {
-      process$2.nextTick(flush);
-    };
-  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
-  } else if (Observer && !(_global.navigator && _global.navigator.standalone)) {
-    var toggle = true;
-    var node = document.createTextNode('');
-    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
-    notify = function () {
-      node.data = toggle = !toggle;
-    };
-  // environments with maybe non-completely correct, but existent Promise
-  } else if (Promise$1 && Promise$1.resolve) {
-    // Promise.resolve without an argument throws an error in LG WebOS 2
-    var promise = Promise$1.resolve(undefined);
-    notify = function () {
-      promise.then(flush);
-    };
-  // for other environments - macrotask based on:
-  // - setImmediate
-  // - MessageChannel
-  // - window.postMessag
-  // - onreadystatechange
-  // - setTimeout
-  } else {
-    notify = function () {
-      // strange IE + webpack dev server bug - use .call(global)
-      macrotask.call(_global, flush);
-    };
-  }
-
-  return function (fn) {
-    var task = { fn: fn, next: undefined };
-    if (last) last.next = task;
-    if (!head) {
-      head = task;
-      notify();
-    } last = task;
-  };
-};
-
-// 25.4.1.5 NewPromiseCapability(C)
-
-
-function PromiseCapability(C) {
-  var resolve, reject;
-  this.promise = new C(function ($$resolve, $$reject) {
-    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
-    resolve = $$resolve;
-    reject = $$reject;
-  });
-  this.resolve = _aFunction(resolve);
-  this.reject = _aFunction(reject);
-}
-
-var f$3 = function (C) {
-  return new PromiseCapability(C);
-};
-
-var _newPromiseCapability = {
-	f: f$3
-};
-
-var _perform = function (exec) {
-  try {
-    return { e: false, v: exec() };
-  } catch (e) {
-    return { e: true, v: e };
-  }
-};
-
-var navigator = _global.navigator;
-
-var _userAgent = navigator && navigator.userAgent || '';
-
-var _promiseResolve = function (C, x) {
-  _anObject(C);
-  if (_isObject(x) && x.constructor === C) return x;
-  var promiseCapability = _newPromiseCapability.f(C);
-  var resolve = promiseCapability.resolve;
-  resolve(x);
-  return promiseCapability.promise;
-};
-
-var _redefineAll = function (target, src, safe) {
-  for (var key in src) {
-    if (safe && target[key]) target[key] = src[key];
-    else _hide(target, key, src[key]);
-  } return target;
-};
-
-var SPECIES$1 = _wks('species');
-
-var _setSpecies = function (KEY) {
-  var C = typeof _core[KEY] == 'function' ? _core[KEY] : _global[KEY];
-  if (_descriptors && C && !C[SPECIES$1]) _objectDp.f(C, SPECIES$1, {
-    configurable: true,
-    get: function () { return this; }
-  });
-};
-
-var ITERATOR$3 = _wks('iterator');
-var SAFE_CLOSING = false;
-
-try {
-  var riter = [7][ITERATOR$3]();
-  riter['return'] = function () { SAFE_CLOSING = true; };
-} catch (e) { /* empty */ }
-
-var _iterDetect = function (exec, skipClosing) {
-  if (!skipClosing && !SAFE_CLOSING) return false;
-  var safe = false;
-  try {
-    var arr = [7];
-    var iter = arr[ITERATOR$3]();
-    iter.next = function () { return { done: safe = true }; };
-    arr[ITERATOR$3] = function () { return iter; };
-    exec(arr);
-  } catch (e) { /* empty */ }
-  return safe;
-};
-
-var task = _task.set;
-var microtask = _microtask();
-
-
-
-
-var PROMISE = 'Promise';
-var TypeError$1 = _global.TypeError;
-var process$3 = _global.process;
-var versions = process$3 && process$3.versions;
-var v8 = versions && versions.v8 || '';
-var $Promise = _global[PROMISE];
-var isNode$1 = _classof(process$3) == 'process';
-var empty = function () { /* empty */ };
-var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
-var newPromiseCapability = newGenericPromiseCapability = _newPromiseCapability.f;
-
-var USE_NATIVE = !!function () {
-  try {
-    // correct subclassing with @@species support
-    var promise = $Promise.resolve(1);
-    var FakePromise = (promise.constructor = {})[_wks('species')] = function (exec) {
-      exec(empty, empty);
-    };
-    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
-    return (isNode$1 || typeof PromiseRejectionEvent == 'function')
-      && promise.then(empty) instanceof FakePromise
-      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
-      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
-      // we can't detect it synchronously, so just check versions
-      && v8.indexOf('6.6') !== 0
-      && _userAgent.indexOf('Chrome/66') === -1;
-  } catch (e) { /* empty */ }
-}();
-
-// helpers
-var isThenable = function (it) {
-  var then;
-  return _isObject(it) && typeof (then = it.then) == 'function' ? then : false;
-};
-var notify = function (promise, isReject) {
-  if (promise._n) return;
-  promise._n = true;
-  var chain = promise._c;
-  microtask(function () {
-    var value = promise._v;
-    var ok = promise._s == 1;
-    var i = 0;
-    var run = function (reaction) {
-      var handler = ok ? reaction.ok : reaction.fail;
-      var resolve = reaction.resolve;
-      var reject = reaction.reject;
-      var domain = reaction.domain;
-      var result, then, exited;
-      try {
-        if (handler) {
-          if (!ok) {
-            if (promise._h == 2) onHandleUnhandled(promise);
-            promise._h = 1;
-          }
-          if (handler === true) result = value;
-          else {
-            if (domain) domain.enter();
-            result = handler(value); // may throw
-            if (domain) {
-              domain.exit();
-              exited = true;
-            }
-          }
-          if (result === reaction.promise) {
-            reject(TypeError$1('Promise-chain cycle'));
-          } else if (then = isThenable(result)) {
-            then.call(result, resolve, reject);
-          } else resolve(result);
-        } else reject(value);
-      } catch (e) {
-        if (domain && !exited) domain.exit();
-        reject(e);
-      }
-    };
-    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
-    promise._c = [];
-    promise._n = false;
-    if (isReject && !promise._h) onUnhandled(promise);
-  });
-};
-var onUnhandled = function (promise) {
-  task.call(_global, function () {
-    var value = promise._v;
-    var unhandled = isUnhandled(promise);
-    var result, handler, console;
-    if (unhandled) {
-      result = _perform(function () {
-        if (isNode$1) {
-          process$3.emit('unhandledRejection', value, promise);
-        } else if (handler = _global.onunhandledrejection) {
-          handler({ promise: promise, reason: value });
-        } else if ((console = _global.console) && console.error) {
-          console.error('Unhandled promise rejection', value);
-        }
-      });
-      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
-      promise._h = isNode$1 || isUnhandled(promise) ? 2 : 1;
-    } promise._a = undefined;
-    if (unhandled && result.e) throw result.v;
-  });
-};
-var isUnhandled = function (promise) {
-  return promise._h !== 1 && (promise._a || promise._c).length === 0;
-};
-var onHandleUnhandled = function (promise) {
-  task.call(_global, function () {
-    var handler;
-    if (isNode$1) {
-      process$3.emit('rejectionHandled', promise);
-    } else if (handler = _global.onrejectionhandled) {
-      handler({ promise: promise, reason: promise._v });
-    }
-  });
-};
-var $reject = function (value) {
-  var promise = this;
-  if (promise._d) return;
-  promise._d = true;
-  promise = promise._w || promise; // unwrap
-  promise._v = value;
-  promise._s = 2;
-  if (!promise._a) promise._a = promise._c.slice();
-  notify(promise, true);
-};
-var $resolve = function (value) {
-  var promise = this;
-  var then;
-  if (promise._d) return;
-  promise._d = true;
-  promise = promise._w || promise; // unwrap
-  try {
-    if (promise === value) throw TypeError$1("Promise can't be resolved itself");
-    if (then = isThenable(value)) {
-      microtask(function () {
-        var wrapper = { _w: promise, _d: false }; // wrap
-        try {
-          then.call(value, _ctx($resolve, wrapper, 1), _ctx($reject, wrapper, 1));
-        } catch (e) {
-          $reject.call(wrapper, e);
-        }
-      });
-    } else {
-      promise._v = value;
-      promise._s = 1;
-      notify(promise, false);
-    }
-  } catch (e) {
-    $reject.call({ _w: promise, _d: false }, e); // wrap
-  }
-};
-
-// constructor polyfill
-if (!USE_NATIVE) {
-  // 25.4.3.1 Promise(executor)
-  $Promise = function Promise(executor) {
-    _anInstance(this, $Promise, PROMISE, '_h');
-    _aFunction(executor);
-    Internal.call(this);
-    try {
-      executor(_ctx($resolve, this, 1), _ctx($reject, this, 1));
-    } catch (err) {
-      $reject.call(this, err);
-    }
-  };
-  // eslint-disable-next-line no-unused-vars
-  Internal = function Promise(executor) {
-    this._c = [];             // <- awaiting reactions
-    this._a = undefined;      // <- checked in isUnhandled reactions
-    this._s = 0;              // <- state
-    this._d = false;          // <- done
-    this._v = undefined;      // <- value
-    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
-    this._n = false;          // <- notify
-  };
-  Internal.prototype = _redefineAll($Promise.prototype, {
-    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
-    then: function then(onFulfilled, onRejected) {
-      var reaction = newPromiseCapability(_speciesConstructor(this, $Promise));
-      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
-      reaction.fail = typeof onRejected == 'function' && onRejected;
-      reaction.domain = isNode$1 ? process$3.domain : undefined;
-      this._c.push(reaction);
-      if (this._a) this._a.push(reaction);
-      if (this._s) notify(this, false);
-      return reaction.promise;
-    },
-    // 25.4.5.1 Promise.prototype.catch(onRejected)
-    'catch': function (onRejected) {
-      return this.then(undefined, onRejected);
-    }
-  });
-  OwnPromiseCapability = function () {
-    var promise = new Internal();
-    this.promise = promise;
-    this.resolve = _ctx($resolve, promise, 1);
-    this.reject = _ctx($reject, promise, 1);
-  };
-  _newPromiseCapability.f = newPromiseCapability = function (C) {
-    return C === $Promise || C === Wrapper
-      ? new OwnPromiseCapability(C)
-      : newGenericPromiseCapability(C);
-  };
-}
-
-_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Promise: $Promise });
-_setToStringTag($Promise, PROMISE);
-_setSpecies(PROMISE);
-Wrapper = _core[PROMISE];
-
-// statics
-_export(_export.S + _export.F * !USE_NATIVE, PROMISE, {
-  // 25.4.4.5 Promise.reject(r)
-  reject: function reject(r) {
-    var capability = newPromiseCapability(this);
-    var $$reject = capability.reject;
-    $$reject(r);
-    return capability.promise;
-  }
-});
-_export(_export.S + _export.F * (_library), PROMISE, {
-  // 25.4.4.6 Promise.resolve(x)
-  resolve: function resolve(x) {
-    return _promiseResolve(_library && this === Wrapper ? $Promise : this, x);
-  }
-});
-_export(_export.S + _export.F * !(USE_NATIVE && _iterDetect(function (iter) {
-  $Promise.all(iter)['catch'](empty);
-})), PROMISE, {
-  // 25.4.4.1 Promise.all(iterable)
-  all: function all(iterable) {
-    var C = this;
-    var capability = newPromiseCapability(C);
-    var resolve = capability.resolve;
-    var reject = capability.reject;
-    var result = _perform(function () {
-      var values = [];
-      var index = 0;
-      var remaining = 1;
-      _forOf(iterable, false, function (promise) {
-        var $index = index++;
-        var alreadyCalled = false;
-        values.push(undefined);
-        remaining++;
-        C.resolve(promise).then(function (value) {
-          if (alreadyCalled) return;
-          alreadyCalled = true;
-          values[$index] = value;
-          --remaining || resolve(values);
-        }, reject);
-      });
-      --remaining || resolve(values);
-    });
-    if (result.e) reject(result.v);
-    return capability.promise;
-  },
-  // 25.4.4.4 Promise.race(iterable)
-  race: function race(iterable) {
-    var C = this;
-    var capability = newPromiseCapability(C);
-    var reject = capability.reject;
-    var result = _perform(function () {
-      _forOf(iterable, false, function (promise) {
-        C.resolve(promise).then(capability.resolve, reject);
-      });
-    });
-    if (result.e) reject(result.v);
-    return capability.promise;
-  }
-});
-
-_export(_export.P + _export.R, 'Promise', { 'finally': function (onFinally) {
-  var C = _speciesConstructor(this, _core.Promise || _global.Promise);
-  var isFunction = typeof onFinally == 'function';
-  return this.then(
-    isFunction ? function (x) {
-      return _promiseResolve(C, onFinally()).then(function () { return x; });
-    } : onFinally,
-    isFunction ? function (e) {
-      return _promiseResolve(C, onFinally()).then(function () { throw e; });
-    } : onFinally
-  );
-} });
-
-// https://github.com/tc39/proposal-promise-try
-
-
-
-
-_export(_export.S, 'Promise', { 'try': function (callbackfn) {
-  var promiseCapability = _newPromiseCapability.f(this);
-  var result = _perform(callbackfn);
-  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
-  return promiseCapability.promise;
-} });
-
-var promise = _core.Promise;
-
-var promise$1 = createCommonjsModule(function (module) {
-module.exports = { "default": promise, __esModule: true };
-});
-
-var _Promise = unwrapExports(promise$1);
-
-var asyncToGenerator = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-
-
-var _promise2 = _interopRequireDefault(promise$1);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (fn) {
-  return function () {
-    var gen = fn.apply(this, arguments);
-    return new _promise2.default(function (resolve, reject) {
-      function step(key, arg) {
-        try {
-          var info = gen[key](arg);
-          var value = info.value;
-        } catch (error) {
-          reject(error);
-          return;
-        }
-
-        if (info.done) {
-          resolve(value);
-        } else {
-          return _promise2.default.resolve(value).then(function (value) {
-            step("next", value);
-          }, function (err) {
-            step("throw", err);
-          });
-        }
-      }
-
-      return step("next");
-    });
-  };
-};
-});
-
-var _asyncToGenerator = unwrapExports(asyncToGenerator);
-
-var chromatism_cjs = createCommonjsModule(function (module, exports) {
-function getIlluminant(r){return ILLUMINANTS[r]}function matrixMultiply(r,t){for(var n=[],e=0;e<r.length;e++){n[e]=[];for(var o=0;o<t[0].length;o++){for(var u=0,a=0;a<r[0].length;a++)u+=r[e][a]*t[a][o];n[e][o]=u;}}return n}function getTransform(r){return TRANSFORMS[r]}function determineType(r){var t=types.find(function(t){return testColorType[t](r)});if(!t)throw new Error("No type found for color "+r);return t}function toRadian(r){return r*(Math.PI/180)}function toDegree(r){return r*(180/Math.PI)}function negativeModulo(r,t){return (r%t+t)%t}function bounded(r,t){return r<t[0]?r=t[0]:r>t[1]&&(r=t[1]),r}function boundedRgb(r){return {r:bounded255(r.r),g:bounded255(r.g),b:bounded255(r.b)}}function cubeRoot(r){if(Math.cbrt)return Math.cbrt(r);var t=Math.pow(Math.abs(r),1/3);return r<0?-t:t}function convert(r,t,n){if(void 0===t)throw new Error("No value provided");var e=n||determineType(t);if(e===r)return t;if(conversions[e][r])return convertNow(e,r,t);var o=conversionSteps[e],u="string"==typeof o?o:o[r]||o.default;return convert(r,convertNow(e,u,t),u)}function makeColourObject(r){var t={};return types$1.forEach(function(n){Object.defineProperty(t,n,{get:function(){return convertArrayOrColour(n,r)},enumerable:!0});}),t}function adapt(r,t,n){var e=convert("XYZ",r),o=convert("lms",getIlluminant(t)||getIlluminant("D65")),u=convert("lms",getIlluminant(n)||getIlluminant("D65")),a=getTransform("BRADFORD"),c=matrixMultiply(matrixMultiply(matrixMultiply(getTransform("INVERSE_BRADFORD"),[[o.rho/u.rho,0,0],[0,o.gamma/u.gamma,0],[0,0,o.beta/u.beta]]),a),[[e.X],[e.Y],[e.Z]]);return makeColourObject({X:c[0][0],Y:c[1][0],Z:c[2][0]})}function adjacent(r,t,n){for(var e=convert("hsl",n),o=[{h:e.h,s:e.s,l:e.l}],u=0;u<t-1;u++)e.h=negativeModulo(e.h+r,360),o.push({h:e.h,s:e.s,l:e.l});return makeColourObject(o)}function brightness(r,t){var n=convert("hsl",t);return n.l+=r,n.l<0?n.l=0:n.l>100&&(n.l=100),makeColourObject(n)}function complementary(r){var t=convert("hsl",r);return t.h=(t.h+180)%360,makeColourObject(t)}function contrast(r,t){var n=convert("rgb",t);return n.r=255*((n.r/255-.5)*r+.5),n.r<0?n.r=0:n.r>255&&(n.r=255),n.g=255*((n.g/255-.5)*r+.5),n.g<0?n.g=0:n.g>255&&(n.g=255),n.b=255*((n.b/255-.5)*r+.5),n.b<0?n.b=0:n.b>255&&(n.b=255),makeColourObject(n)}function contrastRatio(r){var t=convert("rgb",r);return t=(299*t.r+587*t.g+114*t.b)/1e3>=128?{r:0,g:0,b:0}:{r:255,g:255,b:255},makeColourObject(t)}function difference(r,t,n,e){n=n||1,e=e||1;var o=convert("cielab",r),u=convert("cielab",t),a=Math.sqrt(Math.pow(o.a,2)+Math.pow(o.b,2)),c=a-Math.sqrt(Math.pow(u.a,2)+Math.pow(u.b,2)),i=o.L-u.L,s=o.a-u.a,l=o.b-u.b,h=Math.sqrt(Math.pow(s,2)+Math.pow(l,2)-Math.pow(c,2)),f=o.L<16?.511:.040975*o.L/(1.01765*o.L),v=.0638*a/(1.0131*a),b=Math.atan2(o.b,o.a),g=b>=0?b:b+360,p=g>=164&&g<=345?.56+Math.abs(.2*Math.cos(toRadian(g+168))):.36+Math.abs(.4*Math.cos(toRadian(g+35))),m=Math.pow(a,4)/(Math.pow(a,4)+1900),d=v*(m*p+1-m),Y=Math.pow(i/(n*f),2),M=Math.pow(c/(e*v),2),y=Math.pow(h/d,2);return Math.sqrt(Y+M+y)}function slopeMod(r,t){return r>2*t?slopeMod(r-2*t,t):r>t?2*t-r:r<0?slopeMod(r+2*t,t):r}function fade(r,t,n){var e=convert("rgb",t),o=convert("rgb",n),u=[e];r-=1;for(var a=(o.r-e.r)/r,c=(o.g-e.g)/r,i=(o.b-e.b)/r,s={r:e.r,g:e.g,b:e.b},l=0;l<r-1;l++)s.r=slopeMod(s.r+a,255),s.g=slopeMod(s.g+c,255),s.b=slopeMod(s.b+i,255),u.push({r:s.r,g:s.g,b:s.b});return u.push(o),makeColourObject(u)}function greyscale(r){var t=convert("rgb",r),n=(t.r+t.g+t.b)/3;return t={r:n,g:n,b:n},makeColourObject(t)}function hue(r,t){var n=convert("hsl",t);return n.h=negativeModulo(n.h+r,360),makeColourObject(n)}function invert(r){var t=convert("rgb",r);return t.r=negativeModulo(255-t.r,255),t.g=negativeModulo(255-t.g,255),t.b=negativeModulo(255-t.b,255),makeColourObject(t)}function invertLightness(r){var t=convert("hsl",r);return t.l=100-t.l,makeColourObject(t)}function mid(r,t){var n=convert("hsl",r),e=convert("hsl",t);return makeColourObject({h:(n.h+e.h)/2,s:(n.s+e.s)/2,l:(n.l+e.l)/2})}function multiply(r,t){var n=convert("hsl",r),e=convert("hsl",t),o={h:n.h,s:n.s,l:n.l/100*(e.l/100)*100};return o.l=o.l>100?100:o.l,o.l=o.l<0?0:o.l,makeColourObject(o)}function saturation(r,t){var n=convert("hsl",t);return n.s+=r,n.s<0?n.s=0:n.s>100&&(n.s=100),makeColourObject(n)}function sepia(r){var t=convert("rgb",r),n={};return n.r=.393*t.r+.769*t.g+.189*t.b,n.g=.349*t.r+.686*t.g+.168*t.b,n.b=.272*t.r+.534*t.g+.131*t.b,makeColourObject(n)}function shade(r,t){var n=convert("hsv",t);return console.log(n),n.v+=r,n.v<0?n.v=0:n.v>100&&(n.v=100),console.log(n),makeColourObject(n)}function temperature(r){var t=convert("xyY",r),n=(t.x-.332)/(t.y-.1858);return -449*Math.pow(n,3)+3525*Math.pow(n,2)-6823.3*n+5520.33}function tetrad(r){for(var t=convert("hsl",r),n=[{h:t.h,s:t.s,l:t.l}],e=0;e<3;e++)t.h=(t.h+90)%360,n.push({h:t.h,s:t.s,l:t.l});return makeColourObject(n)}function triad(r){for(var t=convert("hsl",r),n=[{h:t.h,s:t.s,l:t.l}],e=0;e<2;e++)t.h=(t.h+120)%360,n.push({h:t.h,s:t.s,l:t.l});return makeColourObject(n)}function complementary$1(r){var t=convert("hsluv",r);return t.hu=(t.hu+180)%360,makeColourObject(t)}function triad$1(r){for(var t=convert("hsluv",r),n=[{hu:t.hu,s:t.s,l:t.l}],e=0;e<2;e++)t.hu=(t.hu+120)%360,n.push({h:t.hu,s:t.s,l:t.l});return makeColourObject(n)}function tetrad$1(r){for(var t=convert("hsluv",r),n=[{hu:t.hu,s:t.s,l:t.l}],e=0;e<3;e++)t.hu=(t.hu+90)%360,n.push({h:t.hu,s:t.s,l:t.l});return makeColourObject(n)}Object.defineProperty(exports,"__esModule",{value:!0});var ILLUMINANTS={A:{X:1.0985*100,Y:100,Z:35.585},B:{X:99.072,Y:100,Z:85.223},C:{X:98.074,Y:100,Z:118.232},D50:{X:96.422,Y:100,Z:82.521},D55:{X:95.682,Y:100,Z:92.149},D65:{X:95.047,Y:100,Z:108.883},D75:{X:94.972,Y:100,Z:122.638},E:{X:100,Y:100,Z:100},F2:{X:.99186*100,Y:100,Z:67.393},F7:{X:95.041,Y:100,Z:108.747},F11:{X:1.00962*100,Y:100,Z:64.35}},TRANSFORMS={BRADFORD:[[.8951,.2664,-.1614],[-.7502,1.7135,.0367],[.0389,-.0685,1.0296]],INVERSE_BRADFORD:[[.9869929,-.1470543,.1599627],[.4323053,.5183603,.0492912],[-.0085287,.0400428,.9684867]],SRGB_XYZ:[[.4124,.3576,.1805],[.2126,.7152,.0722],[.0193,.1192,.9505]],INVERSE_SRGB_XYZ:[[3.2406,-1.5372,-.4986],[-.9689,1.8758,.0415],[.0557,-.204,1.057]]},contains=function(r,t){var n=new Set(Object.keys(r));return t.every(function(r){return n.has(r)})},stringStartsWith=function(r,t){return "string"==typeof r&&r.slice(0,t.length)===t},testColorType={hex:function(r){return stringStartsWith(r,"#")},rgb:function(r){return contains(r,["r","g","b"])},cssrgb:function(r){return stringStartsWith(r,"rgb(")},hsl:function(r){return contains(r,["h","s","l"])},csshsl:function(r){return stringStartsWith(r,"hsl(")},hsv:function(r){return contains(r,["h","s","v"])},cmyk:function(r){return contains(r,["c","m","y","k"])},yiq:function(r){return contains(r,["y","i","q"])},XYZ:function(r){return contains(r,["X","Y","Z"])},xyY:function(r){return contains(r,["x","y","Y"])},lms:function(r){return contains(r,["rho","gamma","beta"])},cielab:function(r){return contains(r,["L","a","b"])},cieluv:function(r){return contains(r,["L","u","v"])},cielch:function(r){return contains(r,["L","C","h"])},hsluv:function(r){return contains(r,["hu","s","l"])}},types=Object.keys(testColorType),epsilon=.008856,kappa=903.3,white=getIlluminant("D65"),toR=function(r){return Math.pow(r,3)>epsilon?Math.pow(r,3):(116*r-16)/kappa},cielab={XYZ:function(r){var t=(r.L+16)/116,n=r.a/500+t,e=t-r.b/200,o=toR(n),u=toR(e),a=r.L>kappa*epsilon?Math.pow(t,3):r.L/kappa;return {X:o*white.X,Y:a*white.Y,Z:u*white.Z}}},cielch={cieluv:function(r){var t=toRadian(r.h),n=r.C*Math.cos(t),e=r.C*Math.sin(t);return {L:r.L,u:n,v:e}},hsluv:function(r){if(r.L>99.9999999)return {hu:r.h,s:0,l:100};if(r.L<1e-8)return {hu:r.h,s:0,l:0};for(var t=(r.L+16)/1560896,n=t>.008856?t:r.L/903.3,e=getTransform("INVERSE_SRGB_XYZ"),o=[],u=0;u<3;u++)for(var a=e[u][0],c=e[u][1],i=e[u][2],s=0;s<2;s++){var l=(284517*a-94839*i)*n,h=(838422*i+769860*c+731718*a)*r.L*n-769860*s*r.L,f=(632260*i-126452*c)*n+126452*s;o.push({m:l/f,b:h/f});}var v=Number.MAX_VALUE,b=toRadian(r.h);o.forEach(function(r){var t=r.b/(Math.sin(b)-r.m*Math.cos(b));t>=0&&(v=Math.min(v,t));});var g=v;return {hu:r.h,s:r.C/g*100,l:r.L}}},cieluv={XYZ:function(r){var t=getIlluminant("D65"),n=function(r){return 4*r.X/(r.X+15*r.Y+3*r.Z)}(t),e=function(r){return 9*r.Y/(r.X+15*r.Y+3*r.Z)}(t),o=1/3*(52*r.L/(r.u+13*r.L*n)-1),u=r.L>903.3*.008856?Math.pow((r.L+16)/116,3):r.L/903.3,a=-5*u,c=(u*(39*r.L/(r.v+13*r.L*e)-5)-a)/(o- -1/3);return {X:100*c,Y:100*u,Z:100*(c*o+a)}},cielch:function(r){var t=Math.sqrt(Math.pow(r.u,2)+Math.pow(r.v,2)),n=Math.atan2(r.v,r.u);return n<0&&(n+=2*Math.PI),n=toDegree(n),{L:r.L,C:t,h:n}}},rgb=function(r){return {r:255*(1-r.c)*(1-r.k),g:255*(1-r.m)*(1-r.k),b:255*(1-r.y)*(1-r.k)}},cmyk={rgb:rgb,cssrgb:function(r){var t=rgb(r),n=t.r,e=t.g,o=t.b;return "rgb("+Math.round(n)+","+Math.round(e)+","+Math.round(o)+")"}},csshsl={hsl:function(r){var t=r.replace(/(hsl\(|\)|%|[\s]*)/g,"").split(",").map(function(r){return parseInt(r,10)});return {h:t[0],s:t[1],l:t[2]}}},cssrgb={rgb:function(r){var t=r.replace(/((rgb\(|\))|[\s]*)/g,"").split(",").map(function(r){return parseInt(r,10)});return {r:t[0],g:t[1],b:t[2]}}},hex={rgb:function(r){var t=r.replace("#","").match(/.{2}/g).map(function(r){return parseInt(r,16)});return {r:t[0],g:t[1],b:t[2]}}},hsl={rgb:function(r){if(0===r.s){var t=r.l/100*255;return {r:t,g:t,b:t}}var n,e,o;n=r.l>=50?r.l/100+r.s/100-r.l/100*(r.s/100):r.l/100*(1+r.s/100),e=r.l/100*2-n;var u,a,c,i=((o=r.h/360)+.333)%1,s=o,l=negativeModulo(o-.333,1);return u=6*i<1?e+6*(n-e)*i:2*i<1?n:3*i<2?e+6*(.666-i)*(n-e):e,a=6*s<1?e+6*(n-e)*s:2*s<1?n:3*s<2?e+6*(.666-s)*(n-e):e,c=6*l<1?e+6*(n-e)*l:2*l<1?n:3*l<2?e+6*(.666-l)*(n-e):e,u<0&&(u=0),a<0&&(a=0),c<0&&(c=0),{r:255*u,g:255*a,b:255*c}},csshsl:function(r){return "hsl("+Math.round(r.h)+","+Math.round(r.s)+"%,"+Math.round(r.l)+"%)"},hsv:function(r){var t=Object.assign({},r,{s:r.s/100,l:r.l/100}),n=t.s*(t.l<.5?t.l:1-t.l);return {h:t.h,s:100*(2*n/(t.l+n)),v:100*(t.l+n)}}},hsluv={cielch:function(r){if(r.L>99.9999999)return {L:100,C:0,h:r.hu};if(r.L<1e-8)return {L:0,C:0,h:r.hu};for(var t=(r.l+16)/1560896,n=t>.008856?t:r.l/903.3,e=getTransform("INVERSE_SRGB_XYZ"),o=[],u=0;u<3;u++)for(var a=e[u][0],c=e[u][1],i=e[u][2],s=0;s<2;s++){var l=(284517*a-94839*i)*n,h=(838422*i+769860*c+731718*a)*r.l*n-769860*s*r.l,f=(632260*i-126452*c)*n+126452*s;o.push({m:l/f,b:h/f});}var v=Number.MAX_VALUE,b=toRadian(r.hu);o.forEach(function(r){var t=r.b/(Math.sin(b)-r.m*Math.cos(b));t>=0&&(v=Math.min(v,t));});var g=v;return {L:r.l,C:g/100*r.s,h:r.hu}}},hsv={hsl:function(r){var t=Object.assign({},r,{h:r.h/360,s:r.s/100,v:r.v/100});return {h:360*t.h,s:100*((2-t.s)*t.v<1?t.s*t.v/((2-t.s)*t.v):t.s*t.v/(2-(2-t.s)*t.v)),l:100*((2-t.s)*t.v/2)}}},lms={XYZ:function(r){var t=[r.rho,r.gamma,r.beta],n=getTransform("INVERSE_BRADFORD").map(function(r){return t.reduce(function(t,n,e){return r[e]*n+t},0)});return {X:100*n[0],Y:100*n[1],Z:100*n[2]}}},bounded255=function(r){return bounded(r,[0,255])},slicedToArray=function(){function r(r,t){var n=[],e=!0,o=!1,u=void 0;try{for(var a,c=r[Symbol.iterator]();!(e=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);e=!0);}catch(r){o=!0,u=r;}finally{try{!e&&c.return&&c.return();}finally{if(o)throw u}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return r(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),epsilon$1=.008856,kappa$1=903.3,white$1=getIlluminant("D65"),fromXYZ={rgb:function(r){var t=[r.X,r.Y,r.Z].map(function(r){return r/100}),n=getTransform("INVERSE_SRGB_XYZ").map(function(r){return t.reduce(function(t,n,e){return r[e]*n+t},0)}).map(function(r){return r<=.0031308?12.92*r:1.055*Math.pow(r,1/2.4)-.055}).map(function(r){return 255*r}),e=slicedToArray(n,3);return boundedRgb({r:e[0],g:e[1],b:e[2]})},lms:function(r){var t=[r.X,r.Y,r.Z].map(function(r){return r/100}),n=getTransform("BRADFORD").map(function(r){return t.reduce(function(t,n,e){return r[e]*n+t},0)});return {rho:n[0],gamma:n[1],beta:n[2]}},cielab:function(r){var t=r.X/white$1.X,n=r.Y/white$1.Y,e=r.Z/white$1.Z,o=function(r){return r>epsilon$1?cubeRoot(r):(kappa$1*r+16)/116},u=o(t),a=o(n);return {L:116*a-16,a:500*(u-a),b:200*(a-o(e))}},cieluv:function(r){var t=r.Y/white$1.Y,n=t>epsilon$1?116*cubeRoot(t)-16:kappa$1*t,e=function(r){return 4*r.X/(r.X+15*r.Y+3*r.Z)},o=function(r){return 9*r.Y/(r.X+15*r.Y+3*r.Z)};return {L:n,u:13*n*(e(r)-e(white$1)),v:13*n*(o(r)-o(white$1))}},xyY:function(r){return {x:r.X/(r.X+r.Y+r.Z),y:r.Y/(r.X+r.Y+r.Z),Y:r.Y}}},fromXYZTolms=fromXYZ.lms,fromXYZTocielab=fromXYZ.cielab,fromXYZTocieluv=fromXYZ.cieluv,fromXYZToxyY=fromXYZ.xyY,hsl$1=function(r){var t,n,e=r.r/255,o=r.g/255,u=r.b/255,a=[e,o,u].sort(),c=(a[0]+a[2])/2*100;return a[0]===a[2]?(t=0,n=0):(t=c>=50?(a[2]-a[0])/(2-a[2]-a[0])*100:(a[2]-a[0])/(a[2]+a[0])*100,(n=a[2]===e?(o-u)/(a[2]-a[0])*60:a[2]===o?60*(2+(u-e)/(a[2]-a[0])):60*(4+(e-o)/(a[2]-a[0])))<0?n+=360:n>360&&(n%=360)),{h:n,s:t,l:c}},cieluv$1=function(r){return fromXYZTocieluv(XYZ(r))},XYZ=function(r){var t=[r.r,r.g,r.b].map(function(r){return r/255}).map(function(r){return r<=.04045?r/12.92:Math.pow((r+.055)/1.055,2.4)}),n=getTransform("SRGB_XYZ").map(function(r){return t.reduce(function(t,n,e){return r[e]*n+t},0)}).map(function(r){return 100*r}),e=slicedToArray(n,3);return {X:e[0],Y:e[1],Z:e[2]}},rgb$1={hex:function(r){var t=Math.round(r.r).toString(16);1===t.length&&(t="0"+t);var n=Math.round(r.g).toString(16);1===n.length&&(n="0"+n);var e=Math.round(r.b).toString(16);return 1===e.length&&(e="0"+e),"#"+t+n+e},cssrgb:function(r){return "rgb("+Math.round(r.r)+","+Math.round(r.g)+","+Math.round(r.b)+")"},hsl:hsl$1,csshsl:function(r){var t=hsl$1(r),n=t.h,e=t.s,o=t.l;return "hsl("+Math.round(n)+","+Math.round(e)+"%,"+Math.round(o)+"%)"},cmyk:function(r){var t=r.r/255,n=r.g/255,e=r.b/255,o=1-Math.max(t,n,e);return 1!==o?{c:(1-t-o)/(1-o),m:(1-n-o)/(1-o),y:(1-e-o)/(1-o),k:o}:{c:0,m:0,y:0,k:o}},yiq:function(r){var t=r.r/255*.299+r.g/255*.587+r.b/255*.114,n=r.r/255*.596+r.g/255*-.274+r.b/255*-.322,e=r.r/255*.211+r.g/255*-.523+r.b/255*.312;return n=bounded(n,[-.5957,.5957]),e=bounded(e,[-.5226,.5226]),{y:t,i:n,q:e}},XYZ:XYZ,lms:function(r){return fromXYZTolms(XYZ(r))},cielab:function(r){return fromXYZTocielab(XYZ(r))},cieluv:cieluv$1,xyY:function(r){return fromXYZToxyY(XYZ(r))}},xyY={XYZ:function(r){var t=r.x,n=r.y,e=r.Y;return {X:e/n*t,Y:e,Z:e/n*(1-t-n)}}},bound=function(r){return bounded(r,[0,255])},yiq={rgb:function(r){var t=bounded(r.i,[-.5957,.5957]),n=bounded(r.q,[-.5226,.5226]);return {r:255*bound(r.y+.956*t+.621*n),g:255*bound(r.y+-.272*t+-.647*n),b:255*bound(r.y+-1.106*t+-1.703*n)}}},conversions=Object.freeze({cielab:cielab,cielch:cielch,cieluv:cieluv,cmyk:cmyk,csshsl:csshsl,cssrgb:cssrgb,hex:hex,hsl:hsl,hsluv:hsluv,hsv:hsv,lms:lms,rgb:rgb$1,xyY:xyY,XYZ:fromXYZ,yiq:yiq}),conversionSteps={rgb:{default:"XYZ",csshsl:"hsl",hsv:"hsl"},hex:"rgb",hsl:"rgb",hsv:"hsl",csshsl:"hsl",cssrgb:"rgb",cmyk:"rgb",XYZ:{default:"rgb",cielch:"cieluv",hsluv:"cieluv"},xyY:"XYZ",lms:"XYZ",cieluv:{default:"XYZ",hsluv:"cielch"},cielch:"cieluv",cielab:"XYZ",yiq:"rgb",hsluv:"cielch"},convertNow=function(r,t,n){return conversions[r][t](n)},types$1=Object.keys(testColorType),convertArrayOrColour=function(r,t){return Array.isArray(t)?t.map(function(t){return convert(r,t)}):convert(r,t)};exports.adapt=adapt,exports.adjacent=adjacent,exports.brightness=brightness,exports.complementary=complementary,exports.contrast=contrast,exports.contrastRatio=contrastRatio,exports.convert=makeColourObject,exports.difference=difference,exports.fade=fade,exports.greyscale=greyscale,exports.hue=hue,exports.invert=invert,exports.invertLightness=invertLightness,exports.mid=mid,exports.multiply=multiply,exports.saturation=saturation,exports.sepia=sepia,exports.shade=shade,exports.temperature=temperature,exports.tetrad=tetrad,exports.triad=triad,exports.uniformComplementary=complementary$1,exports.uniformTriad=triad$1,exports.uniformTetrad=tetrad$1;
-});
-
-unwrapExports(chromatism_cjs);
-var chromatism_cjs_1 = chromatism_cjs.adapt;
-var chromatism_cjs_2 = chromatism_cjs.adjacent;
-var chromatism_cjs_3 = chromatism_cjs.brightness;
-var chromatism_cjs_4 = chromatism_cjs.complementary;
-var chromatism_cjs_5 = chromatism_cjs.contrast;
-var chromatism_cjs_6 = chromatism_cjs.contrastRatio;
-var chromatism_cjs_7 = chromatism_cjs.convert;
-var chromatism_cjs_8 = chromatism_cjs.difference;
-var chromatism_cjs_9 = chromatism_cjs.fade;
-var chromatism_cjs_10 = chromatism_cjs.greyscale;
-var chromatism_cjs_11 = chromatism_cjs.hue;
-var chromatism_cjs_12 = chromatism_cjs.invert;
-var chromatism_cjs_13 = chromatism_cjs.invertLightness;
-var chromatism_cjs_14 = chromatism_cjs.mid;
-var chromatism_cjs_15 = chromatism_cjs.multiply;
-var chromatism_cjs_16 = chromatism_cjs.saturation;
-var chromatism_cjs_17 = chromatism_cjs.sepia;
-var chromatism_cjs_18 = chromatism_cjs.shade;
-var chromatism_cjs_19 = chromatism_cjs.temperature;
-var chromatism_cjs_20 = chromatism_cjs.tetrad;
-var chromatism_cjs_21 = chromatism_cjs.triad;
-var chromatism_cjs_22 = chromatism_cjs.uniformComplementary;
-var chromatism_cjs_23 = chromatism_cjs.uniformTriad;
-var chromatism_cjs_24 = chromatism_cjs.uniformTetrad;
-
-var cssrgba = function cssrgba(color) {
-  return 'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + color.a / 255 + ')';
-};
-
-var _this = undefined;
-
-var PARTIALS = true;
-var platform = 'browser';
-
-var loadImage = function () {
-  var _ref = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(input) {
-    var img, canvas, ctx;
-    return regenerator.wrap(function _callee$(_context) {
-      while (1) {
-        switch (_context.prev = _context.next) {
-          case 0:
-            ow(input, ow.any(ow.string.nonEmpty.label('input'), ow.object.instanceOf(global.ImageData).label('input'), ow.object.instanceOf(global.Image).label('input')));
-
-            if (!(typeof input === 'string')) {
-              _context.next = 9;
-              break;
-            }
-
-            img = new global.Image();
-
-            img.crossOrigin = 'anonymous';
-
-            _context.next = 6;
-            return new _Promise(function (resolve, reject) {
-              img.onload = resolve;
-              img.onerror = img.onabort = function () {
-                return reject(new Error('image failed to load'));
-              };
-              img.src = input;
-            });
-
-          case 6:
-            return _context.abrupt('return', loadImage(img));
-
-          case 9:
-            if (!(input instanceof global.ImageData)) {
-              _context.next = 13;
-              break;
-            }
-
-            return _context.abrupt('return', input);
-
-          case 13:
-            if (!(input instanceof global.Image)) {
-              _context.next = 23;
-              break;
-            }
-
-            input.crossOrigin = 'anonymous';
-            canvas = document.createElement('canvas');
-
-            canvas.width = input.naturalWidth;
-            canvas.height = input.naturalHeight;
-            ctx = canvas.getContext('2d');
-
-            ctx.drawImage(input, 0, 0);
-            return _context.abrupt('return', ctx.getImageData(0, 0, canvas.width, canvas.height));
-
-          case 23:
-            throw new Error('invalid input image');
-
-          case 24:
-          case 'end':
-            return _context.stop();
-        }
-      }
-    }, _callee, _this);
-  }));
-
-  return function loadImage(_x) {
-    return _ref.apply(this, arguments);
-  };
-}();
-
-var loadCanvas = function () {
-  var _ref2 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(value) {
-    var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'canvas';
-    var canvas;
-    return regenerator.wrap(function _callee2$(_context2) {
-      while (1) {
-        switch (_context2.prev = _context2.next) {
-          case 0:
-            ow(value, ow.any(ow.string.nonEmpty.label(label), ow.object.instanceOf(global.HTMLCanvasElement).label(label)));
-
-            if (!(typeof value === 'string')) {
-              _context2.next = 10;
-              break;
-            }
-
-            canvas = document.querySelector(value);
-
-            if (canvas) {
-              _context2.next = 5;
-              break;
-            }
-
-            throw new Error('invalid ' + label + ' selector "' + value + '" not found');
-
-          case 5:
-            if (canvas instanceof global.HTMLCanvasElement) {
-              _context2.next = 7;
-              break;
-            }
-
-            throw new Error('invalid ' + label + ' selector "' + value + '" is not a canvas element');
-
-          case 7:
-            return _context2.abrupt('return', canvas);
-
-          case 10:
-            return _context2.abrupt('return', value);
-
-          case 11:
-          case 'end':
-            return _context2.stop();
-        }
-      }
-    }, _callee2, _this);
-  }));
-
-  return function loadCanvas(_x2) {
-    return _ref2.apply(this, arguments);
-  };
-}();
-
-var enableContextAntialiasing = function enableContextAntialiasing(ctx) {
-  ctx.mozImageSmoothingQuality = 'high';
-  ctx.webkitImageSmoothingQuality = 'high';
-  ctx.msImageSmoothingQuality = 'high';
-  ctx.imageSmoothingQuality = 'high';
-
-  ctx.mozImageSmoothingEnabled = true;
-  ctx.webkitImageSmoothingEnabled = true;
-  ctx.msImageSmoothingEnabled = true;
-  ctx.imageSmoothingEnabled = true;
-};
-
-var createImage = function createImage(width, height) {
-  var fillColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
-
-  ow(width, ow.number.label('width').positive.integer);
-  ow(height, ow.number.label('height').positive.integer);
-
-  var canvas = document.createElement('canvas');
-  canvas.width = width;
-  canvas.height = height;
-  var ctx = canvas.getContext('2d');
-  if (fillColor) {
-    ctx.fillStyle = cssrgba(fillColor);
-    ctx.fillRect(0, 0, width, height);
-  }
-  return ctx.getImageData(0, 0, width, height);
-};
-
-var context = {
-  PARTIALS: PARTIALS,
-  platform: platform,
-  loadImage: loadImage,
-  loadCanvas: loadCanvas,
-  enableContextAntialiasing: enableContextAntialiasing,
-  createImage: createImage
-};
-
-var getMeanColor = function getMeanColor(image) {
-  var data = image.data,
-      width = image.width,
-      height = image.height;
-
-
-  var r = 0;
-  var g = 0;
-  var b = 0;
-
-  for (var i = 0; i < height; ++i) {
-    for (var j = 0; j < width; ++j) {
-      var o = (i * width + j) * 4;
-      r += data[o + 0];
-      g += data[o + 1];
-      b += data[o + 2];
-    }
-  }
-
-  r = r / (width * height) | 0;
-  g = g / (width * height) | 0;
-  b = b / (width * height) | 0;
-
-  return { r: r, g: g, b: b, a: 255 };
-};
-
-var computeColor = function computeColor(target, current, lines, alpha) {
-  var width = target.width;
-
-  var dataT = target.data;
-  var dataC = current.data;
-
-  var a = 255.0 / alpha;
-
-  var count = 0;
-  var r = 0.0;
-  var g = 0.0;
-  var b = 0.0;
-
-  for (var i = 0; i < lines.length; ++i) {
-    var line = lines[i];
-
-    for (var j = line.x1; j <= line.x2; ++j) {
-      var o = (line.y * width + j) * 4;
-
-      var tr = dataT[o + 0];
-      var tg = dataT[o + 1];
-      var tb = dataT[o + 2];
-
-      var cr = dataC[o + 0];
-      var cg = dataC[o + 1];
-      var cb = dataC[o + 2];
-
-      r += (tr - cr) * a + cr;
-      g += (tg - cg) * a + cg;
-      b += (tb - cb) * a + cb;
-
-      ++count;
-    }
-  }
-
-  if (count > 0) {
-    r = Math.max(0, Math.min(255, r / count)) | 0;
-    g = Math.max(0, Math.min(255, g / count)) | 0;
-    b = Math.max(0, Math.min(255, b / count)) | 0;
-  }
-
-  return { r: r, g: g, b: b, a: alpha };
-};
-
-var difference = function difference(imageA, imageB) {
-  var width = imageA.width,
-      height = imageA.height;
-
-  var dataA = imageA.data;
-  var dataB = imageB.data;
-
-  if (dataA.length !== dataB.length) {
-    throw new Error('image.difference incompatible images');
-  }
-
-  var sum = 0.0;
-
-  for (var i = 0; i < height; ++i) {
-    for (var j = 0; j < width; ++j) {
-      var o = (i * width + j) * 4;
-
-      var ar = dataA[o + 0];
-      var ag = dataA[o + 1];
-      var ab = dataA[o + 2];
-
-      var br = dataB[o + 0];
-      var bg = dataB[o + 1];
-      var bb = dataB[o + 2];
-
-      var dr = ar - br;
-      var dg = ag - bg;
-      var db = ab - bb;
-
-      sum += dr * dr + dg * dg + db * db;
-    }
-  }
-
-  return Math.sqrt(sum / (width * height * 3)) / 255;
-};
-
-var differencePartial = function differencePartial(target, before, after, score, lines) {
-  var width = target.width,
-      height = target.height;
-
-  var dataT = target.data;
-  var dataB = before.data;
-  var dataA = after.data;
-
-  if (dataT.length !== dataB.length || dataT.length !== dataA.length) {
-    throw new Error('image.differencePartial incompatible images');
-  }
-
-  var sum = Math.pow(score * 255, 2) * width * height * 3;
-
-  for (var i = 0; i < lines.length; ++i) {
-    var line = lines[i];
-
-    for (var j = line.x1; j <= line.x2; ++j) {
-      var o = (line.y * width + j) * 4;
-
-      var tr = dataT[o + 0];
-      var tg = dataT[o + 1];
-      var tb = dataT[o + 2];
-
-      var br = dataB[o + 0];
-      var bg = dataB[o + 1];
-      var bb = dataB[o + 2];
-
-      var ar = dataA[o + 0];
-      var ag = dataA[o + 1];
-      var ab = dataA[o + 2];
-
-      var dr1 = tr - br;
-      var dg1 = tg - bg;
-      var db1 = tb - bb;
-
-      var dr2 = tr - ar;
-      var dg2 = tg - ag;
-      var db2 = tb - ab;
-
-      sum -= dr1 * dr1 + dg1 * dg1 + db1 * db1;
-      sum += dr2 * dr2 + dg2 * dg2 + db2 * db2;
-    }
-  }
-
-  return Math.sqrt(sum / (width * height * 3)) / 255;
-};
-
-var copyLines = function copyLines(dest, src, lines) {
-  var width = src.width,
-      height = src.height;
-
-  var m = width * height * 4;
-
-  if (dest.data.length !== src.data.length) {
-    throw new Error('image.copyLines incompatible images');
-  }
-
-  for (var i = 0; i < lines.length; ++i) {
-    var line = lines[i];
-    var o1 = Math.min(m, (line.y * width + line.x1) * 4);
-    var o2 = Math.min(m, (line.y * width + line.x2) * 4);
-    dest.data.set(src.data.slice(o1, o2), o1);
-  }
-};
-
-var drawLines = function drawLines(image, color, lines) {
-  var data = image.data,
-      width = image.width;
-
-
-  var sr = color.r;
-  var sg = color.g;
-  var sb = color.b;
-  var sa = color.a;
-
-  for (var i = 0; i < lines.length; ++i) {
-    var line = lines[i];
-    var ma = sa / 255;
-    var a = 1.0 - ma;
-
-    for (var j = line.x1; j <= line.x2; ++j) {
-      var o = (line.y * width + j) * 4;
-
-      var dr = data[o + 0];
-      var dg = data[o + 1];
-      var db = data[o + 2];
-
-      data[o + 0] = dr * a + sr * ma | 0;
-      data[o + 1] = dg * a + sg * ma | 0;
-      data[o + 2] = db * a + sb * ma | 0;
-    }
-  }
-};
-
-var core = {
-  getMeanColor: getMeanColor,
-  computeColor: computeColor,
-  difference: difference,
-  differencePartial: differencePartial,
-  copyLines: copyLines,
-  drawLines: drawLines
-};
-
-var classCallCheck = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-exports.default = function (instance, Constructor) {
-  if (!(instance instanceof Constructor)) {
-    throw new TypeError("Cannot call a class as a function");
-  }
-};
-});
-
-var _classCallCheck = unwrapExports(classCallCheck);
-
-// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
-_export(_export.S + _export.F * !_descriptors, 'Object', { defineProperty: _objectDp.f });
-
-var $Object = _core.Object;
-var defineProperty = function defineProperty(it, key, desc) {
-  return $Object.defineProperty(it, key, desc);
-};
-
-var defineProperty$1 = createCommonjsModule(function (module) {
-module.exports = { "default": defineProperty, __esModule: true };
-});
-
-unwrapExports(defineProperty$1);
-
-var createClass = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-
-
-var _defineProperty2 = _interopRequireDefault(defineProperty$1);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function () {
-  function defineProperties(target, props) {
-    for (var i = 0; i < props.length; i++) {
-      var descriptor = props[i];
-      descriptor.enumerable = descriptor.enumerable || false;
-      descriptor.configurable = true;
-      if ("value" in descriptor) descriptor.writable = true;
-      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
-    }
-  }
-
-  return function (Constructor, protoProps, staticProps) {
-    if (protoProps) defineProperties(Constructor.prototype, protoProps);
-    if (staticProps) defineProperties(Constructor, staticProps);
-    return Constructor;
-  };
-}();
-});
-
-var _createClass = unwrapExports(createClass);
-
-var randomInt = function (min, max) {
-	if (max === undefined) {
-		max = min;
-		min = 0;
-	}
-
-	if (typeof min !== 'number' || typeof max !== 'number') {
-		throw new TypeError('Expected all arguments to be numbers');
-	}
-
-	return Math.floor(Math.random() * (max - min + 1) + min);
-};
-
-var func = Symbol('func');
-var validate = Symbol('validate');
-
-var symbols = {
-	func: func,
-	validate: validate
-};
-
-const { func: func$1 } = symbols;
-
-const numberPredicates = {
-  positive: (value) => (value > 0),
-  negative: (value) => (value < 0),
-  nonNegative: (value) => (value >= 0),
-  integer: (value) => (value === (value | 0)),
-
-  [func$1]: {
-    is: (fn) => fn,
-    eq: (v) => (value) => (value === v),
-    gt: (v) => (value) => (value > v),
-    gte: (v) => (value) => (value >= v),
-    lt: (v) => (value) => (value < v),
-    lte: (v) => (value) => (value <= v)
-  }
-};
-
-var number = {
-  predicates: numberPredicates,
-  validator: (value) => {
-    return typeof value === 'number'
-  }
-};
-
-const { func: func$2 } = symbols;
-
-const stringPredicates = {
-  empty: (value) => (value === ''),
-  nonEmpty: (value) => (value !== ''),
-
-  [func$2]: {
-    is: (fn) => fn,
-    eq: (v) => (value) => (value === v),
-    length: (v) => (value) => (value.length === v),
-    minLength: (v) => (value) => (value.length >= v),
-    maxLength: (v) => (value) => (value.length <= v),
-    matches: (v) => (value) => v.test(value),
-    startsWith: (v) => (value) => value.startsWith(v),
-    endsWith: (v) => (value) => value.endsWith(v)
-  }
-};
-
-var string = {
-  predicates: stringPredicates,
-  validator: (value) => {
-    return typeof value === 'string'
-  }
-};
-
-const { func: func$3 } = symbols;
-
-const objectPredicates = {
-  plain: (value) => {
-    if (typeof value !== 'object') return false
-
-    const proto = Object.getPrototypeOf(value);
-    return proto === null || proto === Object.getPrototypeOf({})
-  },
-  empty: (value) => Object.keys(value).length === 0,
-  nonEmpty: (value) => Object.keys(value).length > 0,
-
-  [func$3]: {
-    is: (fn) => fn,
-    instanceOf: (v) => (value) => (value instanceof v)
-  }
-};
-
-var object = {
-  predicates: objectPredicates,
-  validator: (value) => {
-    return typeof value === 'object'
-  }
-};
-
-var owLite = createCommonjsModule(function (module) {
-
-
-
-
-
-
-const typePredicates = {
-  number,
-  string,
-  object
-};
-
-const createOw = ({
-  validators = [],
-  predicates = typePredicates,
-  type = null
-} = { }) => {
-  const ow$$1 = new Proxy(function () { }, {
-    get: (obj, key) => {
-      if (key === symbols.validate) {
-        return (value, label = 'argument') => {
-          if (!type) {
-            return new Error('missing required type specifier')
-          }
-
-          for (let i = 0; i < validators.length; ++i) {
-            const validator = validators[i];
-            const result = validator.fn(value);
-
-            if (!result) {
-              if (i === 0) {
-                throw new Error(`Expected ${label} \`${value}\` to be of type \`${type}\`, but received type \`${typeof value}\``)
-              } else {
-                throw new Error(`Expected ${type} \`${label}\` \`${value}\` failed predicate \`${validator.key}\``)
-              }
-            }
-          }
-        }
-      }
-
-      const predicate = predicates[key];
-
-      if (predicate) {
-        if (typeof predicate === 'function') {
-          validators.push({
-            key,
-            fn: predicate
-          });
-
-          return ow$$1
-        } else {
-          return createOw({
-            type: key,
-            validators: [
-              {
-                key,
-                fn: predicate.validator
-              }
-            ],
-            predicates: predicate.predicates
-          })
-        }
-      } else {
-        const fn = predicates[symbols.func] && predicates[symbols.func][key];
-
-        if (fn) {
-          return new Proxy(function () { }, {
-            get: () => {
-              throw new Error(`invalid use of functional predicate "${key}"`)
-            },
-
-            apply: (obj, thisArg, args) => {
-              validators.push({
-                key,
-                fn: fn(...args)
-              });
-
-              return ow$$1
-            }
-          })
-        } else {
-          if (key === 'default' || key === '__esModule') {
-            return ow$$1
-          }
-
-          return ow$$1
-          // throw new Error(`unrecognized predicate "${key}"`)
-        }
-      }
-    },
-
-    apply: (obj, thisArg, args) => {
-      if (args.length !== 2 && args.length !== 3) {
-        throw new Error('invalid number of arguments to "ow"')
-      } else {
-        args[1][symbols.validate](args[0], args[2]);
-      }
-    }
-  });
-
-  return ow$$1
-};
-
-module.exports = createOw();
-});
-
-unwrapExports(owLite);
-
-var rng = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
-
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
-var RNG = function () {
-  function RNG() {
-    _classCallCheck(this, RNG);
-  }
-
-  _createClass(RNG, [{
-    key: 'next',
-    value: function next() {
-      throw new Error('RNG.next must be overridden');
-    }
-  }, {
-    key: 'seed',
-    value: function seed(_seed, opts) {
-      throw new Error('RNG.seed must be overridden');
-    }
-  }, {
-    key: 'clone',
-    value: function clone(seed, opts) {
-      throw new Error('RNG.clone must be overridden');
-    }
-  }, {
-    key: '_seed',
-    value: function _seed(seed, opts) {
-      // TODO: add entropy and stuff
-
-      if (seed === (seed | 0)) {
-        return seed;
-      } else {
-        var strSeed = '' + seed;
-        var s = 0;
-
-        for (var k = 0; k < strSeed.length; ++k) {
-          s ^= strSeed.charCodeAt(k) | 0;
-        }
-
-        return s;
-      }
-    }
-  }, {
-    key: 'name',
-    get: function get() {
-      throw new Error('RNG.name must be overridden');
-    }
-  }]);
-
-  return RNG;
-}();
-
-exports.default = RNG;
-
-});
-
-unwrapExports(rng);
-
-var xor128 = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
-
-
-
-var _rng2 = _interopRequireDefault(rng);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
-function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
-
-function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
-
-var RNGXOR128 = function (_RNG) {
-  _inherits(RNGXOR128, _RNG);
-
-  function RNGXOR128(seed, opts) {
-    _classCallCheck(this, RNGXOR128);
-
-    var _this = _possibleConstructorReturn(this, (RNGXOR128.__proto__ || Object.getPrototypeOf(RNGXOR128)).call(this));
-
-    _this.x = 0;
-    _this.y = 0;
-    _this.z = 0;
-    _this.w = 0;
-
-    _this.seed(seed, opts);
-    return _this;
-  }
-
-  _createClass(RNGXOR128, [{
-    key: 'next',
-    value: function next() {
-      var t = this.x ^ this.x << 1;
-      this.x = this.y;
-      this.y = this.z;
-      this.z = this.w;
-      this.w = this.w ^ (this.w >>> 19 ^ t ^ t >>> 8);
-      return (this.w >>> 0) / 0x100000000;
-    }
-  }, {
-    key: 'seed',
-    value: function seed(_seed, opts) {
-      // this._rng = seedrandom(this._seed(seed, opts))
-
-      this.x = this._seed(_seed, opts);
-
-      // discard an initial batch of 64 values
-      for (var i = 0; i < 64; ++i) {
-        this.next();
-      }
-    }
-  }, {
-    key: 'clone',
-    value: function clone(seed, opts) {
-      return new RNGXOR128(seed, opts);
-    }
-  }, {
-    key: 'name',
-    get: function get() {
-      return 'xor128';
-    }
-  }]);
-
-  return RNGXOR128;
-}(_rng2.default);
-
-exports.default = RNGXOR128;
-
-});
-
-unwrapExports(xor128);
-
-var _function = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-
-
-var _rng2 = _interopRequireDefault(rng);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
-function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
-
-function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
-
-var RNGFunction = function (_RNG) {
-  _inherits(RNGFunction, _RNG);
-
-  function RNGFunction(seed, opts) {
-    _classCallCheck(this, RNGFunction);
-
-    var _this = _possibleConstructorReturn(this, (RNGFunction.__proto__ || Object.getPrototypeOf(RNGFunction)).call(this));
-
-    _this.seed(seed, opts);
-    return _this;
-  }
-
-  _createClass(RNGFunction, [{
-    key: 'next',
-    value: function next() {
-      return this._rng();
-    }
-  }, {
-    key: 'seed',
-    value: function seed(_seed) {
-      (0, _owLite2.default)(_seed, _owLite2.default.function);
-      this._rng = _seed;
-    }
-  }, {
-    key: 'clone',
-    value: function clone(seed, opts) {
-      return new RNGFunction(seed, opts);
-    }
-  }, {
-    key: 'name',
-    get: function get() {
-      return 'function';
-    }
-  }]);
-
-  return RNGFunction;
-}(_rng2.default);
-
-exports.default = RNGFunction;
-
-});
-
-unwrapExports(_function);
-
-var mathRandom = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
-
-
-
-var _rng2 = _interopRequireDefault(rng);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
-function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
-
-function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
-
-var RNGMathRandom = function (_RNG) {
-  _inherits(RNGMathRandom, _RNG);
-
-  function RNGMathRandom() {
-    _classCallCheck(this, RNGMathRandom);
-
-    return _possibleConstructorReturn(this, (RNGMathRandom.__proto__ || Object.getPrototypeOf(RNGMathRandom)).apply(this, arguments));
-  }
-
-  _createClass(RNGMathRandom, [{
-    key: 'next',
-    value: function next() {
-      return Math.random();
-    }
-  }, {
-    key: 'seed',
-    value: function seed(_seed, opts) {
-      // intentionally empty
-    }
-  }, {
-    key: 'clone',
-    value: function clone() {
-      return new RNGMathRandom();
-    }
-  }, {
-    key: 'name',
-    get: function get() {
-      return 'default';
-    }
-  }]);
-
-  return RNGMathRandom;
-}(_rng2.default);
-
-exports.default = RNGMathRandom;
-
-});
-
-unwrapExports(mathRandom);
-
-var rngFactory = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
-
-
-
-var _rng2 = _interopRequireDefault(rng);
-
-
-
-var _xor2 = _interopRequireDefault(xor128);
-
-
-
-var _function2 = _interopRequireDefault(_function);
-
-
-
-var _mathRandom2 = _interopRequireDefault(mathRandom);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
-
-var PRNG_BUILTINS = {
-  // TODO: add more prng from C++11 lib
-  'xor128': _xor2.default,
-  'function': _function2.default,
-  'default': _mathRandom2.default
-};
-
-exports.default = function () {
-  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
-    args[_key] = arguments[_key];
-  }
-
-  var _args$ = args[0],
-      arg0 = _args$ === undefined ? 'default' : _args$,
-      rest = args.slice(1);
-
-
-  switch (typeof arg0 === 'undefined' ? 'undefined' : _typeof(arg0)) {
-    case 'object':
-      if (arg0 instanceof _rng2.default) {
-        return arg0;
-      }
-      break;
-
-    case 'function':
-      return new _function2.default(arg0);
-
-    case 'string':
-      var PRNG = PRNG_BUILTINS[arg0];
-      if (PRNG) {
-        return new (Function.prototype.bind.apply(PRNG, [null].concat(_toConsumableArray(rest))))();
-      }
-      break;
-  }
-
-  throw new Error('invalid RNG "' + arg0 + '"');
-};
-
-});
-
-unwrapExports(rngFactory);
-
-var uniform = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random, min, max) {
-  if (max === undefined) {
-    max = min === undefined ? 1 : min;
-    min = 0;
-  }
-
-  (0, _owLite2.default)(min, _owLite2.default.number);
-  (0, _owLite2.default)(max, _owLite2.default.number);
-
-  return function () {
-    return random.next() * (max - min) + min;
-  };
-};
-
-});
-
-unwrapExports(uniform);
-
-var uniformInt = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random, min, max) {
-  if (max === undefined) {
-    max = min === undefined ? 1 : min;
-    min = 0;
-  }
-
-  (0, _owLite2.default)(min, _owLite2.default.number.integer);
-  (0, _owLite2.default)(max, _owLite2.default.number.integer);
-
-  return function () {
-    return random.next() * (max - min + 1) + min | 0;
-  };
-};
-
-});
-
-unwrapExports(uniformInt);
-
-var uniformBoolean = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-exports.default = function (random) {
-  return function () {
-    return random.next() >= 0.5;
-  };
-};
-
-});
-
-unwrapExports(uniformBoolean);
-
-var normal = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random) {
-  var mu = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
-  var sigma = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
-
-  (0, _owLite2.default)(mu, _owLite2.default.number);
-  (0, _owLite2.default)(sigma, _owLite2.default.number);
-
-  return function () {
-    var x = void 0,
-        y = void 0,
-        r = void 0;
-
-    do {
-      x = random.next() * 2 - 1;
-      y = random.next() * 2 - 1;
-      r = x * x + y * y;
-    } while (!r || r > 1);
-
-    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
-  };
-};
-
-});
-
-unwrapExports(normal);
-
-var logNormal = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-exports.default = function (random) {
-  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
-    args[_key - 1] = arguments[_key];
-  }
-
-  var normal = random.normal.apply(random, args);
-
-  return function () {
-    return Math.exp(normal());
-  };
-};
-
-});
-
-unwrapExports(logNormal);
-
-var bernoulli = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random) {
-  var p = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;
-
-  (0, _owLite2.default)(p, _owLite2.default.number.greaterThan(0).lessThan(1));
-
-  return function () {
-    return random.next() + p | 0;
-  };
-};
-
-});
-
-unwrapExports(bernoulli);
-
-var binomial = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random) {
-  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
-  var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;
-
-  (0, _owLite2.default)(n, _owLite2.default.number.positive.integer);
-  (0, _owLite2.default)(p, _owLite2.default.number.greaterThanOrEqual(0).lessThanOrEqual(1));
-
-  return function () {
-    var i = 0;
-    var x = 0;
-
-    while (i++ < n) {
-      x += random.next() < p;
-    }
-
-    return x;
-  };
-};
-
-});
-
-unwrapExports(binomial);
-
-var geometric = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random) {
-  var p = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;
-
-  (0, _owLite2.default)(p, _owLite2.default.number.greaterThan(0).lessThanOrEqual(1));
-  var invLogP = 1.0 / Math.log(1.0 - p);
-
-  return function () {
-    return 1 + Math.log(random.next()) * invLogP | 0;
-  };
-};
-
-});
-
-unwrapExports(geometric);
-
-var poisson = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-var logFactorialTable = [0.0, 0.0, 0.69314718055994529, 1.7917594692280550, 3.1780538303479458, 4.7874917427820458, 6.5792512120101012, 8.5251613610654147, 10.604602902745251, 12.801827480081469];
-
-var logFactorial = function logFactorial(k) {
-  return logFactorialTable[k];
-};
-
-var logSqrt2PI = 0.91893853320467267;
-
-exports.default = function (random) {
-  var lambda = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
-
-  (0, _owLite2.default)(lambda, _owLite2.default.number.positive);
-
-  if (lambda < 10) {
-    // inversion method
-    var expMean = Math.exp(-lambda);
-
-    return function () {
-      var p = expMean;
-      var x = 0;
-      var u = random.next();
-
-      while (u > p) {
-        u = u - p;
-        p = lambda * p / ++x;
-      }
-
-      return x;
-    };
-  } else {
-    // generative method
-    var smu = Math.sqrt(lambda);
-    var b = 0.931 + 2.53 * smu;
-    var a = -0.059 + 0.02483 * b;
-    var invAlpha = 1.1239 + 1.1328 / (b - 3.4);
-    var vR = 0.9277 - 3.6224 / (b - 2);
-
-    return function () {
-      while (true) {
-        var u = void 0;
-        var v = random.next();
-
-        if (v <= 0.86 * vR) {
-          u = v / vR - 0.43;
-          return Math.floor((2 * a / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445);
-        }
-
-        if (v >= vR) {
-          u = random.next() - 0.5;
-        } else {
-          u = v / vR - 0.93;
-          u = (u < 0 ? -0.5 : 0.5) - u;
-          v = random.next() * vR;
-        }
-
-        var us = 0.5 - Math.abs(u);
-        if (us < 0.013 && v > us) {
-          continue;
-        }
-
-        var k = Math.floor((2 * a / us + b) * u + lambda + 0.445) | 0;
-        v = v * invAlpha / (a / (us * us) + b);
-
-        if (k >= 10) {
-          var t = (k + 0.5) * Math.log(lambda / k) - lambda - logSqrt2PI + k - (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k;
-
-          if (Math.log(v * smu) <= t) {
-            return k;
-          }
-        } else if (k >= 0) {
-          if (Math.log(v) <= k * Math.log(lambda) - lambda - logFactorial(k)) {
-            return k;
-          }
-        }
-      }
-    };
-  }
-};
-
-});
-
-unwrapExports(poisson);
-
-var exponential = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random) {
-  var lambda = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
-
-  (0, _owLite2.default)(lambda, _owLite2.default.number.positive);
-
-  return function () {
-    return -Math.log(1 - random.next()) / lambda;
-  };
-};
-
-});
-
-unwrapExports(exponential);
-
-var irwinHall = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random, n) {
-  (0, _owLite2.default)(n, _owLite2.default.number.integer.greaterThanOrEqual(0));
-
-  return function () {
-    var sum = 0;
-    for (var i = 0; i < n; ++i) {
-      sum += random.next();
-    }
-
-    return sum;
-  };
-};
-
-});
-
-unwrapExports(irwinHall);
-
-var bates = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random, n) {
-  (0, _owLite2.default)(n, _owLite2.default.number.integer.positive);
-  var irwinHall = random.irwinHall(n);
-
-  return function () {
-    return irwinHall() / n;
-  };
-};
-
-});
-
-unwrapExports(bates);
-
-var pareto = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (random, alpha) {
-  (0, _owLite2.default)(alpha, _owLite2.default.number.greaterThanOrEqual(0));
-  var invAlpha = 1.0 / alpha;
-
-  return function () {
-    return 1.0 / Math.pow(1.0 - random.next(), invAlpha);
-  };
-};
-
-});
-
-unwrapExports(pareto);
-
-var random = createCommonjsModule(function (module, exports) {
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-
-var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
-
-
-
-var _owLite2 = _interopRequireDefault(owLite);
-
-
-
-var _rng3 = _interopRequireDefault(rng);
-
-
-
-var _rngFactory2 = _interopRequireDefault(rngFactory);
-
-
-
-var _uniform3 = _interopRequireDefault(uniform);
-
-
-
-var _uniformInt3 = _interopRequireDefault(uniformInt);
-
-
-
-var _uniformBoolean3 = _interopRequireDefault(uniformBoolean);
-
-
-
-var _normal3 = _interopRequireDefault(normal);
-
-
-
-var _logNormal3 = _interopRequireDefault(logNormal);
-
-
-
-var _bernoulli3 = _interopRequireDefault(bernoulli);
-
-
-
-var _binomial3 = _interopRequireDefault(binomial);
-
-
-
-var _geometric3 = _interopRequireDefault(geometric);
-
-
-
-var _poisson3 = _interopRequireDefault(poisson);
-
-
-
-var _exponential3 = _interopRequireDefault(exponential);
-
-
-
-var _irwinHall3 = _interopRequireDefault(irwinHall);
-
-
-
-var _bates3 = _interopRequireDefault(bates);
-
-
-
-var _pareto3 = _interopRequireDefault(pareto);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
-/**
- * Seedable random number generator supporting many common distributions.
- *
- * Defaults to Math.random as its underlying pseudorandom number generator.
- *
- * @name Random
- * @class
- *
- * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.
- */
-var Random = function () {
-  function Random(rng$$1) {
-    _classCallCheck(this, Random);
-
-    if (rng$$1) (0, _owLite2.default)(rng$$1, _owLite2.default.object.instanceOf(_rng3.default));
-
-    this._cache = {};
-    this.use(rng$$1);
-  }
-
-  /**
-   * @member {RNG} Underlying pseudo-random number generator
-   */
-
-
-  _createClass(Random, [{
-    key: 'clone',
-
-
-    /**
-     * Creates a new `Random` instance, optionally specifying parameters to
-     * set a new seed.
-     *
-     * @see RNG.clone
-     *
-     * @param {string} [seed] - Optional seed for new RNG.
-     * @param {object} [opts] - Optional config for new RNG options.
-     * @return {Random}
-     */
-    value: function clone() {
-      var _rng;
-
-      return new Random((_rng = this.rng).clone.apply(_rng, arguments));
-    }
-
-    /**
-     * Sets the underlying pseudorandom number generator used via
-     * either an instance of `seedrandom`, a custom instance of RNG
-     * (for PRNG plugins), or a string specifying the PRNG to use
-     * along with an optional `seed` and `opts` to initialize the
-     * RNG.
-     *
-     * @example
-     * const random = require('random')
-     *
-     * random.use('xor128', 'foobar')
-     * // or
-     * random.use(seedrandom('kittens'))
-     * // or
-     * random.use(Math.random)
-     *
-     * @param {...*} args
-     */
-
-  }, {
-    key: 'use',
-    value: function use() {
-      this._rng = _rngFactory2.default.apply(undefined, arguments);
-    }
-
-    /**
-     * Patches `Math.random` with this Random instance's PRNG.
-     */
-
-  }, {
-    key: 'patch',
-    value: function patch() {
-      if (this._patch) {
-        throw new Error('Math.random already patched');
-      }
-
-      this._patch = Math.random;
-      Math.random = this.uniform();
-    }
-
-    /**
-     * Restores a previously patched `Math.random` to its original value.
-     */
-
-  }, {
-    key: 'unpatch',
-    value: function unpatch() {
-      if (this._patch) {
-        Math.random = this._patch;
-        delete this._patch;
-      }
-    }
-
-    // --------------------------------------------------------------------------
-    // Uniform utility functions
-    // --------------------------------------------------------------------------
-
-    /**
-     * Convenience wrapper around `this.rng.next()`
-     *
-     * Returns a floating point number in [0, 1).
-     *
-     * @return {number}
-     */
-
-  }, {
-    key: 'next',
-    value: function next() {
-      return this._rng.next();
-    }
-
-    /**
-     * Samples a uniform random floating point number, optionally specifying
-     * lower and upper bounds.
-     *
-     * Convence wrapper around `random.uniform()`
-     *
-     * @param {number} [min=0] - Lower bound (float, inclusive)
-     * @param {number} [max=1] - Upper bound (float, exclusive)
-     * @return {number}
-     */
-
-  }, {
-    key: 'float',
-    value: function float(min, max) {
-      return this.uniform(min, max)();
-    }
-
-    /**
-     * Samples a uniform random integer, optionally specifying lower and upper
-     * bounds.
-     *
-     * Convence wrapper around `random.uniformInt()`
-     *
-     * @param {number} [min=0] - Lower bound (integer, inclusive)
-     * @param {number} [max=1] - Upper bound (integer, inclusive)
-     * @return {number}
-     */
-
-  }, {
-    key: 'int',
-    value: function int(min, max) {
-      return this.uniformInt(min, max)();
-    }
-
-    /**
-     * Samples a uniform random integer, optionally specifying lower and upper
-     * bounds.
-     *
-     * Convence wrapper around `random.uniformInt()`
-     *
-     * @alias `random.int`
-     *
-     * @param {number} [min=0] - Lower bound (integer, inclusive)
-     * @param {number} [max=1] - Upper bound (integer, inclusive)
-     * @return {number}
-     */
-
-  }, {
-    key: 'integer',
-    value: function integer(min, max) {
-      return this.uniformInt(min, max)();
-    }
-
-    /**
-     * Samples a uniform random boolean value.
-     *
-     * Convence wrapper around `random.uniformBoolean()`
-     *
-     * @alias `random.boolean`
-     *
-     * @return {boolean}
-     */
-
-  }, {
-    key: 'bool',
-    value: function bool() {
-      return this.uniformBoolean()();
-    }
-
-    /**
-     * Samples a uniform random boolean value.
-     *
-     * Convence wrapper around `random.uniformBoolean()`
-     *
-     * @return {boolean}
-     */
-
-  }, {
-    key: 'boolean',
-    value: function boolean() {
-      return this.uniformBoolean()();
-    }
-
-    // --------------------------------------------------------------------------
-    // Uniform distributions
-    // --------------------------------------------------------------------------
-
-    /**
-     * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).
-     *
-     * @param {number} [min=0] - Lower bound (float, inclusive)
-     * @param {number} [max=1] - Upper bound (float, exclusive)
-     * @return {function}
-     */
-
-  }, {
-    key: 'uniform',
-    value: function uniform$$1(min, max) {
-      return this._memoize('uniform', _uniform3.default, min, max);
-    }
-
-    /**
-     * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution).
-     *
-     * @param {number} [min=0] - Lower bound (integer, inclusive)
-     * @param {number} [max=1] - Upper bound (integer, inclusive)
-     * @return {function}
-     */
-
-  }, {
-    key: 'uniformInt',
-    value: function uniformInt$$1(min, max) {
-      return this._memoize('uniformInt', _uniformInt3.default, min, max);
-    }
-
-    /**
-     * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution),
-     * with two possible outcomes, `true` or `false.
-     *
-     * This method is analogous to flipping a coin.
-     *
-     * @return {function}
-     */
-
-  }, {
-    key: 'uniformBoolean',
-    value: function uniformBoolean$$1() {
-      return this._memoize('uniformBoolean', _uniformBoolean3.default);
-    }
-
-    // --------------------------------------------------------------------------
-    // Normal distributions
-    // --------------------------------------------------------------------------
-
-    /**
-     * Generates a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution).
-     *
-     * @param {number} [mu=0] - Mean
-     * @param {number} [sigma=1] - Standard deviation
-     * @return {function}
-     */
-
-  }, {
-    key: 'normal',
-    value: function normal$$1(mu, sigma) {
-      return (0, _normal3.default)(this, mu, sigma);
-    }
-
-    /**
-     * Generates a [Log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution).
-     *
-     * @param {number} [mu=0] - Mean of underlying normal distribution
-     * @param {number} [sigma=1] - Standard deviation of underlying normal distribution
-     * @return {function}
-     */
-
-  }, {
-    key: 'logNormal',
-    value: function logNormal$$1(mu, sigma) {
-      return (0, _logNormal3.default)(this, mu, sigma);
-    }
-
-    // --------------------------------------------------------------------------
-    // Bernoulli distributions
-    // --------------------------------------------------------------------------
-
-    /**
-     * Generates a [Bernoulli distribution](https://en.wikipedia.org/wiki/Bernoulli_distribution).
-     *
-     * @param {number} [p=0.5] - Success probability of each trial.
-     * @return {function}
-     */
-
-  }, {
-    key: 'bernoulli',
-    value: function bernoulli$$1(p) {
-      return (0, _bernoulli3.default)(this, p);
-    }
-
-    /**
-     * Generates a [Binomial distribution](https://en.wikipedia.org/wiki/Binomial_distribution).
-     *
-     * @param {number} [n=1] - Number of trials.
-     * @param {number} [p=0.5] - Success probability of each trial.
-     * @return {function}
-     */
-
-  }, {
-    key: 'binomial',
-    value: function binomial$$1(n, p) {
-      return (0, _binomial3.default)(this, n, p);
-    }
-
-    /**
-     * Generates a [Geometric distribution](https://en.wikipedia.org/wiki/Geometric_distribution).
-     *
-     * @param {number} [p=0.5] - Success probability of each trial.
-     * @return {function}
-     */
-
-  }, {
-    key: 'geometric',
-    value: function geometric$$1(p) {
-      return (0, _geometric3.default)(this, p);
-    }
-
-    // --------------------------------------------------------------------------
-    // Poisson distributions
-    // --------------------------------------------------------------------------
-
-    /**
-     * Generates a [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution).
-     *
-     * @param {number} [lambda=1] - Mean (lambda > 0)
-     * @return {function}
-     */
-
-  }, {
-    key: 'poisson',
-    value: function poisson$$1(lambda) {
-      return (0, _poisson3.default)(this, lambda);
-    }
-
-    /**
-     * Generates an [Exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution).
-     *
-     * @param {number} [lambda=1] - Inverse mean (lambda > 0)
-     * @return {function}
-     */
-
-  }, {
-    key: 'exponential',
-    value: function exponential$$1(lambda) {
-      return (0, _exponential3.default)(this, lambda);
-    }
-
-    // --------------------------------------------------------------------------
-    // Misc distributions
-    // --------------------------------------------------------------------------
-
-    /**
-     * Generates an [Irwin Hall distribution](https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution).
-     *
-     * @param {number} n - Number of uniform samples to sum (n >= 0)
-     * @return {function}
-     */
-
-  }, {
-    key: 'irwinHall',
-    value: function irwinHall$$1(n) {
-      return (0, _irwinHall3.default)(this, n);
-    }
-
-    /**
-     * Generates a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution).
-     *
-     * @param {number} n - Number of uniform samples to average (n >= 1)
-     * @return {function}
-     */
-
-  }, {
-    key: 'bates',
-    value: function bates$$1(n) {
-      return (0, _bates3.default)(this, n);
-    }
-
-    /**
-     * Generates a [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution).
-     *
-     * @param {number} alpha - Alpha
-     * @return {function}
-     */
-
-  }, {
-    key: 'pareto',
-    value: function pareto$$1(alpha) {
-      return (0, _pareto3.default)(this, alpha);
-    }
-
-    // --------------------------------------------------------------------------
-    // Internal
-    // --------------------------------------------------------------------------
-
-    /**
-     * Memoizes distributions to ensure they're only created when necessary.
-     *
-     * Returns a thunk which that returns independent, identically distributed
-     * samples from the specified distribution.
-     *
-     * @private
-     *
-     * @param {string} label - Name of distribution
-     * @param {function} getter - Function which generates a new distribution
-     * @param {...*} args - Distribution-specific arguments
-     *
-     * @return {function}
-     */
-
-  }, {
-    key: '_memoize',
-    value: function _memoize(label, getter) {
-      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
-        args[_key - 2] = arguments[_key];
-      }
-
-      var key = '' + args.join(';');
-      var value = this._cache[label];
-
-      if (value === undefined || value.key !== key) {
-        value = { key: key, distribution: getter.apply(undefined, [this].concat(args)) };
-        this._cache[label] = value;
-      }
-
-      return value.distribution;
-    }
-  }, {
-    key: 'rng',
-    get: function get() {
-      return this._rng;
-    }
-  }]);
-
-  return Random;
-}();
-
-// defaults to Math.random as its RNG
-
-
-exports.default = new Random();
-
-});
-
-unwrapExports(random);
-
-var random$2 = random.default;
-
-var normal$2 = random$2.normal();
-
-// most Object methods by ES6 should accept primitives
-
-
-
-var _objectSap = function (KEY, exec) {
-  var fn = (_core.Object || {})[KEY] || Object[KEY];
-  var exp = {};
-  exp[KEY] = exec(fn);
-  _export(_export.S + _export.F * _fails(function () { fn(1); }), 'Object', exp);
-};
-
-// 19.1.2.9 Object.getPrototypeOf(O)
-
-
-
-_objectSap('getPrototypeOf', function () {
-  return function getPrototypeOf(it) {
-    return _objectGpo(_toObject(it));
-  };
-});
-
-var getPrototypeOf = _core.Object.getPrototypeOf;
-
-var getPrototypeOf$1 = createCommonjsModule(function (module) {
-module.exports = { "default": getPrototypeOf, __esModule: true };
-});
-
-var _Object$getPrototypeOf = unwrapExports(getPrototypeOf$1);
-
-var f$4 = _wks;
-
-var _wksExt = {
-	f: f$4
-};
-
-var iterator = _wksExt.f('iterator');
-
-var iterator$1 = createCommonjsModule(function (module) {
-module.exports = { "default": iterator, __esModule: true };
-});
-
-unwrapExports(iterator$1);
-
-var _meta = createCommonjsModule(function (module) {
-var META = _uid('meta');
-
-
-var setDesc = _objectDp.f;
-var id = 0;
-var isExtensible = Object.isExtensible || function () {
-  return true;
-};
-var FREEZE = !_fails(function () {
-  return isExtensible(Object.preventExtensions({}));
-});
-var setMeta = function (it) {
-  setDesc(it, META, { value: {
-    i: 'O' + ++id, // object ID
-    w: {}          // weak collections IDs
-  } });
-};
-var fastKey = function (it, create) {
-  // return primitive with prefix
-  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
-  if (!_has(it, META)) {
-    // can't set metadata to uncaught frozen object
-    if (!isExtensible(it)) return 'F';
-    // not necessary to add metadata
-    if (!create) return 'E';
-    // add missing metadata
-    setMeta(it);
-  // return object ID
-  } return it[META].i;
-};
-var getWeak = function (it, create) {
-  if (!_has(it, META)) {
-    // can't set metadata to uncaught frozen object
-    if (!isExtensible(it)) return true;
-    // not necessary to add metadata
-    if (!create) return false;
-    // add missing metadata
-    setMeta(it);
-  // return hash weak collections IDs
-  } return it[META].w;
-};
-// add metadata on freeze-family methods calling
-var onFreeze = function (it) {
-  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);
-  return it;
-};
-var meta = module.exports = {
-  KEY: META,
-  NEED: false,
-  fastKey: fastKey,
-  getWeak: getWeak,
-  onFreeze: onFreeze
-};
-});
-var _meta_1 = _meta.KEY;
-var _meta_2 = _meta.NEED;
-var _meta_3 = _meta.fastKey;
-var _meta_4 = _meta.getWeak;
-var _meta_5 = _meta.onFreeze;
-
-var defineProperty$3 = _objectDp.f;
-var _wksDefine = function (name) {
-  var $Symbol = _core.Symbol || (_core.Symbol = {});
-  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty$3($Symbol, name, { value: _wksExt.f(name) });
-};
-
-// all enumerable object keys, includes symbols
-
-
-
-var _enumKeys = function (it) {
-  var result = _objectKeys(it);
-  var getSymbols = _objectGops.f;
-  if (getSymbols) {
-    var symbols = getSymbols(it);
-    var isEnum = _objectPie.f;
-    var i = 0;
-    var key;
-    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
-  } return result;
-};
-
-// 7.2.2 IsArray(argument)
-
-var _isArray = Array.isArray || function isArray(arg) {
-  return _cof(arg) == 'Array';
-};
-
-// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
-
-var hiddenKeys = _enumBugKeys.concat('length', 'prototype');
-
-var f$5 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
-  return _objectKeysInternal(O, hiddenKeys);
-};
-
-var _objectGopn = {
-	f: f$5
-};
-
-// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
-
-var gOPN = _objectGopn.f;
-var toString$1 = {}.toString;
-
-var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
-  ? Object.getOwnPropertyNames(window) : [];
-
-var getWindowNames = function (it) {
-  try {
-    return gOPN(it);
-  } catch (e) {
-    return windowNames.slice();
-  }
-};
-
-var f$6 = function getOwnPropertyNames(it) {
-  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));
-};
-
-var _objectGopnExt = {
-	f: f$6
-};
-
-var gOPD = Object.getOwnPropertyDescriptor;
-
-var f$7 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
-  O = _toIobject(O);
-  P = _toPrimitive(P, true);
-  if (_ie8DomDefine) try {
-    return gOPD(O, P);
-  } catch (e) { /* empty */ }
-  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
-};
-
-var _objectGopd = {
-	f: f$7
-};
-
-// ECMAScript 6 symbols shim
-
-
-
-
-
-var META = _meta.KEY;
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-var gOPD$1 = _objectGopd.f;
-var dP$1 = _objectDp.f;
-var gOPN$1 = _objectGopnExt.f;
-var $Symbol = _global.Symbol;
-var $JSON = _global.JSON;
-var _stringify = $JSON && $JSON.stringify;
-var PROTOTYPE$2 = 'prototype';
-var HIDDEN = _wks('_hidden');
-var TO_PRIMITIVE = _wks('toPrimitive');
-var isEnum = {}.propertyIsEnumerable;
-var SymbolRegistry = _shared('symbol-registry');
-var AllSymbols = _shared('symbols');
-var OPSymbols = _shared('op-symbols');
-var ObjectProto$1 = Object[PROTOTYPE$2];
-var USE_NATIVE$1 = typeof $Symbol == 'function';
-var QObject = _global.QObject;
-// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
-var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;
-
-// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
-var setSymbolDesc = _descriptors && _fails(function () {
-  return _objectCreate(dP$1({}, 'a', {
-    get: function () { return dP$1(this, 'a', { value: 7 }).a; }
-  })).a != 7;
-}) ? function (it, key, D) {
-  var protoDesc = gOPD$1(ObjectProto$1, key);
-  if (protoDesc) delete ObjectProto$1[key];
-  dP$1(it, key, D);
-  if (protoDesc && it !== ObjectProto$1) dP$1(ObjectProto$1, key, protoDesc);
-} : dP$1;
-
-var wrap = function (tag) {
-  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);
-  sym._k = tag;
-  return sym;
-};
-
-var isSymbol = USE_NATIVE$1 && typeof $Symbol.iterator == 'symbol' ? function (it) {
-  return typeof it == 'symbol';
-} : function (it) {
-  return it instanceof $Symbol;
-};
-
-var $defineProperty = function defineProperty(it, key, D) {
-  if (it === ObjectProto$1) $defineProperty(OPSymbols, key, D);
-  _anObject(it);
-  key = _toPrimitive(key, true);
-  _anObject(D);
-  if (_has(AllSymbols, key)) {
-    if (!D.enumerable) {
-      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));
-      it[HIDDEN][key] = true;
-    } else {
-      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
-      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });
-    } return setSymbolDesc(it, key, D);
-  } return dP$1(it, key, D);
-};
-var $defineProperties = function defineProperties(it, P) {
-  _anObject(it);
-  var keys = _enumKeys(P = _toIobject(P));
-  var i = 0;
-  var l = keys.length;
-  var key;
-  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
-  return it;
-};
-var $create = function create(it, P) {
-  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
-};
-var $propertyIsEnumerable = function propertyIsEnumerable(key) {
-  var E = isEnum.call(this, key = _toPrimitive(key, true));
-  if (this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;
-  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
-};
-var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
-  it = _toIobject(it);
-  key = _toPrimitive(key, true);
-  if (it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;
-  var D = gOPD$1(it, key);
-  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
-  return D;
-};
-var $getOwnPropertyNames = function getOwnPropertyNames(it) {
-  var names = gOPN$1(_toIobject(it));
-  var result = [];
-  var i = 0;
-  var key;
-  while (names.length > i) {
-    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
-  } return result;
-};
-var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
-  var IS_OP = it === ObjectProto$1;
-  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));
-  var result = [];
-  var i = 0;
-  var key;
-  while (names.length > i) {
-    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true)) result.push(AllSymbols[key]);
-  } return result;
-};
-
-// 19.4.1.1 Symbol([description])
-if (!USE_NATIVE$1) {
-  $Symbol = function Symbol() {
-    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
-    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);
-    var $set = function (value) {
-      if (this === ObjectProto$1) $set.call(OPSymbols, value);
-      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
-      setSymbolDesc(this, tag, _propertyDesc(1, value));
-    };
-    if (_descriptors && setter) setSymbolDesc(ObjectProto$1, tag, { configurable: true, set: $set });
-    return wrap(tag);
-  };
-  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {
-    return this._k;
-  });
-
-  _objectGopd.f = $getOwnPropertyDescriptor;
-  _objectDp.f = $defineProperty;
-  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
-  _objectPie.f = $propertyIsEnumerable;
-  _objectGops.f = $getOwnPropertySymbols;
-
-  if (_descriptors && !_library) {
-    _redefine(ObjectProto$1, 'propertyIsEnumerable', $propertyIsEnumerable, true);
-  }
-
-  _wksExt.f = function (name) {
-    return wrap(_wks(name));
-  };
-}
-
-_export(_export.G + _export.W + _export.F * !USE_NATIVE$1, { Symbol: $Symbol });
-
-for (var es6Symbols = (
-  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
-  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
-).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);
-
-for (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);
-
-_export(_export.S + _export.F * !USE_NATIVE$1, 'Symbol', {
-  // 19.4.2.1 Symbol.for(key)
-  'for': function (key) {
-    return _has(SymbolRegistry, key += '')
-      ? SymbolRegistry[key]
-      : SymbolRegistry[key] = $Symbol(key);
-  },
-  // 19.4.2.5 Symbol.keyFor(sym)
-  keyFor: function keyFor(sym) {
-    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
-    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
-  },
-  useSetter: function () { setter = true; },
-  useSimple: function () { setter = false; }
-});
-
-_export(_export.S + _export.F * !USE_NATIVE$1, 'Object', {
-  // 19.1.2.2 Object.create(O [, Properties])
-  create: $create,
-  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
-  defineProperty: $defineProperty,
-  // 19.1.2.3 Object.defineProperties(O, Properties)
-  defineProperties: $defineProperties,
-  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
-  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
-  // 19.1.2.7 Object.getOwnPropertyNames(O)
-  getOwnPropertyNames: $getOwnPropertyNames,
-  // 19.1.2.8 Object.getOwnPropertySymbols(O)
-  getOwnPropertySymbols: $getOwnPropertySymbols
-});
-
-// 24.3.2 JSON.stringify(value [, replacer [, space]])
-$JSON && _export(_export.S + _export.F * (!USE_NATIVE$1 || _fails(function () {
-  var S = $Symbol();
-  // MS Edge converts symbol values to JSON as {}
-  // WebKit converts symbol values to JSON as null
-  // V8 throws on boxed symbols
-  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
-})), 'JSON', {
-  stringify: function stringify(it) {
-    var args = [it];
-    var i = 1;
-    var replacer, $replacer;
-    while (arguments.length > i) args.push(arguments[i++]);
-    $replacer = replacer = args[1];
-    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
-    if (!_isArray(replacer)) replacer = function (key, value) {
-      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
-      if (!isSymbol(value)) return value;
-    };
-    args[1] = replacer;
-    return _stringify.apply($JSON, args);
-  }
-});
-
-// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
-$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);
-// 19.4.3.5 Symbol.prototype[@@toStringTag]
-_setToStringTag($Symbol, 'Symbol');
-// 20.2.1.9 Math[@@toStringTag]
-_setToStringTag(Math, 'Math', true);
-// 24.3.3 JSON[@@toStringTag]
-_setToStringTag(_global.JSON, 'JSON', true);
-
-_wksDefine('asyncIterator');
-
-_wksDefine('observable');
-
-var symbol = _core.Symbol;
-
-var symbol$1 = createCommonjsModule(function (module) {
-module.exports = { "default": symbol, __esModule: true };
-});
-
-unwrapExports(symbol$1);
-
-var _typeof_1 = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-
-
-var _iterator2 = _interopRequireDefault(iterator$1);
-
-
-
-var _symbol2 = _interopRequireDefault(symbol$1);
-
-var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
-  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
-} : function (obj) {
-  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
-};
-});
-
-unwrapExports(_typeof_1);
-
-var possibleConstructorReturn = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-
-
-var _typeof3 = _interopRequireDefault(_typeof_1);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (self, call) {
-  if (!self) {
-    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
-  }
-
-  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
-};
-});
-
-var _possibleConstructorReturn = unwrapExports(possibleConstructorReturn);
-
-// Works with __proto__ only. Old v8 can't work with null proto objects.
-/* eslint-disable no-proto */
-
-
-var check = function (O, proto) {
-  _anObject(O);
-  if (!_isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
-};
-var _setProto = {
-  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
-    function (test, buggy, set) {
-      try {
-        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
-        set(test, []);
-        buggy = !(test instanceof Array);
-      } catch (e) { buggy = true; }
-      return function setPrototypeOf(O, proto) {
-        check(O, proto);
-        if (buggy) O.__proto__ = proto;
-        else set(O, proto);
-        return O;
-      };
-    }({}, false) : undefined),
-  check: check
-};
-
-// 19.1.3.19 Object.setPrototypeOf(O, proto)
-
-_export(_export.S, 'Object', { setPrototypeOf: _setProto.set });
-
-var setPrototypeOf = _core.Object.setPrototypeOf;
-
-var setPrototypeOf$1 = createCommonjsModule(function (module) {
-module.exports = { "default": setPrototypeOf, __esModule: true };
-});
-
-unwrapExports(setPrototypeOf$1);
-
-// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
-_export(_export.S, 'Object', { create: _objectCreate });
-
-var $Object$1 = _core.Object;
-var create = function create(P, D) {
-  return $Object$1.create(P, D);
-};
-
-var create$1 = createCommonjsModule(function (module) {
-module.exports = { "default": create, __esModule: true };
-});
-
-unwrapExports(create$1);
-
-var inherits = createCommonjsModule(function (module, exports) {
-
-exports.__esModule = true;
-
-
-
-var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf$1);
-
-
-
-var _create2 = _interopRequireDefault(create$1);
-
-
-
-var _typeof3 = _interopRequireDefault(_typeof_1);
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-exports.default = function (subClass, superClass) {
-  if (typeof superClass !== "function" && superClass !== null) {
-    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
-  }
-
-  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
-    constructor: {
-      value: subClass,
-      enumerable: false,
-      writable: true,
-      configurable: true
-    }
-  });
-  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
-};
-});
-
-var _inherits = unwrapExports(inherits);
-
-var Scanline = function () {
-  function Scanline(y, x1, x2) {
-    _classCallCheck(this, Scanline);
-
-    if (x1 > x2) {
-      var t = x1;
-      x1 = x2;
-      x2 = t;
-    }
-
-    this.y = y | 0;
-    this.x1 = x1 | 0;
-    this.x2 = x2 | 0;
-  }
-
-  _createClass(Scanline, null, [{
-    key: "filter",
-    value: function filter(lines, width, height) {
-      return lines.filter(function (line) {
-        if (line.y < 0 || line.y >= height) return false;
-        if (line.x1 >= width || line.x2 < 0) return false;
-
-        line.x1 = Math.max(0, Math.min(width - 1, line.x1));
-        line.x2 = Math.max(0, Math.min(width - 1, line.x2));
-
-        return line.x1 < line.x2;
-      });
-    }
-  }]);
-
-  return Scanline;
-}();
-
-var Shape = function () {
-  function Shape() {
-    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
-
-    _classCallCheck(this, Shape);
-
-    this.width = opts.width;
-    this.height = opts.height;
-  }
-
-  _createClass(Shape, [{
-    key: 'copy',
-    value: function copy() {
-      throw new Error('TODO');
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      throw new Error('TODO');
-    }
-  }, {
-    key: 'rasterize',
-    value: function rasterize() {
-      throw new Error('TODO');
-    }
-  }, {
-    key: 'draw',
-    value: function draw(ctx, scale) {
-      throw new Error('TODO');
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      throw new Error('TODO');
-    }
-  }]);
-
-  return Shape;
-}();
-
-var Ellipse = function (_Shape) {
-  _inherits(Ellipse, _Shape);
-
-  function Ellipse(opts) {
-    _classCallCheck(this, Ellipse);
-
-    var _this = _possibleConstructorReturn(this, (Ellipse.__proto__ || _Object$getPrototypeOf(Ellipse)).call(this, opts));
-
-    if (!opts) return _possibleConstructorReturn(_this);
-
-    _this.circle = !!opts.circle;
-    _this.x = random$2.int(0, _this.width - 1);
-    _this.y = random$2.int(0, _this.height - 1);
-
-    _this.rx = random$2.int(1, 32);
-    _this.ry = _this.circle ? _this.rx : random$2.int(1, 32);
-    return _this;
-  }
-
-  _createClass(Ellipse, [{
-    key: 'copy',
-    value: function copy() {
-      var shape = new Ellipse();
-      shape.width = this.width;
-      shape.height = this.height;
-      shape.circle = this.circle;
-      shape.x = this.x;
-      shape.y = this.y;
-      shape.rx = this.rx;
-      shape.ry = this.ry;
-      return shape;
-    }
-  }, {
-    key: 'bounds',
-    value: function bounds() {
-      var x1 = this.x1,
-          y1 = this.y1,
-          x2 = this.x2,
-          y2 = this.y2;
-
-      var t = void 0;
-
-      if (x1 > x2) {
-        t = x1;
-        x1 = x2;
-        x2 = t;
-      }
-
-      if (y1 > y2) {
-        t = y1;
-        y1 = y2;
-        y2 = t;
-      }
-
-      return { x1: x1, y1: y1, x2: x2, y2: y2 };
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      var width = this.width,
-          height = this.height;
-
-      var shape = this.copy();
-      var m = 16;
-
-      switch (random$2.int(0, 2)) {
-        case 0:
-          shape.x = Math.max(0, Math.min(width - 1, shape.x + normal$2() * m));
-          shape.y = Math.max(0, Math.min(height - 1, shape.y + normal$2() * m));
-          break;
-
-        case 1:
-          shape.rx = Math.max(1, Math.min(width - 1, shape.rx + normal$2() * m));
-          if (shape.circle) shape.ry = shape.rx;
-          break;
-
-        case 2:
-          shape.ry = Math.max(1, Math.min(height - 1, shape.ry + normal$2() * m));
-          if (shape.circle) shape.rx = shape.ry;
-          break;
-      }
-
-      return shape;
-    }
-  }, {
-    key: 'rasterize',
-    value: function rasterize() {
-      var width = this.width,
-          height = this.height,
-          x = this.x,
-          y = this.y,
-          rx = this.rx,
-          ry = this.ry;
-
-      var lines = [];
-      var aspect = rx / ry;
-
-      for (var dy = 0; dy < ry; ++dy) {
-        var y1 = y - dy;
-        var y2 = y + dy;
-
-        if ((y1 < 0 || y1 >= height) && (y2 < 0 || y2 >= height)) {
-          continue;
-        }
-
-        var s = Math.sqrt(ry * ry - dy * dy) * aspect;
-        var x1 = Math.max(0, x - s);
-        var x2 = Math.min(width - 1, x + s);
-
-        if (y1 >= 0 && y1 < height) {
-          lines.push(new Scanline(y1, x1, x2));
-        }
-
-        if (y2 >= 0 && y2 < height && dy > 0) {
-          lines.push(new Scanline(y2, x1, x2));
-        }
-      }
-
-      return lines;
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
-
-      return '<ellipse ' + attrs + ' cx="' + this.x + '" cy="' + this.y + '" rx="' + this.rx + '" ry="' + this.ry + '" />';
-    }
-  }]);
-
-  return Ellipse;
-}(Shape);
-
-var Rectangle = function (_Shape) {
-  _inherits(Rectangle, _Shape);
-
-  function Rectangle(opts) {
-    _classCallCheck(this, Rectangle);
-
-    var _this = _possibleConstructorReturn(this, (Rectangle.__proto__ || _Object$getPrototypeOf(Rectangle)).call(this, opts));
-
-    if (!opts) return _possibleConstructorReturn(_this);
-
-    _this.x1 = random$2.int(0, _this.width - 1);
-    _this.y1 = random$2.int(0, _this.height - 1);
-
-    _this.x2 = Math.max(0, Math.min(_this.width - 1, _this.x1 + random$2.int(-16, 16)));
-    _this.y2 = Math.max(0, Math.min(_this.height - 1, _this.y1 + random$2.int(-16, 16)));
-    return _this;
-  }
-
-  _createClass(Rectangle, [{
-    key: 'copy',
-    value: function copy() {
-      var shape = new Rectangle();
-      shape.width = this.width;
-      shape.height = this.height;
-      shape.x1 = this.x1;
-      shape.y1 = this.y1;
-      shape.x2 = this.x2;
-      shape.y2 = this.y2;
-      return shape;
-    }
-  }, {
-    key: 'bounds',
-    value: function bounds() {
-      var x1 = this.x1,
-          y1 = this.y1,
-          x2 = this.x2,
-          y2 = this.y2;
-
-      var t = void 0;
-
-      if (x1 > x2) {
-        t = x1;
-        x1 = x2;
-        x2 = t;
-      }
-
-      if (y1 > y2) {
-        t = y1;
-        y1 = y2;
-        y2 = t;
-      }
-
-      return { x1: x1, y1: y1, x2: x2, y2: y2 };
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      var width = this.width,
-          height = this.height;
-
-      var shape = this.copy();
-      var m = 16;
-
-      switch (random$2.int(0, 1)) {
-        case 0:
-          shape.x1 = Math.max(0, Math.min(width - 1, shape.x1 + normal$2() * m));
-          shape.y1 = Math.max(0, Math.min(height - 1, shape.y1 + normal$2() * m));
-          break;
-
-        case 1:
-          shape.x2 = Math.max(0, Math.min(width - 1, shape.x2 + normal$2() * m));
-          shape.y2 = Math.max(0, Math.min(height - 1, shape.y2 + normal$2() * m));
-          break;
-      }
-
-      return shape;
-    }
-  }, {
-    key: 'rasterize',
-    value: function rasterize() {
-      var _bounds = this.bounds(),
-          x1 = _bounds.x1,
-          y1 = _bounds.y1,
-          x2 = _bounds.x2,
-          y2 = _bounds.y2;
-
-      var lines = [];
-
-      for (var y = y1; y <= y2; ++y) {
-        lines.push(new Scanline(y, x1, x2));
-      }
-
-      return lines;
-    }
-  }, {
-    key: 'draw',
-    value: function draw(ctx) {
-      // TODO
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
-
-      var _bounds2 = this.bounds(),
-          x1 = _bounds2.x1,
-          y1 = _bounds2.y1,
-          x2 = _bounds2.x2,
-          y2 = _bounds2.y2;
-
-      var w = x2 - x1 + 1;
-      var h = y2 - y1 + 1;
-
-      return '<rect ' + attrs + ' x="' + x1 + '" y="' + y1 + '" width="' + w + '" height="' + h + '" />';
-    }
-  }]);
-
-  return Rectangle;
-}(Shape);
-
-var core_getIterator = _core.getIterator = function (it) {
-  var iterFn = core_getIteratorMethod(it);
-  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
-  return _anObject(iterFn.call(it));
-};
-
-var getIterator = core_getIterator;
-
-var getIterator$1 = createCommonjsModule(function (module) {
-module.exports = { "default": getIterator, __esModule: true };
-});
-
-var _getIterator = unwrapExports(getIterator$1);
-
-// 20.2.2.28 Math.sign(x)
-var _mathSign = Math.sign || function sign(x) {
-  // eslint-disable-next-line no-self-compare
-  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
-};
-
-// 20.2.2.28 Math.sign(x)
-
-
-_export(_export.S, 'Math', { sign: _mathSign });
-
-var sign = _core.Math.sign;
-
-var sign$1 = createCommonjsModule(function (module) {
-module.exports = { "default": sign, __esModule: true };
-});
-
-var _Math$sign = unwrapExports(sign$1);
-
-var _validateCollection = function (it, TYPE) {
-  if (!_isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
-  return it;
-};
-
-var dP$2 = _objectDp.f;
-
-
-
-
-
-
-
-
-
-var fastKey = _meta.fastKey;
-
-var SIZE = _descriptors ? '_s' : 'size';
-
-var getEntry = function (that, key) {
-  // fast case
-  var index = fastKey(key);
-  var entry;
-  if (index !== 'F') return that._i[index];
-  // frozen object case
-  for (entry = that._f; entry; entry = entry.n) {
-    if (entry.k == key) return entry;
-  }
-};
-
-var _collectionStrong = {
-  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
-    var C = wrapper(function (that, iterable) {
-      _anInstance(that, C, NAME, '_i');
-      that._t = NAME;         // collection type
-      that._i = _objectCreate(null); // index
-      that._f = undefined;    // first entry
-      that._l = undefined;    // last entry
-      that[SIZE] = 0;         // size
-      if (iterable != undefined) _forOf(iterable, IS_MAP, that[ADDER], that);
-    });
-    _redefineAll(C.prototype, {
-      // 23.1.3.1 Map.prototype.clear()
-      // 23.2.3.2 Set.prototype.clear()
-      clear: function clear() {
-        for (var that = _validateCollection(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
-          entry.r = true;
-          if (entry.p) entry.p = entry.p.n = undefined;
-          delete data[entry.i];
-        }
-        that._f = that._l = undefined;
-        that[SIZE] = 0;
-      },
-      // 23.1.3.3 Map.prototype.delete(key)
-      // 23.2.3.4 Set.prototype.delete(value)
-      'delete': function (key) {
-        var that = _validateCollection(this, NAME);
-        var entry = getEntry(that, key);
-        if (entry) {
-          var next = entry.n;
-          var prev = entry.p;
-          delete that._i[entry.i];
-          entry.r = true;
-          if (prev) prev.n = next;
-          if (next) next.p = prev;
-          if (that._f == entry) that._f = next;
-          if (that._l == entry) that._l = prev;
-          that[SIZE]--;
-        } return !!entry;
-      },
-      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
-      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
-      forEach: function forEach(callbackfn /* , that = undefined */) {
-        _validateCollection(this, NAME);
-        var f = _ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
-        var entry;
-        while (entry = entry ? entry.n : this._f) {
-          f(entry.v, entry.k, this);
-          // revert to the last existing entry
-          while (entry && entry.r) entry = entry.p;
-        }
-      },
-      // 23.1.3.7 Map.prototype.has(key)
-      // 23.2.3.7 Set.prototype.has(value)
-      has: function has(key) {
-        return !!getEntry(_validateCollection(this, NAME), key);
-      }
-    });
-    if (_descriptors) dP$2(C.prototype, 'size', {
-      get: function () {
-        return _validateCollection(this, NAME)[SIZE];
-      }
-    });
-    return C;
-  },
-  def: function (that, key, value) {
-    var entry = getEntry(that, key);
-    var prev, index;
-    // change existing entry
-    if (entry) {
-      entry.v = value;
-    // create new entry
-    } else {
-      that._l = entry = {
-        i: index = fastKey(key, true), // <- index
-        k: key,                        // <- key
-        v: value,                      // <- value
-        p: prev = that._l,             // <- previous entry
-        n: undefined,                  // <- next entry
-        r: false                       // <- removed
-      };
-      if (!that._f) that._f = entry;
-      if (prev) prev.n = entry;
-      that[SIZE]++;
-      // add to index
-      if (index !== 'F') that._i[index] = entry;
-    } return that;
-  },
-  getEntry: getEntry,
-  setStrong: function (C, NAME, IS_MAP) {
-    // add .keys, .values, .entries, [@@iterator]
-    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
-    _iterDefine(C, NAME, function (iterated, kind) {
-      this._t = _validateCollection(iterated, NAME); // target
-      this._k = kind;                     // kind
-      this._l = undefined;                // previous
-    }, function () {
-      var that = this;
-      var kind = that._k;
-      var entry = that._l;
-      // revert to the last existing entry
-      while (entry && entry.r) entry = entry.p;
-      // get next entry
-      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
-        // or finish the iteration
-        that._t = undefined;
-        return _iterStep(1);
-      }
-      // return step by kind
-      if (kind == 'keys') return _iterStep(0, entry.k);
-      if (kind == 'values') return _iterStep(0, entry.v);
-      return _iterStep(0, [entry.k, entry.v]);
-    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);
-
-    // add [@@species], 23.1.2.2, 23.2.2.2
-    _setSpecies(NAME);
-  }
-};
-
-var SPECIES$2 = _wks('species');
-
-var _arraySpeciesConstructor = function (original) {
-  var C;
-  if (_isArray(original)) {
-    C = original.constructor;
-    // cross-realm fallback
-    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;
-    if (_isObject(C)) {
-      C = C[SPECIES$2];
-      if (C === null) C = undefined;
-    }
-  } return C === undefined ? Array : C;
-};
-
-// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
-
-
-var _arraySpeciesCreate = function (original, length) {
-  return new (_arraySpeciesConstructor(original))(length);
-};
-
-// 0 -> Array#forEach
-// 1 -> Array#map
-// 2 -> Array#filter
-// 3 -> Array#some
-// 4 -> Array#every
-// 5 -> Array#find
-// 6 -> Array#findIndex
-
-
-
-
-
-var _arrayMethods = function (TYPE, $create) {
-  var IS_MAP = TYPE == 1;
-  var IS_FILTER = TYPE == 2;
-  var IS_SOME = TYPE == 3;
-  var IS_EVERY = TYPE == 4;
-  var IS_FIND_INDEX = TYPE == 6;
-  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
-  var create = $create || _arraySpeciesCreate;
-  return function ($this, callbackfn, that) {
-    var O = _toObject($this);
-    var self = _iobject(O);
-    var f = _ctx(callbackfn, that, 3);
-    var length = _toLength(self.length);
-    var index = 0;
-    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
-    var val, res;
-    for (;length > index; index++) if (NO_HOLES || index in self) {
-      val = self[index];
-      res = f(val, index, O);
-      if (TYPE) {
-        if (IS_MAP) result[index] = res;   // map
-        else if (res) switch (TYPE) {
-          case 3: return true;             // some
-          case 5: return val;              // find
-          case 6: return index;            // findIndex
-          case 2: result.push(val);        // filter
-        } else if (IS_EVERY) return false; // every
-      }
-    }
-    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
-  };
-};
-
-var dP$3 = _objectDp.f;
-var each = _arrayMethods(0);
-
-
-var _collection = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
-  var Base = _global[NAME];
-  var C = Base;
-  var ADDER = IS_MAP ? 'set' : 'add';
-  var proto = C && C.prototype;
-  var O = {};
-  if (!_descriptors || typeof C != 'function' || !(IS_WEAK || proto.forEach && !_fails(function () {
-    new C().entries().next();
-  }))) {
-    // create collection constructor
-    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
-    _redefineAll(C.prototype, methods);
-    _meta.NEED = true;
-  } else {
-    C = wrapper(function (target, iterable) {
-      _anInstance(target, C, NAME, '_c');
-      target._c = new Base();
-      if (iterable != undefined) _forOf(iterable, IS_MAP, target[ADDER], target);
-    });
-    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
-      var IS_ADDER = KEY == 'add' || KEY == 'set';
-      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) _hide(C.prototype, KEY, function (a, b) {
-        _anInstance(this, C, KEY);
-        if (!IS_ADDER && IS_WEAK && !_isObject(a)) return KEY == 'get' ? undefined : false;
-        var result = this._c[KEY](a === 0 ? 0 : a, b);
-        return IS_ADDER ? this : result;
-      });
-    });
-    IS_WEAK || dP$3(C.prototype, 'size', {
-      get: function () {
-        return this._c.size;
-      }
-    });
-  }
-
-  _setToStringTag(C, NAME);
-
-  O[NAME] = C;
-  _export(_export.G + _export.W + _export.F, O);
-
-  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
-
-  return C;
-};
-
-var SET = 'Set';
-
-// 23.2 Set Objects
-var es6_set = _collection(SET, function (get) {
-  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
-}, {
-  // 23.2.3.1 Set.prototype.add(value)
-  add: function add(value) {
-    return _collectionStrong.def(_validateCollection(this, SET), value = value === 0 ? 0 : value, value);
-  }
-}, _collectionStrong);
-
-var _arrayFromIterable = function (iter, ITERATOR) {
-  var result = [];
-  _forOf(iter, false, result.push, result, ITERATOR);
-  return result;
-};
-
-// https://github.com/DavidBruant/Map-Set.prototype.toJSON
-
-
-var _collectionToJson = function (NAME) {
-  return function toJSON() {
-    if (_classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
-    return _arrayFromIterable(this);
-  };
-};
-
-// https://github.com/DavidBruant/Map-Set.prototype.toJSON
-
-
-_export(_export.P + _export.R, 'Set', { toJSON: _collectionToJson('Set') });
-
-// https://tc39.github.io/proposal-setmap-offrom/
-
-
-var _setCollectionOf = function (COLLECTION) {
-  _export(_export.S, COLLECTION, { of: function of() {
-    var length = arguments.length;
-    var A = new Array(length);
-    while (length--) A[length] = arguments[length];
-    return new this(A);
-  } });
-};
-
-// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
-_setCollectionOf('Set');
-
-// https://tc39.github.io/proposal-setmap-offrom/
-
-
-
-
-
-var _setCollectionFrom = function (COLLECTION) {
-  _export(_export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
-    var mapFn = arguments[1];
-    var mapping, A, n, cb;
-    _aFunction(this);
-    mapping = mapFn !== undefined;
-    if (mapping) _aFunction(mapFn);
-    if (source == undefined) return new this();
-    A = [];
-    if (mapping) {
-      n = 0;
-      cb = _ctx(mapFn, arguments[2], 2);
-      _forOf(source, false, function (nextItem) {
-        A.push(cb(nextItem, n++));
-      });
-    } else {
-      _forOf(source, false, A.push, A);
-    }
-    return new this(A);
-  } });
-};
-
-// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
-_setCollectionFrom('Set');
-
-var set = _core.Set;
-
-var set$1 = createCommonjsModule(function (module) {
-module.exports = { "default": set, __esModule: true };
-});
-
-var _Set = unwrapExports(set$1);
-
-var MAP = 'Map';
-
-// 23.1 Map Objects
-var es6_map = _collection(MAP, function (get) {
-  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
-}, {
-  // 23.1.3.6 Map.prototype.get(key)
-  get: function get(key) {
-    var entry = _collectionStrong.getEntry(_validateCollection(this, MAP), key);
-    return entry && entry.v;
-  },
-  // 23.1.3.9 Map.prototype.set(key, value)
-  set: function set(key, value) {
-    return _collectionStrong.def(_validateCollection(this, MAP), key === 0 ? 0 : key, value);
-  }
-}, _collectionStrong, true);
-
-// https://github.com/DavidBruant/Map-Set.prototype.toJSON
-
-
-_export(_export.P + _export.R, 'Map', { toJSON: _collectionToJson('Map') });
-
-// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
-_setCollectionOf('Map');
-
-// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
-_setCollectionFrom('Map');
-
-var map = _core.Map;
-
-var map$1 = createCommonjsModule(function (module) {
-module.exports = { "default": map, __esModule: true };
-});
-
-var _Map = unwrapExports(map$1);
-
-/**
- * Converts a polygon to an array of rasterizable scanlines.
- *
- * @param {Array<Object>} points
- * @return {Array<Scanline>}
- */
-var _rasterize = (function (points) {
-  var lines = [];
-  var edges = [];
-
-  for (var i = 0; i < points.length; ++i) {
-    var p1 = points[i];
-    var p2 = i >= points.length - 1 ? points[0] : points[i + 1];
-    var p1p2 = bresenham(p1.x | 0, p1.y | 0, p2.x | 0, p2.y | 0);
-    edges = edges.concat(p1p2);
-  }
-
-  var yToXs = new _Map();
-  for (var _i = 0; _i < edges.length; ++_i) {
-    var point = edges[_i];
-    var xSet = yToXs.get(point.y);
-
-    if (xSet) {
-      xSet.add(point.x);
-    } else {
-      xSet = new _Set();
-      xSet.add(point.x);
-      yToXs.set(point.y, xSet);
-    }
-  }
-
-  yToXs.forEach(function (xSet, y) {
-    var minMax = minMaxElements(xSet);
-
-    if (minMax) {
-      lines.push(new Scanline(y, minMax.min, minMax.max));
-    }
-  });
-
-  return lines;
-});
-
-function bresenham(x1, y1, x2, y2) {
-  var points = [];
-
-  var dx = x2 - x1;
-  var ix = _Math$sign(dx);
-  dx = Math.abs(dx) * 2;
-
-  var dy = y2 - y1;
-  var iy = _Math$sign(dy);
-  dy = Math.abs(dy) * 2;
-
-  points.push({ x: x1, y: y1 });
-
-  if (dx >= dy) {
-    var error = dy - (dx >> 1);
-
-    while (x1 !== x2) {
-      if (error >= 0 && (error !== 0 || ix > 0)) {
-        error -= dx;
-        y1 += iy;
-      }
-
-      error += dy;
-      x1 += ix;
-      points.push({ x: x1, y: y1 });
-    }
-  } else {
-    var _error = dx - (dy >> 1);
-
-    while (y1 !== y2) {
-      if (_error >= 0 && (_error !== 0 || iy > 0)) {
-        _error -= dy;
-        x1 += ix;
-      }
-
-      _error += dx;
-      y1 += iy;
-      points.push({ x: x1, y: y1 });
-    }
-  }
-
-  return points;
-}
-
-function minMaxElements(iterable) {
-  var min = null;
-  var max = null;
-
-  var _iteratorNormalCompletion = true;
-  var _didIteratorError = false;
-  var _iteratorError = undefined;
-
-  try {
-    for (var _iterator = _getIterator(iterable), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
-      var v = _step.value;
-
-      if (!min || v < min) min = v;
-      if (!max || v > max) max = v;
-    }
-  } catch (err) {
-    _didIteratorError = true;
-    _iteratorError = err;
-  } finally {
-    try {
-      if (!_iteratorNormalCompletion && _iterator.return) {
-        _iterator.return();
-      }
-    } finally {
-      if (_didIteratorError) {
-        throw _iteratorError;
-      }
-    }
-  }
-
-  if (min !== null && max !== null) {
-    return { min: min, max: max };
-  }
-}
-
-var RotatedEllipse = function (_Shape) {
-  _inherits(RotatedEllipse, _Shape);
-
-  function RotatedEllipse(opts) {
-    _classCallCheck(this, RotatedEllipse);
-
-    var _this = _possibleConstructorReturn(this, (RotatedEllipse.__proto__ || _Object$getPrototypeOf(RotatedEllipse)).call(this, opts));
-
-    if (!opts) return _possibleConstructorReturn(_this);
-
-    _this.x = random$2.int(0, _this.width - 1);
-    _this.y = random$2.int(0, _this.height - 1);
-
-    _this.rx = random$2.int(1, 32);
-    _this.ry = random$2.int(1, 32);
-
-    _this.angle = random$2.float() * 360;
-    return _this;
-  }
-
-  _createClass(RotatedEllipse, [{
-    key: 'copy',
-    value: function copy() {
-      var shape = new RotatedEllipse();
-      shape.width = this.width;
-      shape.height = this.height;
-      shape.x = this.x;
-      shape.y = this.y;
-      shape.rx = this.rx;
-      shape.ry = this.ry;
-      shape.angle = this.angle;
-      return shape;
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      var width = this.width,
-          height = this.height;
-
-      var shape = this.copy();
-      var m = 16;
-
-      switch (random$2.int(0, 2)) {
-        case 0:
-          shape.x = Math.max(0, Math.min(width - 1, shape.x + normal$2() * m));
-          shape.y = Math.max(0, Math.min(height - 1, shape.y + normal$2() * m));
-          break;
-
-        case 1:
-          shape.rx = Math.max(1, Math.min(width - 1, shape.rx + normal$2() * m));
-          shape.ry = Math.max(1, Math.min(height - 1, shape.ry + normal$2() * m));
-          break;
-
-        case 2:
-          shape.angle = shape.angle + normal$2() * m;
-          break;
-      }
-
-      return shape;
-    }
-  }, {
-    key: 'rasterize',
-    value: function rasterize() {
-      var points = this.getPoints();
-      var lines = _rasterize(points);
-      return Scanline.filter(lines, this.width, this.height);
-    }
-  }, {
-    key: 'getPoints',
-    value: function getPoints() {
-      var numPoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;
-      var x = this.x,
-          y = this.y,
-          rx = this.rx,
-          ry = this.ry,
-          angle = this.angle;
-
-      var points = [];
-      var rads = angle * Math.PI / 180.0;
-      var c = Math.cos(rads);
-      var s = Math.sin(rads);
-
-      for (var i = 0; i < numPoints; ++i) {
-        var rot = 360.0 / numPoints * i * (Math.PI / 180.0);
-        var crx = rx * Math.cos(rot);
-        var cry = ry * Math.sin(rot);
-
-        var tx = crx * c - cry * s + x | 0;
-        var ty = crx * s + cry * c + y | 0;
-
-        points.push({ x: tx, y: ty });
-      }
-
-      return points;
-    }
-  }, {
-    key: 'draw',
-    value: function draw(ctx) {
-      throw new Error('TODO');
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
-
-      // TODO: native rotated ellipse will produce smaller and smoother results
-      var points = this.getPoints().map(function (point) {
-        return point.x + ' ' + point.y;
-      }).join(' ');
-
-      return '<polygon ' + attrs + ' points="' + points + '" />';
-    }
-  }]);
-
-  return RotatedEllipse;
-}(Shape);
-
-var RotatedRectangle = function (_Shape) {
-  _inherits(RotatedRectangle, _Shape);
-
-  function RotatedRectangle(opts) {
-    _classCallCheck(this, RotatedRectangle);
-
-    var _this = _possibleConstructorReturn(this, (RotatedRectangle.__proto__ || _Object$getPrototypeOf(RotatedRectangle)).call(this, opts));
-
-    if (!opts) return _possibleConstructorReturn(_this);
-
-    _this.x1 = random$2.int(0, _this.width - 1);
-    _this.y1 = random$2.int(0, _this.height - 1);
-
-    _this.x2 = Math.max(0, Math.min(_this.width - 1, _this.x1 + random$2.int(-16, 16)));
-    _this.y2 = Math.max(0, Math.min(_this.height - 1, _this.y1 + random$2.int(-16, 16)));
-
-    _this.angle = random$2.float() * 360;
-    return _this;
-  }
-
-  _createClass(RotatedRectangle, [{
-    key: 'copy',
-    value: function copy() {
-      var shape = new RotatedRectangle();
-      shape.width = this.width;
-      shape.height = this.height;
-      shape.x1 = this.x1;
-      shape.y1 = this.y1;
-      shape.x2 = this.x2;
-      shape.y2 = this.y2;
-      shape.angle = this.angle;
-      return shape;
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      var width = this.width,
-          height = this.height;
-
-      var shape = this.copy();
-      var m = 16;
-
-      switch (random$2.int(0, 2)) {
-        case 0:
-          shape.x1 = Math.max(0, Math.min(width - 1, shape.x1 + normal$2() * m));
-          shape.y1 = Math.max(0, Math.min(height - 1, shape.y1 + normal$2() * m));
-          break;
-
-        case 1:
-          shape.x2 = Math.max(0, Math.min(width - 1, shape.x2 + normal$2() * m));
-          shape.y2 = Math.max(0, Math.min(height - 1, shape.y2 + normal$2() * m));
-          break;
-
-        case 2:
-          shape.angle = shape.angle + normal$2() * m;
-          break;
-      }
-
-      return shape;
-    }
-  }, {
-    key: 'rasterize',
-    value: function rasterize() {
-      var points = this.getPoints();
-      var lines = _rasterize(points);
-      return Scanline.filter(lines, this.width, this.height);
-    }
-  }, {
-    key: 'getPoints',
-    value: function getPoints() {
-      var x1 = this.x1,
-          y1 = this.y1,
-          x2 = this.x2,
-          y2 = this.y2,
-          angle = this.angle;
-
-
-      var xm1 = Math.min(x1, x2);
-      var xm2 = Math.max(x1, x2);
-      var ym1 = Math.min(y1, y2);
-      var ym2 = Math.max(y1, y2);
-
-      var cx = (xm1 + xm2) / 2;
-      var cy = (ym1 + ym2) / 2;
-
-      var ox1 = xm1 - cx;
-      var ox2 = xm2 - cx;
-      var oy1 = ym1 - cy;
-      var oy2 = ym2 - cy;
-
-      var rads = angle * Math.PI / 180.0;
-      var c = Math.cos(rads);
-      var s = Math.sin(rads);
-
-      var ulx = ox1 * c - oy1 * s + cx | 0;
-      var uly = ox1 * s + oy1 * c + cy | 0;
-      var blx = ox1 * c - oy2 * s + cx | 0;
-      var bly = ox1 * s + oy2 * c + cy | 0;
-      var urx = ox2 * c - oy1 * s + cx | 0;
-      var ury = ox2 * s + oy1 * c + cy | 0;
-      var brx = ox2 * c - oy2 * s + cx | 0;
-      var bry = ox2 * s + oy2 * c + cy | 0;
-
-      return [{
-        x: ulx,
-        y: uly
-      }, {
-        x: urx,
-        y: ury
-      }, {
-        x: brx,
-        y: bry
-      }, {
-        x: blx,
-        y: bly
-      }];
-    }
-  }, {
-    key: 'draw',
-    value: function draw(ctx) {
-      throw new Error('TODO');
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
-
-      var points = this.getPoints().map(function (point) {
-        return point.x + ' ' + point.y;
-      }).join(' ');
-
-      return '<polygon ' + attrs + ' points="' + points + '" />';
-    }
-  }]);
-
-  return RotatedRectangle;
-}(Shape);
-
-var Triangle = function (_Shape) {
-  _inherits(Triangle, _Shape);
-
-  function Triangle(opts) {
-    _classCallCheck(this, Triangle);
-
-    var _this = _possibleConstructorReturn(this, (Triangle.__proto__ || _Object$getPrototypeOf(Triangle)).call(this, opts));
-
-    if (!opts) return _possibleConstructorReturn(_this);
-
-    do {
-      _this.x1 = random$2.int(0, _this.width - 1);
-      _this.y1 = random$2.int(0, _this.height - 1);
-
-      _this.x2 = _this.x1 + random$2.int(-15, 15);
-      _this.y2 = _this.y1 + random$2.int(-15, 15);
-
-      _this.x3 = _this.x1 + random$2.int(-15, 15);
-      _this.y3 = _this.y1 + random$2.int(-15, 15);
-    } while (!_this.isValid());
-    return _this;
-  }
-
-  _createClass(Triangle, [{
-    key: 'copy',
-    value: function copy() {
-      var shape = new Triangle();
-      shape.width = this.width;
-      shape.height = this.height;
-      shape.x1 = this.x1;
-      shape.y1 = this.y1;
-      shape.x2 = this.x2;
-      shape.y2 = this.y2;
-      shape.x3 = this.x3;
-      shape.y3 = this.y3;
-      return shape;
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      var width = this.width,
-          height = this.height;
-
-      var m = 16;
-      var shape = this.copy();
-      var n = 0;
-
-      while (true) {
-        switch (random$2.int(0, 2)) {
-          case 0:
-            shape.x1 = Math.max(-m, Math.min(width - 1 + m, shape.x1 + normal$2() * m));
-            shape.y1 = Math.max(-m, Math.min(height - 1 + m, shape.y1 + normal$2() * m));
-            break;
-
-          case 1:
-            shape.x2 = Math.max(-m, Math.min(width - 1 + m, shape.x2 + normal$2() * m));
-            shape.y2 = Math.max(-m, Math.min(height - 1 + m, shape.y2 + normal$2() * m));
-            break;
-
-          case 2:
-            shape.x3 = Math.max(-m, Math.min(width - 1 + m, shape.x3 + normal$2() * m));
-            shape.y3 = Math.max(-m, Math.min(height - 1 + m, shape.y3 + normal$2() * m));
-            break;
-        }
-
-        if (shape.isValid()) {
-          return shape;
-        }
-
-        if (++n > 128) {
-          shape = this.copy();
-          n = 0;
-        }
-      }
-    }
-  }, {
-    key: 'isValid',
-    value: function isValid() {
-      var minDegrees = 15;
-
-      var a1 = void 0,
-          a2 = void 0,
-          a3 = void 0;
-      {
-        var x1 = this.x2 - this.x1;
-        var y1 = this.y2 - this.y1;
-        var x2 = this.x3 - this.x1;
-        var y2 = this.y3 - this.y1;
-        var d1 = Math.sqrt(x1 * x1 + y1 * y1);
-        var d2 = Math.sqrt(x2 * x2 + y2 * y2);
-        x1 /= d1;
-        y1 /= d1;
-        x2 /= d2;
-        y2 /= d2;
-        a1 = degrees(Math.acos(x1 * x2 + y1 * y2));
-      }
-
-      {
-        var _x = this.x1 - this.x2;
-        var _y = this.y1 - this.y2;
-        var _x2 = this.x3 - this.x2;
-        var _y2 = this.y3 - this.y2;
-        var _d = Math.sqrt(_x * _x + _y * _y);
-        var _d2 = Math.sqrt(_x2 * _x2 + _y2 * _y2);
-        _x /= _d;
-        _y /= _d;
-        _x2 /= _d2;
-        _y2 /= _d2;
-        a2 = degrees(Math.acos(_x * _x2 + _y * _y2));
-      }
-
-      a3 = 180 - a1 - a2;
-      return a1 > minDegrees && a2 > minDegrees && a3 > minDegrees;
-    }
-  }, {
-    key: 'rasterize',
-    value: function rasterize() {
-      var width = this.width,
-          height = this.height;
-
-      var lines = _rasterize$1(this.x1, this.y1, this.x2, this.y2, this.x3, this.y3);
-      return Scanline.filter(lines, width, height);
-    }
-  }, {
-    key: 'draw',
-    value: function draw(ctx) {
-      ctx.beginPath();
-      ctx.moveTo(this.x1, this.y1);
-      ctx.lineTo(this.x2, this.y2);
-      ctx.lineTo(this.x3, this.y3);
-      ctx.fill();
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
-
-      return '<polygon ' + attrs + ' points="' + this.x1 + ',' + this.y1 + ' ' + this.x2 + ',' + this.y2 + ' ' + this.x3 + ',' + this.y3 + '" />';
-    }
-  }]);
-
-  return Triangle;
-}(Shape);
-
-
-function degrees(radians) {
-  return 180 * radians / Math.PI;
-}
-
-function _rasterize$1(x1, y1, x2, y2, x3, y3) {
-  var t = void 0;
-
-  if (y1 > y3) {
-    t = x1;
-    x1 = x3;
-    x3 = t;
-
-    t = y1;
-    y1 = y3;
-    y3 = t;
-  }
-
-  if (y1 > y2) {
-    t = x1;
-    x1 = x2;
-    x2 = t;
-
-    t = y1;
-    y1 = y2;
-    y2 = t;
-  }
-
-  if (y2 > y3) {
-    t = x2;
-    x2 = x3;
-    x3 = t;
-
-    t = y2;
-    y2 = y3;
-    y3 = t;
-  }
-
-  if (y2 === y3) {
-    return rasterizeBottom(x1, y1, x2, y2, x3, y3);
-  } else if (y1 === y2) {
-    return rasterizeTop(x1, y1, x2, y2, x3, y3);
-  } else {
-    var x4 = x1 + (y2 - y1) / (y3 - y1) * (x3 - x1) | 0;
-    var y4 = y2;
-
-    return [].concat(rasterizeBottom(x1, y1, x2, y2, x4, y4)).concat(rasterizeTop(x2, y2, x4, y4, x3, y3));
-  }
-}
-
-function rasterizeBottom(x1, y1, x2, y2, x3, y3) {
-  var lines = [];
-
-  var s1 = (x2 - x1) / (y2 - y1);
-  var s2 = (x3 - x1) / (y3 - y1);
-  var ax = x1;
-  var bx = x1;
-
-  for (var y = y1; y <= y2; ++y) {
-    var a = ax;
-    var b = bx;
-
-    ax += s1;
-    bx += s2;
-
-    lines.push(new Scanline(y, a, b));
-  }
-
-  return lines;
-}
-
-function rasterizeTop(x1, y1, x2, y2, x3, y3) {
-  var lines = [];
-
-  var s1 = (x3 - x1) / (y3 - y1);
-  var s2 = (x3 - x2) / (y3 - y2);
-  var ax = x3;
-  var bx = x3;
-
-  for (var y = y3; y >= y1; y--) {
-    ax -= s1;
-    bx -= s2;
-
-    lines.push(new Scanline(y, ax, bx));
-  }
-
-  return lines;
-}
-
-var SHAPES = [
-// ellipse and rectangle are redundant with their rotated versions
-// 'ellipse',
-// 'rectangle',
-'rotated-ellipse', 'rotated-rectangle', 'triangle'];
-
-var factory = function factory(shapeType, opts) {
-  switch (shapeType) {
-    case 'rectangle':
-    case 'rect':
-      return new Rectangle(opts);
-
-    case 'rotated-rectangle':
-    case 'rotated-rect':
-      return new RotatedRectangle(opts);
-
-    case 'circle':
-      return new Ellipse(_extends$1({
-        circle: true
-      }, opts));
-
-    case 'ellipse':
-      return new Ellipse(opts);
-
-    case 'rotated-ellipse':
-      return new RotatedEllipse(opts);
-
-    case 'triangle':
-      return new Triangle(opts);
-
-    default:
-      return factory(randomShapeType(), opts);
-  }
-};
-
-function randomShapeType() {
-  return SHAPES[random$2.int(SHAPES.length - 1)];
-}
-
-var State = function () {
-  function State(opts) {
-    _classCallCheck(this, State);
-
-    if (!opts) return;
-
-    var worker = opts.worker,
-        shape = opts.shape,
-        alpha = opts.alpha;
-
-
-    this.worker = worker;
-    this.shape = shape;
-    this.score = -1;
-
-    if (!alpha) {
-      this.alpha = 128;
-      this.mutateAlpha = true;
-    } else {
-      this.alpha = alpha;
-      this.mutateAlpha = false;
-    }
-  }
-
-  _createClass(State, [{
-    key: 'copy',
-    value: function copy() {
-      var state = new State();
-      state.worker = this.worker;
-      state.shape = this.shape; // .copy()
-      state.score = this.score;
-      state.alpha = this.alpha;
-      state.mutateAlpha = this.mutateAlpha;
-      return state;
-    }
-  }, {
-    key: 'energy',
-    value: function energy() {
-      if (this.score < 0) {
-        this.score = this.worker.energy(this.shape, this.alpha);
-      }
-
-      return this.score;
-    }
-  }, {
-    key: 'mutate',
-    value: function mutate() {
-      var state = this.copy();
-      state.shape = state.shape.mutate();
-      if (state.mutateAlpha) {
-        state.alpha = Math.max(1, Math.min(255, state.alpha + randomInt(-10, 10) | 0));
-      }
-      state.score = -1;
-      return state;
-    }
-  }], [{
-    key: 'create',
-    value: function create(worker, shapeType, alpha) {
-      var shape = factory(shapeType, {
-        width: worker.width,
-        height: worker.height
-      });
-
-      return new State({
-        worker: worker,
-        shape: shape,
-        alpha: alpha
-      });
-    }
-  }]);
-
-  return State;
-}();
-
-var hillClimb = function hillClimb(state, maxAge) {
-  var bestState = state;
-  var bestEnergy = state.energy();
-
-  for (var age = 0; age < maxAge; ++age) {
-    var newState = bestState.mutate();
-    var newEnergy = newState.energy();
-
-    if (newEnergy < bestEnergy) {
-      bestEnergy = newEnergy;
-      bestState = newState;
-      age = -1;
-    }
-  }
-
-  return bestState;
-};
-
-var getBestHillClimbState = function getBestHillClimbState(worker, opts) {
-  var state = getBestRandomState(worker, opts);
-  return hillClimb(state, opts.numCandidateMutations);
-};
-
-var getBestRandomState = function getBestRandomState(worker, opts) {
-  var numCandidateShapes = opts.numCandidateShapes,
-      shapeType = opts.shapeType,
-      shapeAlpha = opts.shapeAlpha;
-
-
-  var bestEnergy = null;
-  var bestState = null;
-
-  for (var i = 0; i < numCandidateShapes; ++i) {
-    var state = State.create(worker, shapeType, shapeAlpha);
-    var energy = state.energy();
-
-    if (!i || energy < bestEnergy) {
-      bestEnergy = energy;
-      bestState = state;
-    }
-  }
-
-  return bestState;
-};
-
-var optimize = {
-  hillClimb: hillClimb,
-  getBestHillClimbState: getBestHillClimbState,
-  getBestRandomState: getBestRandomState
-};
-
-var Worker = function () {
-  function Worker(opts) {
-    _classCallCheck(this, Worker);
-
-    var context = opts.context,
-        target = opts.target;
-
-
-    this.context = context;
-    this.target = target;
-    this.width = target.width;
-    this.height = target.height;
-
-    this.counter = 0;
-    this.current = null;
-    this.score = 0;
-
-    this.buffer = context.createImage(this.width, this.height);
-  }
-
-  _createClass(Worker, [{
-    key: 'init',
-    value: function init(current, score) {
-      this.current = current;
-      this.score = score;
-      this.counter = 0;
-    }
-  }, {
-    key: 'energy',
-    value: function energy(shape, alpha) {
-      this.counter++;
-
-      var lines = shape.rasterize();
-      var color = core.computeColor(this.target, this.current, lines, alpha);
-      var score = void 0;
-
-      if (this.context.PARTIALS) {
-        core.copyLines(this.buffer, this.current, lines);
-        core.drawLines(this.buffer, color, lines);
-        score = core.differencePartial(this.target, this.current, this.buffer, this.score, lines);
-      } else {
-        this.buffer.data.set(this.current.data);
-        core.drawLines(this.buffer, color, lines);
-        score = core.difference(this.target, this.buffer);
-      }
-
-      // console.log('worker.energy', this.counter, score)
-      return score;
-    }
-  }]);
-
-  return Worker;
-}();
-
-var Model = function () {
-  function Model(opts) {
-    _classCallCheck(this, Model);
-
-    var context = opts.context,
-        target = opts.target,
-        backgroundColor = opts.backgroundColor,
-        outputSize = opts.outputSize,
-        _opts$numCandidates = opts.numCandidates,
-        numCandidates = _opts$numCandidates === undefined ? 1 : _opts$numCandidates;
-    var width = target.width,
-        height = target.height;
-
-    var aspect = width / height;
-
-    if (outputSize) {
-      if (aspect >= 1) {
-        this.sw = outputSize;
-        this.sh = outputSize / aspect | 0;
-        this.scale = outputSize / width;
-      } else {
-        this.sw = outputSize * aspect | 0;
-        this.sh = outputSize;
-        this.scale = outputSize / height;
-      }
-    } else {
-      this.sw = width;
-      this.sh = height;
-      this.scale = 1;
-    }
-
-    this.context = context;
-    this.target = target;
-    this.backgroundColor = backgroundColor;
-
-    this.current = this.createImage();
-    this.score = core.difference(this.target, this.current);
-
-    this.shapes = [];
-    this.colors = [];
-    this.scores = [];
-    this.workers = [];
-
-    for (var i = 0; i < numCandidates; ++i) {
-      this.workers.push(new Worker({
-        context: context,
-        target: target
-      }));
-    }
-
-    if (this.context.PARTIALS) {
-      this.before = this.context.createImage(width, height);
-    }
-  }
-
-  _createClass(Model, [{
-    key: 'createImage',
-    value: function createImage() {
-      var _target = this.target,
-          width = _target.width,
-          height = _target.height;
-
-      return this.context.createImage(width, height, this.backgroundColor);
-    }
-  }, {
-    key: 'add',
-    value: function add(shape, alpha) {
-      var lines = shape.rasterize();
-      var color = core.computeColor(this.target, this.current, lines, alpha);
-      var score = void 0;
-
-      if (this.context.PARTIALS) {
-        this.before.data.set(this.current.data);
-        core.drawLines(this.current, color, lines);
-        score = core.differencePartial(this.target, this.before, this.current, this.score, lines);
-      } else {
-        core.drawLines(this.current, color, lines);
-        score = core.difference(this.target, this.current);
-      }
-
-      this.score = score;
-      this.shapes.push(shape);
-      this.colors.push(color);
-      this.scores.push(score);
-    }
-  }, {
-    key: 'step',
-    value: function step(opts) {
-      ow(opts, ow.object.plain);
-      ow(opts.shapeType, ow.string.nonEmpty);
-      ow(opts.shapeAlpha, ow.number.integer.positive);
-      ow(opts.numCandidateShapes, ow.number.integer.positive);
-      ow(opts.numCandidateMutations, ow.number.integer.positive);
-
-      var state = this._getBestCandidateState(opts);
-      this.add(state.shape, state.alpha);
-
-      if (opts.numCandidateExtras) {
-        ow(opts.numCandidateExtras, ow.number.integer);
-
-        for (var i = 0; i < opts.numCandidateExtras; ++i) {
-          state.worker.init(this.current, this.score);
-          var a = state.energy();
-          state = optimize.hillClimb(state, opts.numCandidateMutations);
-          var b = state.energy();
-          if (b <= a) break;
-
-          this.add(state.shape, state.alpha);
-        }
-      }
-
-      return this.workers.reduce(function (sum, worker) {
-        return sum + worker.counter;
-      }, 0);
-    }
-  }, {
-    key: '_getBestCandidateState',
-    value: function _getBestCandidateState(opts) {
-      var _this = this;
-
-      var states = this.workers.map(function (worker) {
-        worker.init(_this.current, _this.score);
-        return optimize.getBestHillClimbState(worker, opts);
-      });
-
-      var bestEnergy = null;
-      var bestState = null;
-
-      for (var i = 0; i < states.length; ++i) {
-        var state = states[i];
-        var energy = state.energy();
-
-        if (!i || energy < bestEnergy) {
-          bestEnergy = energy;
-          bestState = state;
-        }
-      }
-
-      return bestState;
-    }
-  }, {
-    key: 'toSVG',
-    value: function toSVG() {
-      var _this2 = this;
-
-      var bg = chromatism_cjs_7(this.backgroundColor).hex;
-      var body = this.shapes.map(function (shape, index) {
-        var color = _this2.colors[index];
-        var fill = chromatism_cjs_7(color).hex;
-        var attrs = 'fill="' + fill + '" fill-opacity="' + color.a / 255 + '"';
-        return shape.toSVG(attrs);
-      }).join('\n');
-
-      return '\n<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' + this.sw + '" height="' + this.sh + '">\n  <rect x="0" y="0" width="' + this.sw + '" height="' + this.sh + '" fill="' + bg + '" />\n  <g transform="scale(' + this.scale + ') translate(0.5 0.5)">\n    ' + body + '\n  </g>\n</svg>\n';
-    }
-  }, {
-    key: 'toFrames',
-    value: function toFrames() {
-
-      throw new Error('TODO');
-
-      /*
-      for (let i = 0; i < this.shapes.length; ++i) {
-        const shape = this.shapes[i]
-        const color = this.colors[i]
-      }
-      */
-    }
-  }]);
-
-  return Model;
-}();
-
-var _this$1 = undefined;
-
-var noop = function noop() {};
-
-var primitive = (function () {
-  var _ref = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(opts) {
-    var context, target, onStep, _opts$outputSize, outputSize, _opts$minEnergy, minEnergy, _opts$shapeAlpha, shapeAlpha, _opts$shapeType, shapeType, _opts$numCandidates, numCandidates, _opts$numCandidateSha, numCandidateShapes, _opts$numCandidateMut, numCandidateMutations, _opts$numCandidateExt, numCandidateExtras, _opts$log, log, backgroundColor, model, step;
-
-    return regenerator.wrap(function _callee2$(_context2) {
-      while (1) {
-        switch (_context2.prev = _context2.next) {
-          case 0:
-            context = opts.context, target = opts.target, onStep = opts.onStep, _opts$outputSize = opts.outputSize, outputSize = _opts$outputSize === undefined ? undefined : _opts$outputSize, _opts$minEnergy = opts.minEnergy, minEnergy = _opts$minEnergy === undefined ? undefined : _opts$minEnergy, _opts$shapeAlpha = opts.shapeAlpha, shapeAlpha = _opts$shapeAlpha === undefined ? 128 : _opts$shapeAlpha, _opts$shapeType = opts.shapeType, shapeType = _opts$shapeType === undefined ? 'triangle' : _opts$shapeType, _opts$numCandidates = opts.numCandidates, numCandidates = _opts$numCandidates === undefined ? 1 : _opts$numCandidates, _opts$numCandidateSha = opts.numCandidateShapes, numCandidateShapes = _opts$numCandidateSha === undefined ? 50 : _opts$numCandidateSha, _opts$numCandidateMut = opts.numCandidateMutations, numCandidateMutations = _opts$numCandidateMut === undefined ? 100 : _opts$numCandidateMut, _opts$numCandidateExt = opts.numCandidateExtras, numCandidateExtras = _opts$numCandidateExt === undefined ? 0 : _opts$numCandidateExt, _opts$log = opts.log, log = _opts$log === undefined ? noop : _opts$log;
-
-            // validate options
-
-            ow(opts, ow.object.plain.label('opts'));
-            ow(target, ow.object.label('target'));
-            ow(target.width, ow.number.positive.integer.label('target.width'));
-            ow(target.height, ow.number.positive.integer.label('target.height'));
-            ow(target.data, ow.any(ow.uint8Array, ow.uint8ClampedArray));
-            ow(shapeAlpha, ow.number.integer.greaterThanOrEqual(0).lessThanOrEqual(255).label('shapeAlpha'));
-            ow(shapeType, ow.string.nonEmpty.label('shapeType'));
-            ow(numCandidates, ow.number.integer.positive.label('numCandidates'));
-            ow(numCandidateShapes, ow.number.integer.positive.label('numCandidateShapes'));
-            ow(numCandidateMutations, ow.number.integer.positive.label('numCandidateMutations'));
-            ow(log, ow.function.label('log'));
-            ow(onStep, ow.function.label('onStep'));
-
-            backgroundColor = core.getMeanColor(target);
-            model = new Model({
-              context: context,
-              target: target,
-              backgroundColor: backgroundColor,
-              outputSize: outputSize,
-              numCandidates: numCandidates
-            });
-
-            step = function () {
-              var _ref2 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(index) {
-                var candidates;
-                return regenerator.wrap(function _callee$(_context) {
-                  while (1) {
-                    switch (_context.prev = _context.next) {
-                      case 0:
-                        _context.next = 2;
-                        return onStep(model, step);
-
-                      case 2:
-                        candidates = model.step({
-                          shapeType: shapeType,
-                          shapeAlpha: shapeAlpha,
-                          numCandidateShapes: numCandidateShapes,
-                          numCandidateMutations: numCandidateMutations,
-                          numCandidateExtras: numCandidateExtras
-                        });
-
-                        if (!(minEnergy && model.score <= minEnergy)) {
-                          _context.next = 5;
-                          break;
-                        }
-
-                        return _context.abrupt('return', false);
-
-                      case 5:
-                        return _context.abrupt('return', candidates);
-
-                      case 6:
-                      case 'end':
-                        return _context.stop();
-                    }
-                  }
-                }, _callee, _this$1);
-              }));
-
-              return function step(_x2) {
-                return _ref2.apply(this, arguments);
-              };
-            }();
-
-            return _context2.abrupt('return', {
-              model: model,
-              step: step
-            });
-
-          case 17:
-          case 'end':
-            return _context2.stop();
-        }
-      }
-    }, _callee2, _this$1);
-  }));
-
-  return function (_x) {
-    return _ref.apply(this, arguments);
-  };
-})();
-
-var performanceNow = createCommonjsModule(function (module) {
-// Generated by CoffeeScript 1.12.2
-(function() {
-  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
-
-  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
-    module.exports = function() {
-      return performance.now();
-    };
-  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
-    module.exports = function() {
-      return (getNanoSeconds() - nodeLoadTime) / 1e6;
-    };
-    hrtime = process.hrtime;
-    getNanoSeconds = function() {
-      var hr;
-      hr = hrtime();
-      return hr[0] * 1e9 + hr[1];
-    };
-    moduleLoadTime = getNanoSeconds();
-    upTime = process.uptime() * 1e9;
-    nodeLoadTime = moduleLoadTime - upTime;
-  } else if (Date.now) {
-    module.exports = function() {
-      return Date.now() - loadTime;
-    };
-    loadTime = Date.now();
-  } else {
-    module.exports = function() {
-      return new Date().getTime() - loadTime;
-    };
-    loadTime = new Date().getTime();
-  }
-
-}).call(commonjsGlobal);
-
-
-});
-
-var root = typeof window === 'undefined' ? commonjsGlobal : window
-  , vendors = ['moz', 'webkit']
-  , suffix = 'AnimationFrame'
-  , raf = root['request' + suffix]
-  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix];
-
-for(var i$1 = 0; !raf && i$1 < vendors.length; i$1++) {
-  raf = root[vendors[i$1] + 'Request' + suffix];
-  caf = root[vendors[i$1] + 'Cancel' + suffix]
-      || root[vendors[i$1] + 'CancelRequest' + suffix];
-}
-
-// Some versions of FF have rAF but not cAF
-if(!raf || !caf) {
-  var last = 0
-    , id$1 = 0
-    , queue$1 = []
-    , frameDuration = 1000 / 60;
-
-  raf = function(callback) {
-    if(queue$1.length === 0) {
-      var _now = performanceNow()
-        , next = Math.max(0, frameDuration - (_now - last));
-      last = next + _now;
-      setTimeout(function() {
-        var cp = queue$1.slice(0);
-        // Clear queue here to prevent
-        // callbacks from appending listeners
-        // to the current frame's queue
-        queue$1.length = 0;
-        for(var i = 0; i < cp.length; i++) {
-          if(!cp[i].cancelled) {
-            try{
-              cp[i].callback(last);
-            } catch(e) {
-              setTimeout(function() { throw e }, 0);
-            }
-          }
-        }
-      }, Math.round(next));
-    }
-    queue$1.push({
-      handle: ++id$1,
-      callback: callback,
-      cancelled: false
-    });
-    return id$1
-  };
-
-  caf = function(handle) {
-    for(var i = 0; i < queue$1.length; i++) {
-      if(queue$1[i].handle === handle) {
-        queue$1[i].cancelled = true;
-      }
-    }
-  };
-}
-
-var raf_1 = function(fn) {
-  // Wrap in a new function to prevent
-  // `cancel` potentially being assigned
-  // to the native rAF function
-  return raf.call(root, fn)
-};
-var cancel = function() {
-  caf.apply(root, arguments);
-};
-var polyfill = function(object) {
-  if (!object) {
-    object = root;
-  }
-  object.requestAnimationFrame = raf;
-  object.cancelAnimationFrame = caf;
-};
-raf_1.cancel = cancel;
-raf_1.polyfill = polyfill;
-
-var _this$2 = undefined;
-
-/**
- * Reproduces the given input image using geometric primitives.
- *
- * Optionally draws the results to an HTML canvas.
- *
- * Returns a Promise for the generated model.
- *
- * @name primitive
- * @function
- *
- * @param {Object} opts - Configuration options
- * @param {string|Image|ImageData} opts.input - URL, Image, or ImageData of input image to process
- * @param {string|HTMLCanvasElement} [opts.output] - Selector or DOM Element of HTMLCanvas to draw results
- * @param {number} [opts.numSteps=200] - Number of steps to process [1, 1000]
- * @param {number} [opts.minEnergy] - Minimum energy to stop processing early [0, 1]
- * @param {number} [opts.shapeAlpha=128] - Alpha opacity of shapes [0, 255]
- * @param {string} [opts.shapeType=traingle] - Type of shapes to use
- * @param {number} [opts.numCandidates=1] - Number of top-level candidates per step [1, 32]
- * @param {number} [opts.numCandidateShapes=50] - Number of random candidate shapes per step [10, 1000]
- * @param {number} [opts.numCandidateMutations=100] - Number of candidate mutations per step [10, 500]
- * @param {number} [opts.numCandidateExtras=0] - Number of extra candidate shapes per step [0, 16]
- * @param {function} [opts.onStep] - Optional async function taking in the model and step index
- * @param {function} [opts.log=noop] - Optional logging function (console.log to enable logging)
- *
- * @return {Promise}
- */
-var browser = (function () {
-  var _ref = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(opts) {
-    var input, output, _onStep, _opts$numSteps, numSteps, rest, target, canvas, ctx, scratch, _ref2, model, step, current, update;
-
-    return regenerator.wrap(function _callee2$(_context2) {
-      while (1) {
-        switch (_context2.prev = _context2.next) {
-          case 0:
-            input = opts.input, output = opts.output, _onStep = opts.onStep, _opts$numSteps = opts.numSteps, numSteps = _opts$numSteps === undefined ? 200 : _opts$numSteps, rest = _objectWithoutProperties(opts, ['input', 'output', 'onStep', 'numSteps']);
-
-
-            ow(opts, ow.object.label('opts'));
-            ow(input, ow.any(ow.string.nonEmpty.label('input'), ow.object.instanceOf(global.ImageData).label('input'), ow.object.instanceOf(global.Image).label('input')));
-            ow(numSteps, ow.number.integer.positive.label('numSteps'));
-
-            if (output) {
-              ow(output, ow.any(ow.string.nonEmpty.label(output), ow.object.instanceOf(global.HTMLCanvasElement).label(output)));
-            }
-
-            _context2.next = 7;
-            return context.loadImage(input);
-
-          case 7:
-            target = _context2.sent;
-            _context2.t0 = output;
-
-            if (!_context2.t0) {
-              _context2.next = 13;
-              break;
-            }
-
-            _context2.next = 12;
-            return context.loadCanvas(output, 'output');
-
-          case 12:
-            _context2.t0 = _context2.sent;
-
-          case 13:
-            canvas = _context2.t0;
-            ctx = canvas && canvas.getContext('2d');
-            scratch = canvas && document.createElement('canvas');
-
-            if (ctx) context.enableContextAntialiasing(ctx);
-
-            _context2.next = 19;
-            return primitive(_extends$1({}, rest, {
-              context: context,
-              target: target,
-              onStep: function () {
-                var _ref3 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(model, step) {
-                  var _model$current, width, height, ctx2;
-
-                  return regenerator.wrap(function _callee$(_context) {
-                    while (1) {
-                      switch (_context.prev = _context.next) {
-                        case 0:
-                          if (!_onStep) {
-                            _context.next = 3;
-                            break;
-                          }
-
-                          _context.next = 3;
-                          return _onStep(model, step);
-
-                        case 3:
-
-                          if (ctx) {
-                            _model$current = model.current, width = _model$current.width, height = _model$current.height;
-
-
-                            if (canvas.width === width && canvas.height === height) {
-                              // output canvas is the same size as current working buffer,
-                              // so just copy data over (efficient)
-                              ctx.putImageData(model.current, 0, 0);
-                            } else {
-                              // output canvas is different size than current working buffer,
-                              // so resize into temp canvas before drawing (less efficient)
-                              scratch.width = width;
-                              scratch.height = height;
-                              ctx2 = scratch.getContext('2d');
-
-                              ctx2.putImageData(model.current, 0, 0);
-                              ctx.drawImage(scratch, 0, 0, canvas.width, canvas.height);
-                            }
-                          }
-
-                        case 4:
-                        case 'end':
-                          return _context.stop();
-                      }
-                    }
-                  }, _callee, _this$2);
-                }));
-
-                return function onStep(_x2, _x3) {
-                  return _ref3.apply(this, arguments);
-                };
-              }()
-            }));
-
-          case 19:
-            _ref2 = _context2.sent;
-            model = _ref2.model;
-            step = _ref2.step;
-
-
-            // TODO: clean this iteration up and use web workers
-            current = 0;
-
-            update = function update() {
-              console.log('step', current, '; score', model.score);
-              step(current).then(function (candidates) {
-                if (candidates <= 0 || ++current >= numSteps) return;
-
-                raf_1(update);
-              }, function (err) {
-                console.error('primitive error', err);
-              });
-            };
-
-            raf_1(update);
-            return _context2.abrupt('return', model);
-
-          case 26:
-          case 'end':
-            return _context2.stop();
-        }
-      }
-    }, _callee2, _this$2);
-  }));
-
-  return function (_x) {
-    return _ref.apply(this, arguments);
-  };
-})();
-
-module.exports = browser;
diff --git a/node_modules/primitive/lib/browser-context.js b/node_modules/primitive/lib/browser-context.js
index f2e96d0..29190ef 100644
--- a/node_modules/primitive/lib/browser-context.js
+++ b/node_modules/primitive/lib/browser-context.js
@@ -1,11 +1,11 @@
-import ow from 'ow'
+const ow = require('ow')
 
-import { cssrgba } from './color'
+const { cssrgba } = require('./color')
 
-export const PARTIALS = true
-export const platform = 'browser'
+module.exports.PARTIALS = true
+module.exports.platform = 'browser'
 
-export const loadImage = async (input) => {
+module.exports.loadImage = async (input) => {
   ow(input, ow.any(
     ow.string.nonEmpty.label('input'),
     ow.object.instanceOf(global.ImageData).label('input'),
@@ -38,7 +38,7 @@ export const loadImage = async (input) => {
   }
 }
 
-export const loadCanvas = async (value, label = 'canvas') => {
+module.exports.loadCanvas = async (value, label = 'canvas') => {
   ow(value, ow.any(
     ow.string.nonEmpty.label(label),
     ow.object.instanceOf(global.HTMLCanvasElement).label(label)
@@ -61,7 +61,7 @@ export const loadCanvas = async (value, label = 'canvas') => {
   }
 }
 
-export const enableContextAntialiasing = (ctx) => {
+module.exports.enableContextAntialiasing = (ctx) => {
   ctx.mozImageSmoothingQuality = 'high'
   ctx.webkitImageSmoothingQuality = 'high'
   ctx.msImageSmoothingQuality = 'high'
@@ -73,7 +73,7 @@ export const enableContextAntialiasing = (ctx) => {
   ctx.imageSmoothingEnabled = true
 }
 
-export const createImage = (width, height, fillColor = undefined) => {
+module.exports.createImage = (width, height, fillColor = undefined) => {
   ow(width, ow.number.label('width').positive.integer)
   ow(height, ow.number.label('height').positive.integer)
 
@@ -88,11 +88,11 @@ export const createImage = (width, height, fillColor = undefined) => {
   return ctx.getImageData(0, 0, width, height)
 }
 
-export default {
-  PARTIALS,
-  platform,
-  loadImage,
-  loadCanvas,
-  enableContextAntialiasing,
-  createImage
-}
+// export default {
+//   PARTIALS,
+//   platform,
+//   loadImage,
+//   loadCanvas,
+//   enableContextAntialiasing,
+//   createImage
+// }
diff --git a/node_modules/primitive/lib/color.js b/node_modules/primitive/lib/color.js
index f17e00c..41aa938 100644
--- a/node_modules/primitive/lib/color.js
+++ b/node_modules/primitive/lib/color.js
@@ -1,6 +1,6 @@
-import chromatism from 'chromatism'
-export default chromatism
+const chromatism = require('chromatism');
+module.exports = chromatism;
 
-export const cssrgba = (color) => {
+module.exports.cssrgba = (color) => {
   return `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a / 255})`
 }
diff --git a/node_modules/primitive/lib/context.js b/node_modules/primitive/lib/context.js
index 06f612c..2c4b026 100644
--- a/node_modules/primitive/lib/context.js
+++ b/node_modules/primitive/lib/context.js
@@ -1,18 +1,18 @@
-import execa from 'execa'
-import fs from 'fs'
-import ndarray from 'ndarray'
-import ow from 'ow'
-import pify from 'pify'
-import pump from 'pump-promise'
-import getPixels from 'get-pixels'
-import savePixels from 'save-pixels'
+const execa = require('execa');
+const fs = require('fs');
+const ndarray = require('ndarray');
+const ow = require('ow');
+const pify = require('pify');
+const pump = require('pump-promise');
+const getPixels = require('get-pixels');
+const savePixels = require('save-pixels');
 
 const getPixelsP = pify(getPixels)
 
-export const PARTIALS = true
-export const platform = 'node'
+module.exports.PARTIALS = true
+module.exports.platform = 'node'
 
-export const loadImage = async (input) => {
+module.exports.loadImage = async (input) => {
   ow(input, ow.string.label('input').nonEmpty)
 
   const result = await getPixelsP(input)
@@ -25,7 +25,7 @@ export const loadImage = async (input) => {
   }
 }
 
-export const createImage = (width, height, color = undefined) => {
+module.exports.createImage = (width, height, color = undefined) => {
   ow(width, ow.number.label('width').positive.integer)
   ow(height, ow.number.label('height').positive.integer)
 
@@ -48,7 +48,7 @@ export const createImage = (width, height, color = undefined) => {
   }
 }
 
-export const saveImage = async (image, filename, opts) => {
+module.exports.saveImage = async (image, filename, opts) => {
   ow(image, ow.object.label('image').nonEmpty)
   ow(filename, ow.string.label('filename').nonEmpty)
 
@@ -59,7 +59,7 @@ export const saveImage = async (image, filename, opts) => {
   return pump(stream, fs.createWriteStream(filename))
 }
 
-export const saveGIF = async (frames, filename, opts) => {
+module.exports.saveGIF = async (frames, filename, opts) => {
   ow(frames, ow.array.label('frames'))
   ow(filename, ow.string.label('filename').nonEmpty)
   ow(opts, ow.object.label('opts').plain.nonEmpty)
@@ -91,11 +91,19 @@ export const saveGIF = async (frames, filename, opts) => {
   await execa.shell(cmd)
 }
 
-export default {
-  PARTIALS,
-  platform,
-  loadImage,
-  createImage,
-  saveImage,
-  saveGIF
+module.exports.saveSVG = async (model, filename, opts) => {
+  ow(model, ow.object.label('model').nonEmpty)
+  ow(filename, ow.string.label('filename').nonEmpty)
+
+  return pify(fs.writeFile)(filename, model.toSVG())
 }
+
+// export default {
+//   PARTIALS,
+//   platform,
+//   loadImage,
+//   createImage,
+//   saveImage,
+//   saveGIF,
+//   saveSVG
+// }
diff --git a/node_modules/primitive/lib/core.js b/node_modules/primitive/lib/core.js
index 2e0f602..e5dfed9 100644
--- a/node_modules/primitive/lib/core.js
+++ b/node_modules/primitive/lib/core.js
@@ -1,6 +1,6 @@
 'use strict'
 
-export const getMeanColor = (image) => {
+module.exports.getMeanColor = (image) => {
   const { data, width, height } = image
 
   let r = 0
@@ -23,7 +23,7 @@ export const getMeanColor = (image) => {
   return { r, g, b, a: 255 }
 }
 
-export const computeColor = (target, current, lines, alpha) => {
+module.exports.computeColor = (target, current, lines, alpha) => {
   const { width } = target
   const dataT = target.data
   const dataC = current.data
@@ -66,7 +66,7 @@ export const computeColor = (target, current, lines, alpha) => {
   return { r, g, b, a: alpha }
 }
 
-export const difference = (imageA, imageB) => {
+module.exports.difference = (imageA, imageB) => {
   const { width, height } = imageA
   const dataA = imageA.data
   const dataB = imageB.data
@@ -100,7 +100,7 @@ export const difference = (imageA, imageB) => {
   return Math.sqrt(sum / (width * height * 3)) / 255
 }
 
-export const differencePartial = (target, before, after, score, lines) => {
+module.exports.differencePartial = (target, before, after, score, lines) => {
   const { width, height } = target
   const dataT = target.data
   const dataB = before.data
@@ -146,7 +146,7 @@ export const differencePartial = (target, before, after, score, lines) => {
   return Math.sqrt(sum / (width * height * 3)) / 255
 }
 
-export const copyLines = (dest, src, lines) => {
+module.exports.copyLines = (dest, src, lines) => {
   const { width, height } = src
   const m = width * height * 4
 
@@ -162,7 +162,7 @@ export const copyLines = (dest, src, lines) => {
   }
 }
 
-export const drawLines = (image, color, lines) => {
+module.exports.drawLines = (image, color, lines) => {
   const { data, width } = image
 
   const sr = color.r
@@ -189,11 +189,11 @@ export const drawLines = (image, color, lines) => {
   }
 }
 
-export default {
-  getMeanColor,
-  computeColor,
-  difference,
-  differencePartial,
-  copyLines,
-  drawLines
-}
+// export default {
+//   getMeanColor,
+//   computeColor,
+//   difference,
+//   differencePartial,
+//   copyLines,
+//   drawLines
+// }
diff --git a/node_modules/primitive/lib/model.js b/node_modules/primitive/lib/model.js
index 6ecc319..7a149f0 100644
--- a/node_modules/primitive/lib/model.js
+++ b/node_modules/primitive/lib/model.js
@@ -1,11 +1,11 @@
-import * as chromatism from 'chromatism'
-import ow from 'ow'
+const chromatism = require('chromatism');
+const ow = require('ow');
 
-import core from './core'
-import optimize from './optimize'
-import Worker from './worker'
+const core = require('./core');
+const optimize = require('./optimize');
+const Worker = require('./worker');
 
-export default class Model {
+module.exports = class Model {
   constructor (opts) {
     const {
       context,
diff --git a/node_modules/primitive/lib/normal.js b/node_modules/primitive/lib/normal.js
new file mode 100644
index 0000000..3912a81
--- /dev/null
+++ b/node_modules/primitive/lib/normal.js
@@ -0,0 +1,2 @@
+const random = require('./random');
+module.exports.normal = random.normal();
\ No newline at end of file
diff --git a/node_modules/primitive/lib/optimize.js b/node_modules/primitive/lib/optimize.js
index 9d74629..7b5adb6 100644
--- a/node_modules/primitive/lib/optimize.js
+++ b/node_modules/primitive/lib/optimize.js
@@ -1,6 +1,6 @@
-import State from './state'
+const State = require('./state');
 
-export const hillClimb = (state, maxAge) => {
+const hillClimb = (state, maxAge) => {
   let bestState = state
   let bestEnergy = state.energy()
 
@@ -18,12 +18,12 @@ export const hillClimb = (state, maxAge) => {
   return bestState
 }
 
-export const getBestHillClimbState = (worker, opts) => {
+const getBestHillClimbState = (worker, opts) => {
   const state = getBestRandomState(worker, opts)
   return hillClimb(state, opts.numCandidateMutations)
 }
 
-export const getBestRandomState = (worker, opts) => {
+const getBestRandomState = (worker, opts) => {
   const {
     numCandidateShapes,
     shapeType,
@@ -46,7 +46,7 @@ export const getBestRandomState = (worker, opts) => {
   return bestState
 }
 
-export default {
+module.exports = {
   hillClimb,
   getBestHillClimbState,
   getBestRandomState
diff --git a/node_modules/primitive/lib/primitive.js b/node_modules/primitive/lib/primitive.js
index 70831ad..fb884d4 100644
--- a/node_modules/primitive/lib/primitive.js
+++ b/node_modules/primitive/lib/primitive.js
@@ -1,11 +1,11 @@
-import ow from 'ow'
+const ow = require('ow');
 
-import core from './core'
-import Model from './model'
+const core = require('./core');
+const Model = require('./model');
 
 const noop = () => { }
 
-export default async (opts) => {
+module.exports = async (opts) => {
   const {
     context,
     target,
diff --git a/node_modules/primitive/lib/random.js b/node_modules/primitive/lib/random.js
index 076c730..3029a1e 100644
--- a/node_modules/primitive/lib/random.js
+++ b/node_modules/primitive/lib/random.js
@@ -1,4 +1,4 @@
-import random from 'random'
-export default random
+const random = require('random')
+module.exports = random
 
-export const normal = random.normal()
+module.exports.normal = random.normal()
diff --git a/node_modules/primitive/lib/rasterize.js b/node_modules/primitive/lib/rasterize.js
index 276fb3a..789308d 100644
--- a/node_modules/primitive/lib/rasterize.js
+++ b/node_modules/primitive/lib/rasterize.js
@@ -1,4 +1,4 @@
-import Scanline from './scanline'
+const Scanline = require('./scanline')
 
 /**
  * Converts a polygon to an array of rasterizable scanlines.
@@ -6,7 +6,7 @@ import Scanline from './scanline'
  * @param {Array<Object>} points
  * @return {Array<Scanline>}
  */
-export default (points) => {
+module.exports = (points) => {
   const lines = []
   let edges = []
 
diff --git a/node_modules/primitive/lib/scanline.js b/node_modules/primitive/lib/scanline.js
index 022d3dc..323e8c3 100644
--- a/node_modules/primitive/lib/scanline.js
+++ b/node_modules/primitive/lib/scanline.js
@@ -1,4 +1,4 @@
-export default class Scanline {
+module.exports = class Scanline {
   constructor (y, x1, x2) {
     if (x1 > x2) {
       let t = x1
diff --git a/node_modules/primitive/lib/shapes/ellipse.js b/node_modules/primitive/lib/shapes/ellipse.js
index 5d3d9fb..7e23532 100644
--- a/node_modules/primitive/lib/shapes/ellipse.js
+++ b/node_modules/primitive/lib/shapes/ellipse.js
@@ -1,9 +1,10 @@
-import random, { normal } from '../random'
+const random = require('../random');
+const {normal} = random;
 
-import Scanline from '../scanline'
-import Shape from './shape'
+const Scanline = require('../scanline');
+const Shape = require('./shape');
 
-export default class Ellipse extends Shape {
+module.exports = class Ellipse extends Shape {
   constructor (opts) {
     super(opts)
     if (!opts) return
diff --git a/node_modules/primitive/lib/shapes/factory.js b/node_modules/primitive/lib/shapes/factory.js
index 7974a93..9c23d47 100644
--- a/node_modules/primitive/lib/shapes/factory.js
+++ b/node_modules/primitive/lib/shapes/factory.js
@@ -1,10 +1,10 @@
-import random from '../random'
+const random = require('../random');
 
-import Ellipse from './ellipse'
-import Rectangle from './rectangle'
-import RotatedEllipse from './rotated-ellipse'
-import RotatedRectangle from './rotated-rectangle'
-import Triangle from './triangle'
+const Ellipse = require('./ellipse');
+const Rectangle = require('./rectangle');
+const RotatedEllipse = require('./rotated-ellipse');
+const RotatedRectangle = require('./rotated-rectangle');
+const Triangle = require('./triangle');
 
 const SHAPES = [
   // ellipse and rectangle are redundant with their rotated versions
@@ -49,4 +49,4 @@ function randomShapeType () {
   return SHAPES[random.int(SHAPES.length - 1)]
 }
 
-export default factory
+module.exports = factory
diff --git a/node_modules/primitive/lib/shapes/rectangle.js b/node_modules/primitive/lib/shapes/rectangle.js
index 96833c8..5af6fa1 100644
--- a/node_modules/primitive/lib/shapes/rectangle.js
+++ b/node_modules/primitive/lib/shapes/rectangle.js
@@ -1,9 +1,10 @@
-import random, { normal } from '../random'
+const random = require('../random');
+const {normal} = random;
 
-import Scanline from '../scanline'
-import Shape from './shape'
+const Scanline = require('../scanline');
+const Shape = require('./shape');
 
-export default class Rectangle extends Shape {
+module.exports = class Rectangle extends Shape {
   constructor (opts) {
     super(opts)
     if (!opts) return
diff --git a/node_modules/primitive/lib/shapes/rotated-ellipse.js b/node_modules/primitive/lib/shapes/rotated-ellipse.js
index c054cb8..95b2799 100644
--- a/node_modules/primitive/lib/shapes/rotated-ellipse.js
+++ b/node_modules/primitive/lib/shapes/rotated-ellipse.js
@@ -1,10 +1,11 @@
-import random, { normal } from '../random'
+const random = require('../random');
+const {normal} = random;
 
-import rasterize from '../rasterize'
-import Scanline from '../scanline'
-import Shape from './shape'
+const rasterize = require('../rasterize');
+const Scanline = require('../scanline');
+const Shape = require('./shape');
 
-export default class RotatedEllipse extends Shape {
+module.exports = class RotatedEllipse extends Shape {
   constructor (opts) {
     super(opts)
     if (!opts) return
diff --git a/node_modules/primitive/lib/shapes/rotated-rectangle.js b/node_modules/primitive/lib/shapes/rotated-rectangle.js
index 1f116d4..9e08da4 100644
--- a/node_modules/primitive/lib/shapes/rotated-rectangle.js
+++ b/node_modules/primitive/lib/shapes/rotated-rectangle.js
@@ -1,10 +1,11 @@
-import random, { normal } from '../random'
+const random = require('../random');
+const {normal} = random;
 
-import rasterize from '../rasterize'
-import Scanline from '../scanline'
-import Shape from './shape'
+const rasterize = require('../rasterize');
+const Scanline = require('../scanline');
+const Shape = require('./shape');
 
-export default class RotatedRectangle extends Shape {
+module.exports = class RotatedRectangle extends Shape {
   constructor (opts) {
     super(opts)
     if (!opts) return
diff --git a/node_modules/primitive/lib/shapes/shape.js b/node_modules/primitive/lib/shapes/shape.js
index cabf932..f6b05f7 100644
--- a/node_modules/primitive/lib/shapes/shape.js
+++ b/node_modules/primitive/lib/shapes/shape.js
@@ -1,4 +1,4 @@
-export default class Shape {
+module.exports = class Shape {
   constructor (opts = { }) {
     this.width = opts.width
     this.height = opts.height
diff --git a/node_modules/primitive/lib/shapes/triangle.js b/node_modules/primitive/lib/shapes/triangle.js
index 4d7002e..39464f8 100644
--- a/node_modules/primitive/lib/shapes/triangle.js
+++ b/node_modules/primitive/lib/shapes/triangle.js
@@ -1,9 +1,9 @@
-import random, { normal } from '../random'
+const random = require('../random')
+const Scanline = require('../scanline');
+const Shape = require('./shape');
+const { normal } = random;
 
-import Scanline from '../scanline'
-import Shape from './shape'
-
-export default class Triangle extends Shape {
+module.exports = class Triangle extends Shape {
   constructor (opts) {
     super(opts)
     if (!opts) return
diff --git a/node_modules/primitive/lib/state.js b/node_modules/primitive/lib/state.js
index 423e85c..66a2e4c 100644
--- a/node_modules/primitive/lib/state.js
+++ b/node_modules/primitive/lib/state.js
@@ -1,9 +1,9 @@
 'use strict'
 
-import randomInt from 'random-int'
-import shapeFactory from './shapes/factory'
+const randomInt = require('random-int');
+const shapeFactory = require('./shapes/factory');
 
-export default class State {
+module.exports = class State {
   constructor (opts) {
     if (!opts) return
 
diff --git a/node_modules/primitive/lib/worker.js b/node_modules/primitive/lib/worker.js
index 36dd35d..10fb6be 100644
--- a/node_modules/primitive/lib/worker.js
+++ b/node_modules/primitive/lib/worker.js
@@ -1,8 +1,8 @@
 'use strict'
 
-import core from './core'
+const core = require('./core');
 
-export default class Worker {
+module.exports = class Worker {
   constructor (opts) {
     const {
       context,
diff --git a/node_modules/primitive/main.js b/node_modules/primitive/main.js
index bcf715f..34909b1 100644
--- a/node_modules/primitive/main.js
+++ b/node_modules/primitive/main.js
@@ -1,6 +1,129 @@
-'use strict'
+// node es module entrypoint
 
-// node commonjs entrypoint
+const ow = require('ow');
+const path = require('path');
+const rmfr = require('rmfr');
+const tempy = require('tempy');
+const Time = require('time-diff');
 
-const _require = require('esm')(module) // eslint-disable-line
-module.exports = _require('./module').default
+const context = require('./lib/context');
+const primitive = require('./lib/primitive');
+
+const supportedOutputFormats = new Set([
+  'png',
+  'jpg',
+  'svg',
+  'gif'
+])
+
+/**
+ * Reproduces the given input image using geometric primitives.
+ *
+ * Returns a Promise for the generated model.
+ *
+ * Available output formats:
+ * - png
+ * - jpg
+ * - svg
+ * - gif
+ *
+ * @name primitive
+ * @function
+ *
+ * @param {Object} opts - Configuration options
+ * @param {string} opts.input - Input image to process (can be a local path, http url, or data url)
+ * @param {string} [opts.output] - Path to generate output image
+ * @param {number} [opts.numSteps=200] - Number of steps to process [1, 1000]
+ * @param {number} [opts.minEnergy] - Minimum energy to stop processing early [0, 1]
+ * @param {number} [opts.shapeAlpha=128] - Alpha opacity of shapes [0, 255]
+ * @param {string} [opts.shapeType=traingle] - Type of shapes to use
+ * @param {number} [opts.numCandidates=1] - Number of top-level candidates per step [1, 32]
+ * @param {number} [opts.numCandidateShapes=50] - Number of random candidate shapes per step [10, 1000]
+ * @param {number} [opts.numCandidateMutations=100] - Number of candidate mutations per step [10, 500]
+ * @param {number} [opts.numCandidateExtras=0] - Number of extra candidate shapes per step [0, 16]
+ * @param {function} [opts.onStep] - Optional async function taking in the model and step index
+ * @param {function} [opts.log=noop] - Optional logging function (console.log to enable logging)
+ *
+ * @return {Promise}
+ */
+module.exports = async (opts) => {
+  const {
+    input,
+    output,
+    onStep,
+    numSteps = 200,
+    nthFrame = 0,
+    ...rest
+  } = opts
+
+  ow(opts, ow.object.label('opts'))
+  ow(input, ow.string.nonEmpty.label('input'))
+  ow(nthFrame, ow.number.integer)
+  ow(numSteps, ow.number.integer.positive.label('numSteps'))
+  if (output) ow(output, ow.string.nonEmpty.label('output'))
+
+  const ext = output && path.extname(output).slice(1).toLowerCase()
+  const isGIF = (ext === 'gif')
+  const isSVG = (ext === 'svg')
+
+  if (output && !supportedOutputFormats.has(ext)) {
+    throw new Error(`unsupported output format "${ext}"`)
+  }
+
+  const target = await context.loadImage(input)
+
+  const tempDir = isGIF && tempy.directory()
+  const tempOutput = isGIF && path.join(tempDir, 'frame-%d.png')
+  const frames = []
+
+  const { model, step } = await primitive({
+    ...rest,
+    context,
+    target,
+    onStep: async (model, step) => {
+      if (onStep) await onStep(model, step)
+
+      if (isGIF) {
+        if (nthFrame <= 0 || (step - 1) % nthFrame === 0) {
+          const frame = tempOutput.replace('%d', frames.length)
+          await context.saveImage(model.current, frame)
+          frames.push(frame)
+        }
+      } else if (output) {
+        if (nthFrame > 0 && (step - 1) % nthFrame === 0) {
+          const frame = output.replace('.', `-${step - 1}.`)
+          await context.saveImage(model.current, frame, opts)
+        }
+      }
+    }
+  })
+
+  const time = new Time()
+
+  for (let s = 1; s <= numSteps; ++s) {
+    time.start(`step ${s}`)
+
+    const candidates = await step(s)
+
+    /* console.log(`${s})`, {
+      time: time.end(`step ${s}`),
+      candidates,
+      score: model.score
+    }) */
+
+    if (!candidates) break
+  }
+
+  if (output) {
+    if (isGIF) {
+      await context.saveGIF(frames, output, opts)
+      await rmfr(tempDir)
+    } else if (isSVG) {
+      await context.saveSVG(model, output, opts)
+    } else {
+      await context.saveImage(model.current, output, opts)
+    }
+  }
+
+  return model
+}
diff --git a/node_modules/primitive/module.js b/node_modules/primitive/module.js
deleted file mode 100644
index 5d2f347..0000000
--- a/node_modules/primitive/module.js
+++ /dev/null
@@ -1,126 +0,0 @@
-// node es module entrypoint
-
-import ow from 'ow'
-import path from 'path'
-import rmfr from 'rmfr'
-import tempy from 'tempy'
-import Time from 'time-diff'
-
-import context from './lib/context'
-import primitive from './lib/primitive'
-
-const supportedOutputFormats = new Set([
-  'png',
-  'jpg',
-  'svg',
-  'gif'
-])
-
-/**
- * Reproduces the given input image using geometric primitives.
- *
- * Returns a Promise for the generated model.
- *
- * Available output formats:
- * - png
- * - jpg
- * - svg
- * - gif
- *
- * @name primitive
- * @function
- *
- * @param {Object} opts - Configuration options
- * @param {string} opts.input - Input image to process (can be a local path, http url, or data url)
- * @param {string} [opts.output] - Path to generate output image
- * @param {number} [opts.numSteps=200] - Number of steps to process [1, 1000]
- * @param {number} [opts.minEnergy] - Minimum energy to stop processing early [0, 1]
- * @param {number} [opts.shapeAlpha=128] - Alpha opacity of shapes [0, 255]
- * @param {string} [opts.shapeType=traingle] - Type of shapes to use
- * @param {number} [opts.numCandidates=1] - Number of top-level candidates per step [1, 32]
- * @param {number} [opts.numCandidateShapes=50] - Number of random candidate shapes per step [10, 1000]
- * @param {number} [opts.numCandidateMutations=100] - Number of candidate mutations per step [10, 500]
- * @param {number} [opts.numCandidateExtras=0] - Number of extra candidate shapes per step [0, 16]
- * @param {function} [opts.onStep] - Optional async function taking in the model and step index
- * @param {function} [opts.log=noop] - Optional logging function (console.log to enable logging)
- *
- * @return {Promise}
- */
-export default async (opts) => {
-  const {
-    input,
-    output,
-    onStep,
-    numSteps = 200,
-    nthFrame = 0,
-    ...rest
-  } = opts
-
-  ow(opts, ow.object.label('opts'))
-  ow(input, ow.string.nonEmpty.label('input'))
-  ow(nthFrame, ow.number.integer)
-  ow(numSteps, ow.number.integer.positive.label('numSteps'))
-  if (output) ow(output, ow.string.nonEmpty.label('output'))
-
-  const ext = output && path.extname(output).slice(1).toLowerCase()
-  const isGIF = (ext === 'gif')
-
-  if (output && !supportedOutputFormats.has(ext)) {
-    throw new Error(`unsupported output format "${ext}"`)
-  }
-
-  const target = await context.loadImage(input)
-
-  const tempDir = isGIF && tempy.directory()
-  const tempOutput = isGIF && path.join(tempDir, 'frame-%d.png')
-  const frames = []
-
-  const { model, step } = await primitive({
-    ...rest,
-    context,
-    target,
-    onStep: async (model, step) => {
-      if (onStep) await onStep(model, step)
-
-      if (isGIF) {
-        if (nthFrame <= 0 || (step - 1) % nthFrame === 0) {
-          const frame = tempOutput.replace('%d', frames.length)
-          await context.saveImage(model.current, frame)
-          frames.push(frame)
-        }
-      } else if (output) {
-        if (nthFrame > 0 && (step - 1) % nthFrame === 0) {
-          const frame = output.replace('.', `-${step - 1}.`)
-          await context.saveImage(model.current, frame, opts)
-        }
-      }
-    }
-  })
-
-  const time = new Time()
-
-  for (let s = 1; s <= numSteps; ++s) {
-    time.start(`step ${s}`)
-
-    const candidates = await step(s)
-
-    console.log(`${s})`, {
-      time: time.end(`step ${s}`),
-      candidates,
-      score: model.score
-    })
-
-    if (!candidates) break
-  }
-
-  if (output) {
-    if (isGIF) {
-      await context.saveGIF(frames, output, opts)
-      await rmfr(tempDir)
-    } else {
-      await context.saveImage(model.current, output, opts)
-    }
-  }
-
-  return model
-}
